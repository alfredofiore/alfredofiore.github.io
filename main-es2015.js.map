{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/acquisto/acquisto.component.html","./src/app/amministratore/add-admin/add-admin.component.html","./src/app/amministratore/gestione-prodotti/gestione-prodotti.component.html","./src/app/amministratore/login-admin/login-admin.component.html","./src/app/amministratore/modifica-dati-admin/modifica-dati-admin.component.html","./src/app/amministratore/modifica-password-admin/modifica-password-admin.component.html","./src/app/app.component.html","./src/app/carrello/carrello.component.html","./src/app/catalogo/catalogo.component.html","./src/app/catalogo/dettaglio-prodotto/dettaglio-prodotto.component.html","./src/app/footer/contatti/contatti.component.html","./src/app/footer/footer.component.html","./src/app/footer/metodi-pagamento/metodi-pagamento.component.html","./src/app/home/home.component.html","./src/app/navbar/navbar.component.html","./src/app/ordini/ordini.component.html","./src/app/utenti/gestione-dati/gestione-dati.component.html","./src/app/utenti/gestione-dati/modifica-dati/modifica-dati.component.html","./src/app/utenti/gestione-dati/modifica-password/modifica-password.component.html","./src/app/utenti/login/login.component.html","./src/app/utenti/registrazione/registrazione.component.html","./node_modules/tslib/tslib.es6.js","./src/app/acquisto/acquisto.component.css","./src/app/acquisto/acquisto.component.ts","./src/app/amministratore/add-admin/add-admin.component.css","./src/app/amministratore/add-admin/add-admin.component.ts","./src/app/amministratore/amministratore.ts","./src/app/amministratore/gestione-prodotti/gestione-prodotti.component.css","./src/app/amministratore/gestione-prodotti/gestione-prodotti.component.ts","./src/app/amministratore/login-admin/login-admin.component.css","./src/app/amministratore/login-admin/login-admin.component.ts","./src/app/amministratore/login-admin/login-admin.service.ts","./src/app/amministratore/modifica-dati-admin/modifica-dati-admin.component.css","./src/app/amministratore/modifica-dati-admin/modifica-dati-admin.component.ts","./src/app/amministratore/modifica-password-admin/modifica-password-admin.component.css","./src/app/amministratore/modifica-password-admin/modifica-password-admin.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/carrello/carrello.component.css","./src/app/carrello/carrello.component.ts","./src/app/carrello/carrello.service.ts","./src/app/carrello/carrello.ts","./src/app/catalogo/catalogo.component.css","./src/app/catalogo/catalogo.component.ts","./src/app/catalogo/catalogo.service.ts","./src/app/catalogo/dettaglio-prodotto/dettaglio-prodotto.component.css","./src/app/catalogo/dettaglio-prodotto/dettaglio-prodotto.component.ts","./src/app/catalogo/prodotto.ts","./src/app/footer/contatti/contatti.component.css","./src/app/footer/contatti/contatti.component.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.ts","./src/app/footer/metodi-pagamento/metodi-pagamento.component.css","./src/app/footer/metodi-pagamento/metodi-pagamento.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.ts","./src/app/ordini/ordini.component.css","./src/app/ordini/ordini.component.ts","./src/app/ordini/ordini.service.ts","./src/app/utenti/gestione-dati/gestione-dati.component.css","./src/app/utenti/gestione-dati/gestione-dati.component.ts","./src/app/utenti/gestione-dati/modifica-dati/modifica-dati.component.css","./src/app/utenti/gestione-dati/modifica-dati/modifica-dati.component.ts","./src/app/utenti/gestione-dati/modifica-password/modifica-password.component.css","./src/app/utenti/gestione-dati/modifica-password/modifica-password.component.ts","./src/app/utenti/login.service.ts","./src/app/utenti/login/login.component.css","./src/app/utenti/login/login.component.ts","./src/app/utenti/login/login.ts","./src/app/utenti/registrazione/registrazione.component.css","./src/app/utenti/registrazione/registrazione.component.ts","./src/app/utenti/registrazione/registrazione.service.ts","./src/app/utenti/utente.ts","./src/app/util/carta.service.ts","./src/app/util/carta.ts","./src/app/util/controllo-campi.service.ts","./src/app/util/indirizzo.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,6lCAA8hC,uBAAuB,GAAG,0BAA0B,kGAAkG,sBAAsB,MAAM,yBAAyB,8FAA8F,sBAAsB,GAAG,wBAAwB,8FAA8F,4BAA4B,w6BAAw6B,mBAAmB,GAAG,sBAAsB,kGAAkG,kBAAkB,MAAM,qBAAqB,8FAA8F,kBAAkB,GAAG,oBAAoB,8FAA8F,wBAAwB,o1CAAo1C,eAAe,2kCAA2kC,eAAe,+SAA+S,eAAe,2TAA2T,eAAe,mTAAmT,eAAe,ksCAAksC,6qBAA6qB,cAAc,0MAA0M,2CAA2C,uFAAuF,uCAAuC,gRAAgR,eAAe,GAAG,YAAY,4QAA4Q,8BAA8B,yTAAyT,iBAAiB,uhCAAuhC,gBAAgB,gZAAgZ,iBAAiB,uJAAuJ,oTAAoT,cAAc,uTAAuT,kFAAkF,iBAAiB,8dAA8d,iBAAiB,s3BAAs3B,oRAAoR,iBAAiB,4NAA4N,iBAAiB,uNAAuN,iBAAiB,yNAAyN,iBAAiB,iLAAiL,iBAAiB,2BAA2B,yFAAyF,QAAQ,yNAAyN,iBAAiB,qGAAqG,QAAQ,oKAAoK,iBAAiB,2BAA2B,wFAAwF,GAAG,o3BAAo3B,wBAAwB,y8BAAy8B,iBAAiB,wrBAAwrB,iBAAiB,+hBAA+hB,iBAAiB,qeAAqe,iBAAiB,2BAA2B,0EAA0E,0DAA0D,GAAG,sGAAsG,OAAO,2IAA2I,OAAO,qTAAqT,iBAAiB,2BAA2B,2EAA2E,0DAA0D,6BAA6B,yCAAyC,0CAA0C,4cAA4c,iBAAiB,6oB;;;;;;;;;;;;ACAv+nB;AAAe,wgBAAyc,iBAAiB,uEAAuE,6HAA6H,6IAA6I,iKAAiK,kbAAkb,iBAAiB,8DAA8D,sHAAsH,8bAA8b,iBAAiB,iEAAiE,2HAA2H,wbAAwb,iBAAiB,+DAA+D,uHAAuH,uIAAuI,sJAAsJ,kcAAkc,iBAAiB,kEAAkE,+BAA+B,6HAA6H,wIAAwI,odAAod,iBAAiB,0EAA0E,6HAA6H,wIAAwI,oxBAAoxB,wMAAwM,4a;;;;;;;;;;;;ACAlsL;AAAe,6JAA8F,iBAAiB,ghBAAghB,yiCAAyiC,eAAe,iDAAiD,iBAAiB,qDAAqD,cAAc,kKAAkK,cAAc,4EAA4E,wBAAwB,iDAAiD,qBAAqB,iDAAiD,mBAAmB,mDAAmD,sBAAsB,+jCAA+jC,okBAAokB,qKAAqK,gBAAgB,iIAAiI,eAAe,8HAA8H,iBAAiB,gLAAgL,mBAAmB,sIAAsI,iBAAiB,mJAAmJ,sBAAsB,8IAA8I,iBAAiB,gJAAgJ,mBAAmB,8KAA8K,iBAAiB,gJAAgJ,iBAAiB,yKAAyK,iBAAiB,sIAAsI,oBAAoB,2KAA2K,iBAAiB,6TAA6T,4hBAA4hB,qKAAqK,kBAAkB,oFAAoF,oBAAoB,yLAAyL,cAAc,2KAA2K,4M;;;;;;;;;;;;ACAxiP;AAAe,kUAAmQ,4DAA4D,oXAAoX,iBAAiB,oJAAoJ,WAAW,0HAA0H,iBAAiB,2MAA2M,iLAAiL,4dAA4d,kBAAkB,GAAG,qBAAqB,oFAAoF,m5E;;;;;;;;;;;;ACAn9D;AAAe,4dAA6Z,iBAAiB,gIAAgI,kaAAka,iBAAiB,uIAAuI,2ZAA2Z,iBAAiB,gJAAgJ,mHAAmH,6nBAA6nB,gNAAgN,wb;;;;;;;;;;;;ACAnnF;AAAe,smBAAuiB,iBAAiB,8HAA8H,wHAAwH,iaAAia,iBAAiB,gIAAgI,0HAA0H,4bAA4b,iBAAiB,wIAAwI,kIAAkI,2oBAA2oB,gNAAgN,wb;;;;;;;;;;;;ACA3hG;AAAe,8W;;;;;;;;;;;;ACAf;AAAe,0LAA2H,iBAAiB,kiBAAkiB,eAAe,8IAA8I,6CAA6C,eAAe,+IAA+I,cAAc,uOAAuO,qLAAqL,+DAA+D,KAAK,2SAA2S,iBAAiB,qUAAqU,+DAA+D,4PAA4P,aAAa,+TAA+T,oLAAoL,aAAa,uHAAuH,iBAAiB,oTAAoT,iBAAiB,kV;;;;;;;;;;;;ACAz6G;AAAe,2OAA4K,qBAAqB,qJAAqJ,eAAe,eAAe,mPAAmP,gBAAgB,8PAA8P,gBAAgB,uNAAuN,gcAAgc,eAAe,kLAAkL,iDAAiD,eAAe,mJAAmJ,sHAAsH,iBAAiB,2HAA2H,mBAAmB,+JAA+J,6DAA6D,mBAAmB,oIAAoI,shBAAshB,iBAAiB,0X;;;;;;;;;;;;ACA9mG;AAAe,oYAAqU,eAAe,2JAA2J,eAAe,mJAAmJ,iBAAiB,mIAAmI,mBAAmB,wKAAwK,mBAAmB,gIAAgI,gRAAgR,sBAAsB,gPAAgP,oNAAoN,6EAA6E,2CAA2C,KAAK,2JAA2J,iBAAiB,mSAAmS,WAAW,4E;;;;;;;;;;;;ACAn8E;AAAe,6KAA8G,gdAAgd,eAAe,i2BAAi2B,eAAe,27B;;;;;;;;;;;;ACA58C;AAAe,oaAAqW,uMAAuM,iBAAiB,oMAAoM,kQAAkQ,+KAA+K,8OAA8O,sE;;;;;;;;;;;;ACA/6C;AAAe,6KAA8G,82D;;;;;;;;;;;;ACA7H;AAAe,wJAAyF,sLAAsL,cAAc,8QAA8Q,cAAc,6QAA6Q,cAAc,0K;;;;;;;;;;;;ACAn2B;AAAe,mYAAoU,4KAA4K,gCAAgC,oUAAoU,iBAAiB,mKAAmK,oTAAoT,+jBAA+jB,6LAA6L,scAAsc,qBAAqB,gNAAgN,6CAA6C,sHAAsH,sIAAsI,8RAA8R,0NAA0N,aAAa,8H;;;;;;;;;;;;ACAhiH;AAAe,wtBAAypB,0BAA0B,kEAAkE,YAAY,oEAAoE,oDAAoD,kCAAkC,iDAAiD,iEAAiE,QAAQ,8OAA8O,eAAe,4LAA4L,6CAA6C,eAAe,qGAAqG,yBAAyB,gN;;;;;;;;;;;;ACAvpD;AAAe,ipB;;;;;;;;;;;;ACAf;AAAe,weAAya,iBAAiB,8JAA8J,8aAA8a,iBAAiB,oKAAoK,uaAAua,iBAAiB,8KAA8K,kJAAkJ,kbAAkb,iBAAiB,sKAAsK,ubAAub,iBAAiB,wKAAwK,07BAA07B,gOAAgO,ikBAAikB,gMAAgM,ymCAAymC,iBAAiB,sXAAsX,qQ;;;;;;;;;;;;ACAtiN;AAAe,gMAAiI,iBAAiB,4iBAA4iB,iBAAiB,4HAA4H,sHAAsH,mZAAmZ,iBAAiB,8HAA8H,wHAAwH,8aAA8a,iBAAiB,sIAAsI,gIAAgI,0c;;;;;;;;;;;;ACA/yE;AAAe,uwBAAwsB,iBAAiB,43BAA43B,WAAW,wZAAwZ,qvB;;;;;;;;;;;;ACAvgE;AAAe,8WAA+S,iBAAiB,6aAA6a,oHAAoH,YAAY,oCAAoC,eAAe,qCAAqC,gBAAgB,mCAAmC,aAAa,qCAAqC,gBAAgB,2CAA2C,qBAAqB,sCAAsC,iBAAiB,sCAAsC,iBAAiB,+8BAA+8B,iBAAiB,iGAAiG,yWAAyW,iBAAiB,oGAAoG,qcAAqc,iBAAiB,qGAAqG,oaAAoa,iBAAiB,qHAAqH,iCAAiC,iBAAiB,+aAA+a,iBAAiB,qGAAqG,sKAAsK,qrBAAqrB,iBAAiB,gGAAgG,gdAAgd,iBAAiB,yOAAyO,iCAAiC,yBAAyB,oYAAoY,iBAAiB,sGAAsG,+lBAA+lB,iBAAiB,4GAA4G,sYAAsY,iBAAiB,+GAA+G,8dAA8d,iBAAiB,2BAA2B,yHAAyH,QAAQ,qMAAqM,oTAAoT,oHAAoH,iBAAiB,qIAAqI,QAAQ,iMAAiM,iTAAiT,uDAAuD,iBAAiB,wHAAwH,GAAG,+LAA+L,0iB;;;;;;;;;;;;ACAzoU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;ACnMA;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAN;AAEU;AACS;AACvB;AACD;AACK;AACd;AACa;AACtB;AACM;AACK;AAQ3C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAoB,OAAqB,EAAU,MAAc,EAC7C,SAAgC,EAChC,YAAsB,EACtB,eAAgC,EAChC,YAA0B,EAC1B,QAAkB;QALlB,YAAO,GAAP,OAAO,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC7C,cAAS,GAAT,SAAS,CAAuB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QAEtC,qBAAgB,GAAG,IAAI,gEAAS,EAAE,CAAC;QACnC,OAAE,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC/B,mBAAc,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;QACrD,oBAAe,GAAG,CAAC,CAAC;QACpB,iBAAY,GAAG,IAAI,CAAC,cAAc,CAAC;QACnC,kBAAa,GAAG,QAAQ,CAAC;QACzB,gCAAgC;QAChC,gBAAW,GAAG,MAAM,CAAC;QAKrB,iBAAY,GAAG,IAAI,gEAAS,EAAE,CAAC;QAC/B,eAAU,GAAG,KAAK,CAAC;QAMnB,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,YAAO,GAAG,KAAK,CAAC;QAChB,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC9C,aAAQ,GAAG,IAAI,kDAAK,EAAE,CAAC;QACvB,cAAS,GAAG;YACV,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,KAAK;YACnB,QAAQ,EAAE,KAAK;SAEhB,CAAC;QACF,YAAO,GAAG,IAAI,CAAC;IAjC2B,CAAC;IAmC3C,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,cAAc,IAAI,EAAE,EAAE;YAC7B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;YAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;SAClF;QACD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC9E,qDAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EACpC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EACnE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACzC,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,YAAY;YACZ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACrD,SAAS;YACT,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;gBACV,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;iBAC1B;aACF;YACD,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;gBAClB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;aAC7C;QACH,CAAC,CACF,CAAC;IACN,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;gBACpD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACnE;SACF;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC;IAC/B,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,EAAE,CAAC,IAAI,EAAE;gBACvC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC;aACxB;SACF;QACD,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEO,IAAI,CAAC,OAAO;QAClB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB;IACH,CAAC;IAED,kBAAkB;IAClB,SAAS,CAAC,OAAO;QACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,cAAc,CAAC,OAAO;QACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAED,eAAe,CAAC,OAAO;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAEO,cAAc,CAAC,OAAO;QAC5B,IAAI,MAAM,GAAG,IAAI,gEAAS,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACrD,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAChC;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;SAC5B;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;aACvG,IAAI,CACH,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,KAAK,IAAI,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBACjC,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aACzB;QACH,CAAC,CACF,CAAC;IACN,CAAC;IACH,kBAAkB;IACR,OAAO,CAAC,OAAO;QACrB,6CAA6C;QAC7C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACzB,oCAAoC;IACtC,CAAC;IACO,MAAM,CAAC,OAAO;QACpB,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;IACD,YAAY,CAAC,QAAgB;QAClC,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAEO,gBAAgB,CAAC,QAAgB;QACvC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACnD,QAAQ,IAAI,EAAE;YACZ,KAAK,YAAY,CAAC,CAAC;gBACjB,OAAO,YAAY,CAAC;aACrB;YACD,KAAK,MAAM,CAAC,CAAC;gBACX,OAAO,MAAM,CAAC;aACf;YACD,KAAK,kBAAkB,CAAC,CAAC;gBACvB,OAAO,kBAAkB,CAAC;aAC3B;SACF;IACH,CAAC;IAEO,UAAU,CAAC,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACnD,CAAC;IAEO,cAAc,CAAC,SAAS;QAC9B,IAAI,SAAS,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;gBAChG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;aACjC;SACF;QACD,IAAI,SAAS,KAAK,cAAc,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE;gBACzG,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;aACpC;SACF;QACD,IAAI,SAAS,KAAK,aAAa,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;gBAChD,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACzD,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE;gBACxE,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;aAChC;SACF;QACD,IAAI,SAAS,KAAK,UAAU,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;gBAC1C,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;oBACtD,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC7D,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;aAChC;SACF;QACD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;IACzE,CAAC;IACO,WAAW,CAAC,OAAO;QACzB,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QAExD,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC;aACnD,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,KAAK,IAAI,EAAE;gBAChB,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACzD;qBAAM;oBACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACrB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;iBACpC;gBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,kDAAK,EAAE,CAAC;gBAC5B,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;gBACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAChC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;aAChC;QACH,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;IAEN,CAAC;IAEM,OAAO,CAAC,IAAU;QACvB;WACG;QACH,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC/D,OAAO,aAAa,CAAC;IACvB,CAAC;CAEF;;YArQ8B,kEAAY;YAAkB,sDAAM;YAClC,mFAAqB;YAClB,mEAAQ;YACL,0EAAe;YAClB,gEAAY;YAChB,yDAAQ;;AAP3B,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAuQ7B;AAvQ6B;;;;;;;;;;;;;ACnB9B;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;ACAgB;AACJ;AACpB;AACH;AACI;AAOtD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAmB,aAAgC,EAChC,SAAgC,EAC/B,YAAsB;QAFvB,kBAAa,GAAb,aAAa,CAAmB;QAChC,cAAS,GAAT,SAAS,CAAuB;QAC/B,iBAAY,GAAZ,YAAY,CAAU;QAE1C,SAAI,GAAG;YACL,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,IAAI;YAChB,EAAE,EAAG,IAAI;YACT,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;SAChB,CAAC;QACF,aAAQ,GAAmB,IAAI,8DAAc,EAAE,CAAC;QAEhD,iBAAY,GAAa,EAAE,CAAC;QAC5B,eAAU,GAAa,EAAE,CAAC;IAhBoB,CAAC;IAmB/C,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAC/D,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzD,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACnD,CAAC,CACF,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAClE,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACnD,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,SAAS,CAAC,IAAI;QACpB,IAAI,IAAI,KAAK,eAAe,EAAE;YAC5B,MAAM,CAAC,GAAY,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC3E,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;gBACzF,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;oBACrB,kCAAkC;oBAClC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBAC3B;gBACD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;aACtB;SACF;QACD,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACxE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACxB;SACF;QACD,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBAC9E,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aAC3B;SACF;QACD,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,MAAM,CAAC,GAAY,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAC5E,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,EAAE;oBACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACxB,kCAAkC;oBAClC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBAC7B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;iBAC/B;aACF;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aAC7B;SACF;QACD,IAAI,IAAI,KAAK,UAAU,EAAE;YACvB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAClF,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC5B;SAEF;QACD,IAAI,IAAI,KAAK,kBAAkB,EAAE;YAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAC9E,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aAC5B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC7B;SACF;IACH,CAAC;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC5G,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACtE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC5E,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACxE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC9E,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC/E,CAAC;IAEO,KAAK,CAAC,OAAO;QACnB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,IAAI,CAC/E,MAAM,CAAC,EAAE;YACP,IAAI,MAAM,KAAK,IAAI,EAAE;gBACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;iBAAM;gBACL,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAChC;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,WAAW;QACjB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,8DAAc,EAAE,CAAC;YACrC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC5B;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;CAGF;;YAhJmC,kFAAiB;YACrB,mFAAqB;YACjB,mEAAQ;;AAJ/B,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8OAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAkJ7B;AAlJ6B;;;;;;;;;;;;;;;;;ACXvB,MAAM,cAAc;CAO1B;;;;;;;;;;;;;ACPD;AAAe,6GAA8C,+L;;;;;;;;;;;;;;;;;;;;;;ACAgB;AACJ;AACvB;AACkB;AACf;AACC;AAEtD,MAAM,MAAM,GAAY;IACtB;QACE,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,qCAAqC;KAC/C,EAAE;QACD,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,mBAAmB;KAC7B;CACF,CAAC;AAQF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAEpC,YAAoB,UAA2B,EAC3B,YAA+B,EAC/B,YAAsB,EACvB,SAAgC;QAH/B,eAAU,GAAV,UAAU,CAAiB;QAC3B,iBAAY,GAAZ,YAAY,CAAmB;QAC/B,iBAAY,GAAZ,YAAY,CAAU;QACvB,cAAS,GAAT,SAAS,CAAuB;QAGnD,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACzC,SAAI,GAAG,CAAC,CAAC;QACT,aAAQ,GAAG,CAAC,CAAC;QAEb,WAAM,GAAG,IAAI,CAAC;QACd,mBAAc,GAAG,EAAE,CAAC;QAEpB,gBAAW,GAAG,IAAI,kEAAQ,EAAE,CAAC;QAC7B,kBAAa,GAAG,IAAI,kEAAQ,EAAE,CAAC;QAE/B,mBAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEtC,SAAI,GAAG;YACL,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,aAAQ,GAAG;YACT,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,MAAM;YACnB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,MAAM;SACjB,CAAC;IA/BoD,CAAC;IAmCvD,QAAQ;IACR,CAAC;IAED,IAAI,SAAS;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,OAAO,IAAI,CAAC,QAAQ;aACjB,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,iBAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAK,QAAQ,EAAG,CAAC;aAClD,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7F,CAAC;IAEM,UAAU,CAAC,MAAM;QACtB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,gBAAgB,CAAC,WAAW,EAAE,UAAqB;QACjD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;YACvC,sBAAsB;YACtB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG;gBACV,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,KAAK;gBAClB,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,KAAK;gBACf,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,KAAK;aAChB,CAAC;YACF,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,IAAI,kEAAQ,EAAE,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;iBACxB,IAAI,CACH,QAAQ,CAAC,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAC/C,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACvC,CAAC,CACF,CAAC;SACL;IACH,CAAC;IAEO,UAAU,CAAC,MAAM;QACvB,IAAI,MAAM,KAAK,MAAM,EAAE;YACrB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrD;QACD,IAAI,MAAM,KAAK,aAAa,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YACjF,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACnE;QACD,IAAI,MAAM,KAAK,UAAU,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5D,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAClD;QACD,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9C;QACD,IAAI,MAAM,KAAK,UAAU,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACrF,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5D,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAElD;QACD,IAAI,MAAM,KAAK,WAAW,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9D,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAEpD;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE;YACpE,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SAC3B;QACD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAEO,SAAS,CAAC,IAAI;QACpB,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,QAAQ,CAAC;SACjB;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,KAAK;QACX,IAAI,CAAC,QAAQ,GAAG;YACd,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,MAAM;YACnB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,MAAM;SACjB,CAAC;QACF,IAAI,CAAC,IAAI,GAAG;YACV,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;SACf,CAAC;IACJ,CAAC;IAEO,KAAK;QACX,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;aACtG,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,6BAA6B;gBAC7B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,QAAQ,CAAC,CAAC;aAC/C;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,2BAA2B;gBAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;aACtD;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,2BAA2B;YAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACN,CAAC;IAED,eAAe,CAAC,OAAO,EAAE,YAAsB;QAC7C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IACpE,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;aAClF,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,4BAA4B;gBAC5B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,0BAA0B;gBAC1B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;aACtD;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,0BAA0B;YAC1B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACN,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE;aAClC,SAAS,CACR,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,EAAE,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;YAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uBAAuB;IACvB,KAAK,CAAC,KAAY;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;CAIF;;YA7OiC,iFAAe;YACb,kFAAiB;YACjB,mEAAQ;YACZ,mFAAqB;;AALxC,yBAAyB;IANrC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,sQAAiD;;KAElD,CAAC;GAEW,yBAAyB,CA+OrC;AA/OqC;;;;;;;;;;;;;ACvBtC;AAAe,6GAA8C,+K;;;;;;;;;;;;;;;;;;;;;;ACAR;AACK;AACR;AACoB;AACf;AACd;AAC2B;AAQpE,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAO9B,YAAY,MAAsB,EAAU,YAAsB,EAC9C,UAA6B,EAAU,MAAc,EACrD,eAAgC;QAFR,iBAAY,GAAZ,YAAY,CAAU;QAC9C,eAAU,GAAV,UAAU,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACrD,oBAAe,GAAf,eAAe,CAAiB;QAJpD,aAAQ,GAAG,IAAI,8DAAc,EAAE,CAAC;QAahC,cAAS,GAAG,UAAU,CAAC;QACvB,0BAA0B;QAC1B,SAAI,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;QAEtC,sBAAsB;QACtB,iBAAY,GAAG,KAAK,CAAC;QAbnB,iEAAiE;QACjE,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAYD,IAAI,CAAC,OAAO;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjC;IACH,CAAC;IAEM,YAAY;QACjB,IAAI,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;YACjC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;SAC7B;IACH,CAAC;IAEM,KAAK,CAAC,OAAO;QAClB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;aAC/B,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC;gBACvC,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC;gBACvC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;gBAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE;qBACrC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAClB,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,EAAE,CAAC;oBACxC,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACvF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;gBAC3D,CAAC,EACC,KAAK,CAAC,EAAE;oBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;gBACxC,CAAC,CACF,CAAC;gBACJ,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;aACtE;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC;gBACtC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC9B;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CACF,CAAC;QACJ,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAEO,QAAQ,CAAC,QAAQ;QACvB,qCAAqC;QACrC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ,CAAC,IAAI;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IAED;;QAEI;IAEJ,MAAM;QACJ,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEvC,CAAC;IAED,YAAY,CAAC,OAAO;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAElC,CAAC;CAEF;;YAlGqB,yEAAc;YAAwB,mEAAQ;YAClC,sEAAiB;YAAkB,sDAAM;YACpC,iFAAe;;AANZ;IAAvC,+DAAS,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oDAA2B;AAHvD,mBAAmB;IAN/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,oPAA2C;;KAE5C,CAAC;GAEW,mBAAmB,CAyG/B;AAzG+B;;;;;;;;;;;;;;;;;;;;ACbW;AACoB;AACtB;AAMzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAK5B,YAAoB,UAAsB,EAAU,MAAc;QAA9C,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFlE,mBAAc,GAAG,KAAK,CAAC;IAE+C,CAAC;IAEhE,SAAS,CAAC,IAAoB;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAiB,qFAAqF,EAC/H,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IACtB,CAAC;IAEM,cAAc,CAAC,IAAI,EAAE,IAAoB;QAC9C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,uEAAuE,EAC5G,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC3C,CAAC;IAEM,SAAS,CAAC,IAAoB;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,4EAA4E,EACjH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC;IAEM,YAAY,CAAC,IAAoB;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,4EAA4E,EAC/G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC;IAEM,UAAU,CAAC,IAAI,EAAE,IAAI;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,oEAAoE,EAAE,IAAI,EAC/G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEO,UAAU,CAAC,KAAqB;QACtC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,aAAa,CAAC;iBACvC,MAAM,CAAC,UAAU,EAAG,KAAK,CAAC,QAAQ,CAAC;SACrC,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;;YAzCiC,+DAAU;YAAkB,sDAAM;;AALvD,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CA8C7B;AA9C6B;;;;;;;;;;;;;ACT9B;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;;ACAgB;AACJ;AACvB;AAEI;AACb;AAOzC,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAErC,YAAmB,eAAkC,EAClC,SAAgC,EAC/B,MAAc,EACd,YAAsB;QAHvB,oBAAe,GAAf,eAAe,CAAmB;QAClC,cAAS,GAAT,SAAS,CAAuB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAU;QAE1C,gBAAW,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;QAG/C,aAAQ,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;SAC9B,CAAC;QACF,SAAI,GAAG;YACL,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,IAAI;SACZ,CAAC;IAf4C,CAAC;IAiB/C,QAAQ;IACR,CAAC;IAEM,UAAU,CAAC,IAAI;QACpB,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACxB;SACJ;QACD,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBAC5E,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aAC3B;SACJ;QACD,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBAC5E,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACzB;SACF;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IAC3C,CAAC;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI;YAC9C,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO;YAClD,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YAC9C,OAAO,KAAK,CAAC;SACd;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,cAAc,CAAC,OAAO;QAC3B,kBAAkB;QAClB,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC;aAChE,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,IAAI,GAAG;gBACV,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI;aACZ,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,WAAW;QAChB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;CACF;;YAzFqC,kFAAiB;YACvB,mFAAqB;YACvB,sDAAM;YACA,mEAAQ;;AAL/B,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,4QAAmD;;KAEpD,CAAC;GACW,0BAA0B,CA2FtC;AA3FsC;;;;;;;;;;;;;ACZvC;AAAe,6GAA8C,+M;;;;;;;;;;;;;;;;;;;;;ACAgB;AAE3B;AACqB;AACjB;AACb;AAOzC,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAWzC,YAAmB,eAAkC,EACjC,YAAsB,EACtB,MAAc,EACf,SAAgC;QAHhC,oBAAe,GAAf,eAAe,CAAmB;QACjC,iBAAY,GAAZ,YAAY,CAAU;QACtB,WAAM,GAAN,MAAM,CAAQ;QACf,cAAS,GAAT,SAAS,CAAuB;QATnD,SAAI,GAAG;YACL,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;SACZ,CAAC;QAQF,gBAAW,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;IAHQ,CAAC;IAKxD,QAAQ;IACR,CAAC;IAEM,SAAS;QACd,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,IAAI,CAAC,WAAW,EAAE;gBAClD,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACxB;SACF;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;gBACtG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACxB;SACF;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC/E,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACzB;SACF;IACH,CAAC;IAEM,KAAK,CAAC,OAAO;QAClB,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC;aAChE,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,WAAW;QAChB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;SACH;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;CAEF;;YA7DqC,kFAAiB;YACnB,mEAAQ;YACd,sDAAM;YACJ,mFAAqB;;AAdxC,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,6BAA6B;QACvC,wRAAuD;;KAExD,CAAC;GACW,8BAA8B,CAwE1C;AAxE0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ4C;AACrB;AACsC;AAC5C;AACM;AAEnB;AACO;AACkC;AACxB;AAEvB;AACc;AACW;AAEuB;AACO;AACzB;AAEvE,MAAM,MAAM,GAAW;IACvB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,4EAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,oGAAsB,EAAE;IAC5D,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,2DAAY,EAAC;IAChD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sGAAmB,EAAC;IACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAC;IAC7C,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,oHAA0B,EAAC;IACnE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,mGAAqB,EAAC;IAC7D,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,6GAAwB,EAAC;IAChE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,sFAAiB,EAAC;IACjD,6BAA6B;IAC7B,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CAAC,CAAC;AAMhC,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,+DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,6DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACxC7B;AAAe,6GAA8C,+H;;;;;;;;;;;;;;;;;;ACAP;AACZ;AAQ1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAGvB,YAAqB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAC/C,UAAK,GAAG,SAAS,CAAC;IADkC,CAAC;CAGtD;;YAHoC,kEAAY;;AAHpC,YAAY;IANxB,+DAAS,CAAC;QACT,8CAA8C;QAC9C,QAAQ,EAAE,KAAK;QACf,yMAAmC;;KAEpC,CAAC;GACW,YAAY,CAMxB;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACe;AAEA;AACT;AACiB;AACwB;AAClC;AAET;AACe;AAC5D,aAAa;AACoE;AACf;AACmC;AACY;AACrD;AAC+C;AAClB;AACmC;AACZ;AAC7B;AACjB;AACN;AAC4C;AACtC;AACvB;AAC4C;AACS;AACvB;AAqCzE,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAlCrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,4EAAc;YACd,oGAAsB;YACtB,kEAAa;YACb,yEAAe;YACf,+EAAiB;YACjB,kHAAqB;YACrB,8HAAyB;YACzB,yEAAe;YACf,wHAAyB;YACzB,sGAAmB;YACnB,yIAA8B;YAC9B,6HAA0B;YAC1B,gGAAiB;YACjB,+EAAiB;YACjB,yEAAe;YACf,qHAA0B;YAC1B,+EAAiB;YACjB,oGAAqB;YACrB,6GAAwB;YACxB,sFAAiB;SAClB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,qEAAS;SACV;QACD,SAAS,EAAE,CAAC,0EAAc,EAAE,oEAAQ,EAAE,yDAAQ,CAAC;QAC/C,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;ACnEtB;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;;;;ACAD;AACP;AACtB;AACmB;AACa;AAEtB;AAEzC,MAAM,MAAM,GAAY;IACtB;QACE,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,qDAAqD;KAC/D;CACF,CAAC;AAOF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAoB,WAA4B,EAAU,MAAc,EACpD,WAA4B,EAC5B,UAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpD,gBAAW,GAAX,WAAW,CAAiB;QAC5B,eAAU,GAAV,UAAU,CAAc;QAE5C,cAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QAEzC,WAAM,GAAG,KAAK,CAAC;QACf,gBAAW,GAAG,CAAC,CAAC;QAChB,YAAO,GAAG,KAAK,CAAC;QAChB,kBAAa,GAAG,KAAK,CAAC;IAP0B,CAAC;IAYjD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,KAAK,CAAC;SAC1C;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,qDAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/F,SAAS,CACR,QAAQ,CAAC,EAAE;YACT,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,KAAK,MAAM,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC3B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC;gBAC1D,KAAK,MAAM,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;oBAC3B,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,EAAE,EAAE;wBAC1B,MAAM,GAAG,GAAG;4BACV,EAAE,EAAE,IAAI;4BACR,EAAE,EAAE,IAAI;yBACT,CAAC;wBACF,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,eAAe,EAAE;4BACvE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;4BAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;4BACvB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;yBACzB;wBACD,2CAA2C;wBAC3C,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,eAAe,EAAE;4BACtE,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,eAAe,EAAE;gCAClC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,MAAM,CAAC;6BAC9B;4BACD,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,iBAAiB,EAAE;gCACpC,CAAC,CAAC,iBAAiB,GAAG,CAAC,CAAC,QAAQ,CAAC;6BAClC;4BACD,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC;4BACxC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;4BACzB,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;4BAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;4BACvB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;yBACzB;wBACD,gCAAgC;wBAChC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,EAAE;4BACnB,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC;4BACxC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;yBACzB;qBACF;iBACF;aACF;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC3B;YACD,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,SAAS,CAAC,KAAa,EAAE,MAAc;QAC5C,IAAI,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;QACvB,CAAC,GAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAClD,OAAO,CAAC,CAAC;IACX,CAAC;IAEO,WAAW,CAAC,MAAc;QAChC,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC/E,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;IACrD,CAAC;IAEO,gBAAgB,CAAC,EAAY;QACnC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;aAC3D,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;qBAC7D,IAAI,CACH,GAAG,CAAC,EAAE;oBACJ,IAAI,IAAI,GAAG,CAAC,CAAC;oBACb,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;wBACnB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,iBAAiB,CAAC;qBACnC;oBACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;wBACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACtC,CAAC,CAAC,CAAC;gBAAY,CAAC,CAClB,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,EAAY;QAClC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;aAC7D,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;qBAC7D,IAAI,CACH,GAAG,CAAC,EAAE;oBACJ,IAAI,IAAI,GAAG,CAAC,CAAC;oBACb,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;wBACnB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,iBAAiB,CAAC;qBACnC;oBACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;wBACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACtC,CAAC,CAAC,CAAC;gBAAY,CAAC,CAClB,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;aAC7D,IAAI,CACH,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,GAAG,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,uBAAuB;IACvB,KAAK,CAAC,KAAY;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;CAEF;;YA7JkC,0EAAe;YAAkB,sDAAM;YACvC,iEAAe;YAChB,yEAAY;;AAJjC,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;;KAEzC,CAAC;GACW,iBAAiB,CA+J7B;AA/J6B;;;;;;;;;;;;;;;;;;;ACnBa;AACoB;AAM/D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAMxC,QAAQ,CAAC,IAAc,EAAE,GAAW;QACzC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,0EAA0E,EAC7G,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;IAEM,SAAS,CAAC,IAAc,EAAE,GAAW;QAC1C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,0EAA0E,EAC7G,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;IAEM,SAAS,CAAC,IAAc,EAAE,GAAW;QAC1C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAW,sEAAsE,EAC1G,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;IAEM,WAAW,CAAC,IAAc,EAAE,GAAW;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,wEAAwE,EAC3G,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;IAEM,eAAe,CAAC,GAAW;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,yEAAyE,EAChH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACpC,CAAC;IAEM,YAAY,CAAC,IAAgB,EAAE,GAAW,EAAE,SAAiB;QAClE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,sEAAsE,EACxG,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC1D,CAAC;IAEM,oBAAoB,CAAC,GAAW;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,uEAAuE,EACzG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAEO,UAAU,CAAC,EAAU;QAC3B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,aAAa,CAAC;iBACpC,MAAM,CAAC,UAAU,EAAG,EAAE,CAAC,QAAQ,CAAC;SAClC,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;IAEO,aAAa,CAAC,EAAU,EAAE,SAAiB;QACjD,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,aAAa,CAAC;iBACpC,MAAM,CAAC,UAAU,EAAG,EAAE,CAAC,QAAQ,CAAC;iBAChC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC;SAChC,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;;YA7DiC,+DAAU;;AAF/B,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA+D3B;AA/D2B;;;;;;;;;;;;;;;;;ACPrB,MAAM,QAAQ;CAWpB;;;;;;;;;;;;;ACZD;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;ACAR;AACQ;AAEpB;AAOzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,YAAmB,UAA2B,EAAU,MAAc;QAAnD,eAAU,GAAV,UAAU,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEtE,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACzC,SAAI,GAAG,CAAC,CAAC;QACT,aAAQ,GAAG,CAAC,CAAC;QACb,YAAO,GAAG,IAAI,CAAC;QACf,mBAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEtC,UAAK,GAAG;YACN,SAAS,EAAE,KAAK;YAChB,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,KAAK;SACb,CAAC;IAZwE,CAAC;IAc3E,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC;IACxC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;IACxE,CAAC;IAED,IAAI,SAAS;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,OAAO,IAAI,CAAC,QAAQ;aACjB,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,iBAAE,EAAE,EAAE,CAAC,GAAG,CAAC,IAAK,QAAQ,EAAE,CAAC;aAChD,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7F,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,MAAM,GAAe,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACxE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC3C,OAAO;SACR;QACD,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC/B,IAAI,GAAG,CAAC,SAAS,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBAC/C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC7B;YACD,IAAI,GAAG,CAAC,SAAS,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC7B;YACD,IAAI,GAAG,CAAC,SAAS,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;gBAC/C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC7B;SACF;QACD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAEtB,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;IAChD,CAAC;IAEO,aAAa,CAAC,IAAc;QAClC,IAAI,CAAC,UAAU,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAvEgC,iEAAe;YAAkB,sDAAM;;AAF3D,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAyE7B;AAzE6B;;;;;;;;;;;;;;;;;;;;ACRa;AACoB;AAEtB;AAKzC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAO1B,YAAoB,UAAsB,EAAW,MAAc;QAA/C,eAAU,GAAV,UAAU,CAAY;QAAW,WAAM,GAAN,MAAM,CAAQ;QAHnE,oBAAe,GAAG,KAAK,CAAC;QACxB,mBAAc,GAAG,KAAK,CAAC;IAEgD,CAAC;IAEjE,iBAAiB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,yEAAyE,CAAC,CAAC;IACpH,CAAC;IAEM,iBAAiB,CAAC,GAAa;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAa,qEAAqE,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;IAClI,CAAC;IAEM,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAqB;QAC1D,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,aAAa,CAAC;iBACvC,MAAM,CAAC,UAAU,EAAG,KAAK,CAAC,QAAQ,CAAC;SACrC,CAAC;QAEF,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,IAAI,KAAK,eAAe,EAAE;YAC5B,GAAG,GAAG,sEAAsE,CAAC;SAC9E;aAAM,IAAI,IAAI,KAAK,gBAAgB,EAAE;YACpC,GAAG,GAAG,sEAAsE,CAAC;SAC9E;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,GAAG,EACtC,IAAI,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;IACnC,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,8DAA8D,CAAC,CAAC,SAAS,EAAE,CAAC;IACjH,CAAC;IAEM,kBAAkB,CAAC,IAAI,EAAE,KAAqB;QACnD,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,aAAa,CAAC;iBACvC,MAAM,CAAC,UAAU,EAAG,KAAK,CAAC,QAAQ,CAAC;SACrC,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,qEAAqE,EAAE,IAAI,EAAE,WAAW,CAAC;aAC7H,SAAS,EAAE,CAAC;IACf,CAAC;IAEM,cAAc,CAAC,IAAK;QACzB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAE/B,IAAI,CAAC,iBAAiB,EAAE;aACvB,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;gBACtB,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE;oBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACnD;aACF;YACD,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACtC;YACD,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAExC,CAAC,CACA,CAAC;IACJ,CAAC;IAEM,cAAc,CAAC,GAAa,EAAE,IAAK;QAExC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC;aAC1B,IAAI,CAAC,MAAM,CAAC,EAAE;YACb,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;gBACtB,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE;oBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACnD;aACF;YACD,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACtC;YACD,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAExC,CAAC,CACA,CAAC;IACJ,CAAC;CACF;;YA/FiC,+DAAU;YAAmB,sDAAM;;AAPxD,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAsG3B;AAtG2B;;;;;;;;;;;;;ACV5B;AAAe,6GAA8C,uL;;;;;;;;;;;;;;;;;;;;;;ACAO;AACR;AACQ;AAClB;AAET;AACY;AASrD,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAErC,YAAoB,UAA2B,EAAU,MAAc,EACnD,UAAwB,EACxB,YAA6B;QAF7B,eAAU,GAAV,UAAU,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACnD,eAAU,GAAV,UAAU,CAAc;QACxB,iBAAY,GAAZ,YAAY,CAAiB;QAGjD,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;QACxB,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QACxC,YAAO,GAAG,KAAK,CAAC;IALqC,CAAC;IAOtD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE;YACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;QAClD,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,CAAC,EAAE;YAC9B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACpB;IACH,CAAC;IAED,kBAAkB;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC5C,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC;gBACjC,MAAM,IAAI,GAAG,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC;gBAC5C,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBAClC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAClC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;iBAC9B;aACF;QACH,CAAC,CACF,CAAC;IACN,CAAC;IAED,eAAe;QACb,wCAAwC;QACxC,IAAI,GAAG,GAAa,IAAI,kEAAQ,EAAE,CAAC;QACnC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;QAC7C,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QACnC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QACvC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC3C,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;QACb,OAAO,GAAG,CAAC;IACb,CAAC;IAED,MAAM,CAAC,EAAY;QACjB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC1C,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;qBAC7C,IAAI,CACH,GAAG,CAAC,EAAE;oBACJ,IAAI,IAAI,GAAG,CAAC,CAAC;oBACb,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;wBACnB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,iBAAiB,CAAC;qBACnC;oBACD,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACvC,CAAC,CACF,CAAC;aACL;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;aACzC;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACN,CAAC;IAED,aAAa,CAAC,EAAY;QACxB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;aAC3C,IAAI,CACH,QAAQ,CAAC,EAAE;YACT,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;qBAC7C,IAAI,CACH,GAAG,CAAC,EAAE;oBACJ,IAAI,IAAI,GAAG,CAAC,CAAC;oBACb,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;wBACnB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,iBAAiB,CAAC;qBACnC;oBACD,IAAI,CAAC,YAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACvC,CAAC,CACF,CAAC;aACL;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;aAC7C;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACN,CAAC;CAEF;;YAvGiC,iFAAe;YAAkB,sDAAM;YACvC,kEAAY;YACV,0EAAe;;AAJtC,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,mQAAkD;;KAEnD,CAAC;GACW,0BAA0B,CAyGtC;AAzGsC;;;;;;;;;;;;;;;;;ACfhC,MAAM,QAAQ;CASpB;;;;;;;;;;;;;ACTD;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,mOAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;;ACP9B;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;;ACAX;AACT;AAQzC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,QAAQ;IACR,CAAC;IAEM,WAAW,CAAC,GAAW;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;CAEF;;YAT6B,sDAAM;;AAFvB,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;GACW,eAAe,CAW3B;AAX2B;;;;;;;;;;;;;ACT5B;AAAe,6GAA8C,+K;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,2PAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAOpC;AAPoC;;;;;;;;;;;;;ACPrC;AAAe,yEAAU,oBAAoB,KAAK,mDAAmD,2R;;;;;;;;;;;;;;;;;ACAnD;AAQlD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB;QACA,WAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC;IADhD,CAAC;IAIjB,QAAQ;IACR,CAAC;CAEF;AATY,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gNAAoC;;KAErC,CAAC;GACW,aAAa,CASzB;AATyB;;;;;;;;;;;;;ACR1B;AAAe,yEAAU,oBAAoB,KAAK,gBAAgB,8BAA8B,4BAA4B,uBAAuB,yBAAyB,uBAAuB,2BAA2B,4BAA4B,4BAA4B,8BAA8B,KAAK,+CAA+C,myB;;;;;;;;;;;;;;;;;;;;;;ACAtT;AACe;AACA;AACf;AACK;AACd;AAOzC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YAAqB,YAA0B,EAAU,MAAc,EAClD,eAAgC,EAChC,MAAuB;QAFvB,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAClD,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAiB;QAE5C,eAAU,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QAC5C,gBAAW,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;QAC3C,YAAO,GAAG,EAAE,CAAC;IAJmC,CAAC;IAMjD,QAAQ;IACR,CAAC;IAEM,WAAW,CAAC,GAAW;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAGO,cAAc;QACpB,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;IACrC,CAAC;IAEO,YAAY,CAAC,CAAE;QACrB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC;IAEO,cAAc,CAAC,GAAG,EAAE,IAAK;QAC/B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QAC/B,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACjB,MAAM,GAAG,GAAG,IAAI,2DAAQ,EAAE,CAAC;QAC3B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IACnC,CAAC;IAEO,cAAc,CAAC,GAAI,EAAE,IAAK;QAChC,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,KAAK,IAAI,EAAE;YAChD,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC1B;SACF;IACH,CAAC;CAEF;;YA9CoC,kEAAY;YAAkB,sDAAM;YACjC,0EAAe;YACxB,0EAAe;;AAJjC,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;GACW,eAAe,CAgD3B;AAhD2B;;;;;;;;;;;;;ACZ5B;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;;;;;;;;ACAa;AAEN;AACnB;AACC;AAEK;AACZ;AACX;AAES;AAOzC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YAAoB,aAA4B,EAAU,MAAc,EACpD,UAAwB,EACxB,WAA4B,EAC5B,QAAkB,EAClB,SAAgC;QAJhC,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QACpD,eAAU,GAAV,UAAU,CAAc;QACxB,gBAAW,GAAX,WAAW,CAAiB;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAuB;QAGpD,WAAM,GAAG,KAAK,CAAC;QACf,iBAAY,GAAG,CAAC,CAAC;IAJuC,CAAC;IAKzD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;YACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,qDAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EACxE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;aACpC,SAAS,CACN,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;gBAClB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aAC3B;YACD,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;gBAClB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;aAC7B;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CACF,CAAC;IACN,CAAC;IAEM,eAAe,CAAC,IAAY;QACjC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,OAAO,CAAC,IAAU;QAC3B;WACG;QACC,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAClE,OAAO,aAAa,CAAC;IACvB,CAAC;IAEM,eAAe,CAAC,GAAW;QAChC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YAClC,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE;gBACxB,OAAO,CAAC,CAAC;aACV;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,gBAAgB,CAAC,GAAW;QAClC,OAAO,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;CACF;;YAtDoC,6DAAa;YAAkB,sDAAM;YACxC,kEAAY;YACX,iFAAe;YAClB,wDAAQ;YACP,mFAAqB;;AANzC,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,sNAAsC;;KAEvC,CAAC;GACW,eAAe,CAwD3B;AAxD2B;;;;;;;;;;;;;;;;;;;ACjBe;AACoB;AAO/D,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAExC,cAAc,CAAC,GAAW;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,+DAA+D,EAClG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAEM,kBAAkB,CAAC,GAAW;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,mEAAmE,EACrG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAEO,UAAU,CAAC,EAAU;QAC3B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,aAAa,CAAC;iBACpC,MAAM,CAAC,UAAU,EAAG,EAAE,CAAC,QAAQ,CAAC;SAClC,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;;YArBiC,+DAAU;;AAF/B,aAAa;IAHzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,aAAa,CAuBzB;AAvByB;;;;;;;;;;;;;ACR1B;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;ACCX;AACF;AACP;AAOzC,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAEhC,YAAoB,UAAwB,EAAU,MAAc;QAAhD,eAAU,GAAV,UAAU,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAIzE,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,IAAI,EAAE;YAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;IAEnD,CAAC;CAEF;;YAZiC,2DAAY;YAAkB,sDAAM;;AAFzD,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kPAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAcjC;AAdiC;;;;;;;;;;;;;ACVlC;AAAe,6GAA8C,2L;;;;;;;;;;;;;;;;;;;;;;;;ACAI;AACM;AAErB;AACC;AAC0B;AACvB;AACb;AACV;AAO/B,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAEhC,YAAoB,UAAwB,EAAU,MAAc,EACjD,SAAgC,EAC/B,YAAsB,EACtB,OAAwB,EACxB,OAAsB;QAJtB,eAAU,GAAV,UAAU,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QACjD,cAAS,GAAT,SAAS,CAAuB;QAC/B,iBAAY,GAAZ,YAAY,CAAU;QACtB,YAAO,GAAP,OAAO,CAAiB;QACxB,YAAO,GAAP,OAAO,CAAe;QAM1C,SAAI,GAAG;YACL,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,IAAI;SACf,CAAC;IAb4C,CAAC;IAe/C,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,IAAI,EAAE;YAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAChE,CAAC;IAEO,UAAU,CAAC,IAAI;QACrB,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;gBACxF,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACxB;SACF;QACD,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE;gBAC9F,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aAC3B;SACF;QACD,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;gBAC5F,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACzB;SACF;QACD,IAAI,IAAI,KAAK,UAAU,EAAE;YACvB,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;gBAChG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC5B;SACF;QACD,IAAI,IAAI,KAAK,WAAW,EAAE;YACxB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE;gBAChI,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC7B;SACF;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAEO,aAAa;QACnB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI;YACxD,IAAI,CAAC,gBAAgB,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,CAAC,OAAO;YAC5D,IAAI,CAAC,gBAAgB,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK;YACxD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,KAAK,IAAI,CAAC,aAAa,CAAC,QAAQ;YAC9D,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;YAClE,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,cAAc,CAAC,OAAO;QAC5B,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAEvE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC;aACxE,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;gBAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;iBAAM;gBACL,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAChC;YACD,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACtE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElC,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;IACN,CAAC;IAEO,aAAa;QACnB,qDAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,EACpD,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC9D,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;gBACnB,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;YACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,MAAM;QACZ,kCAAkC;QAClC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACjC,CAAC;IAEM,WAAW;QAChB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAEzE;QACD,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAEO,UAAU,CAAC,OAAO;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;CAEF;;YAvIiC,2DAAY;YAAkB,sDAAM;YACtC,0FAAqB;YACjB,mEAAQ;YACb,0EAAe;YACf,oEAAa;;AAN/B,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,gQAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAyIjC;AAzIiC;;;;;;;;;;;;;ACflC;AAAe,6EAAc,mCAAmC,OAAO,6BAA6B,6BAA6B,+BAA+B,OAAO,+CAA+C,umB;;;;;;;;;;;;;;;;;;;;ACAxI;AAClB;AACV;AAET;AAGzC,MAAM,MAAM,GAAY;IACtB;QACE,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,4CAA4C;KACtD;IACD;QACE,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,gDAAgD;KAC1D;CACF,CAAC;AAOF,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAepC,YAAoB,UAAwB,EACxB,MAAc,EACf,SAAgC;QAF/B,eAAU,GAAV,UAAU,CAAc;QACxB,WAAM,GAAN,MAAM,CAAQ;QACf,cAAS,GAAT,SAAS,CAAuB;QAfnD,WAAM,GAAY,EAAE,CAAC;QAOrB,SAAI,GAAG;YACL,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;SACZ,CAAC;QAKF,aAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;IADe,CAAC;IAExD,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE;YACnC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE;YACnC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,KAAK,IAAI,EAAE;YAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;IAED,uBAAuB;IACvB,KAAK,CAAC,KAAY;QAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,uBAAuB;IAEhB,SAAS;QACd,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC,WAAW,EAAE;gBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACxB;SACF;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBACnG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACxB;SACF;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC/E,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACzB;SACF;IACH,CAAC;IAEM,KAAK;QACV,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;CAEF;;YA1DiC,yEAAY;YAChB,sDAAM;YACJ,mFAAqB;;AAjBxC,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,4QAAiD;;KAElD,CAAC;GACW,yBAAyB,CAyErC;AAzEqC;;;;;;;;;;;;;;;;;;;;;ACvB2B;AAGtB;AAEoB;AACtB;AAOzC,IAAa,YAAY,GAAzB,MAAa,YAAY;IASvB,YAAoB,UAAsB,EAAU,MAAc,EAC9C,OAAwB;QADxB,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC9C,YAAO,GAAP,OAAO,CAAiB;QAP5C,mBAAc,GAAG,KAAK,CAAC;QACvB,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAG,KAAK,CAAC;IAKwB,CAAC;IAEjD,SAAS,CAAC,IAAsB;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,4EAA4E,EAC9G,IAAI,CAAC,CAAC;IACV,CAAC;IAED,gBAAgB,CAAC,IAAY,EAAE,UAAkB;QAC/C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,kEAAkE,EACpG,IAAI,EAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,mEAAmE,EACtG,IAAI,CAAC,CAAC;IACV,CAAC;IAEO,QAAQ,CAAC,QAAQ;QACvB,qCAAqC;QACrC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,WAAW,CAAC,IAAsB;QACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aACjB,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;gBACnD,gDAAgD;gBAChD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC;qBAC9C,IAAI,CACH,GAAG,CAAC,EAAE;oBACJ,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,GAAG,CAAC;oBACnC,IAAI,IAAI,GAAG,CAAC,CAAC;oBACb,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;wBACnB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,iBAAiB,CAAC;qBACnC;oBACD,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnC,CAAC,EACD,GAAG,CAAC,EAAE;oBACJ,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;gBAC7C,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACxB;YACD,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACzD,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC,CAEA,CAAC;IACN,CAAC;IAEM,YAAY;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAEM,YAAY,CAAC,IAAY,EAAE,KAAa;QAC7C,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC;aAC/B,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5D,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAErC,CAAC,CACA,CAAC;IACN,CAAC;IAEM,cAAc;QACnB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAEO,UAAU,CAAC,EAAU;QAC3B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,CAAC;iBAC9B,MAAM,CAAC,UAAU,EAAG,EAAE,CAAC,QAAQ,CAAC;SAClC,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;;YArGiC,+DAAU;YAAkB,sDAAM;YACrC,0EAAe;;AAVjC,YAAY;IAJxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GAEW,YAAY,CA8GxB;AA9GwB;;;;;;;;;;;;;ACbzB;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;;;ACAO;AACpB;AACa;AAClB;AACF;AAEzC,MAAM,MAAM,GAAY;IACtB;QACE,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,6CAA6C;KACvD;CACF,CAAC;AAOF,IAAa,cAAc,GAA3B,MAAa,cAAc;IAKzB,YACS,UAAwB,EACvB,MAAc,EACd,YAA6B;QAF9B,eAAU,GAAV,UAAU,CAAc;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAiB;QALvC,WAAM,GAAY,EAAE,CAAC;QACrB,cAAS,GAAG,UAAU,CAAC;QAKrB,OAAE,GAAG,IAAI,uDAAgB,EAAE,CAAC;IADa,CAAC;IAIrC,KAAK;QACV,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAEvC,CAAC;IACH,uBAAuB;IACrB,KAAK,CAAC,KAAY;QAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACH,uBAAuB;IAEhB,YAAY;QACjB,IAAI,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;YACjC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;SAC7B;IACH,CAAC;IACC,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClB;IACH,CAAC;CAGF;;YAnCsB,2DAAY;YACf,sDAAM;YACA,0EAAe;;AAR5B,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,0NAAqC;;KAEtC,CAAC;GACW,cAAc,CAyC1B;AAzC0B;;;;;;;;;;;;;;;;;AClBpB,MAAM,gBAAgB;CAqB5B;;;;;;;;;;;;;ACrBD;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;;ACAgB;AACd;AACN;AACtB;AACmC;AACnB;AAKnD,MAAM,MAAM,GAAY;IACtB;QACE,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,sCAAsC;KAChD;IACD;QACE,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,kDAAkD;KAC5D;IACD;QACE,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,2BAA2B;KACrC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,+CAA+C;KACzD;CACF,CAAC;AASF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IA0BjC,YAAY,MAAsB,EAAU,YAAsB,EAC/C,UAAgC,EAChC,SAAgC;QAFP,iBAAY,GAAZ,YAAY,CAAU;QAC/C,eAAU,GAAV,UAAU,CAAsB;QAChC,cAAS,GAAT,SAAS,CAAuB;QA1BnD,WAAM,GAAY,EAAE,CAAC;QACrB,SAAI,GAAG,KAAK,CAAC;QAEb,UAAK,GAAG,IAAI,8CAAM,EAAE,CAAC;QAErB,kBAAa,GAAG;YACd,KAAK,EAAE,KAAK;YACZ,aAAa,EAAE,KAAK;YACpB,QAAQ,EAAE,IAAI;SACf,CAAC;QAEF,cAAS,GAAG;YACV,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;SACV,CAAC;QAMF,cAAS,GAAG,IAAI,gEAAS,EAAE,CAAC;QAM1B,iEAAiE;QACjE,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAGO,QAAQ,CAAC,OAAO;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB;WACG;OACH;QACA,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;aAC5B,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACpD,CAAC,CACF,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;aACzB,SAAS,CACR,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CACF,CAAC;IACJ,CAAC;IAGO,UAAU,CAAC,CAAS,EAAE,OAAO;QACnC,sBAAsB;QACtB,IAAI,CAAC,KAAK,OAAO,EAAE;YACjB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YAC/B,uBAAuB;SACxB;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;SAChC;IACH,CAAC;IACD,kBAAkB;IAClB,SAAS,CAAC,OAAO;QACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,8BAA8B;IAC9B,KAAK,CAAC,KAAY;QAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAEO,UAAU;QAEhB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;YACzC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;YACpB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;YACzC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,SAAS;YAC5C,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;YAChD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,sBAAsB;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;QACnC,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG,KAAK,CAAC;SACf;QACD,IAAK,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YAChE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YAC/C,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAE,EAAG;YACjF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,qBAAqB;YACvC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAG;gBAC9E,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;aACrC;SACF;QACD,IAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,SAAS,EAAE;YACrG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,4BAA4B;YAC9C,KAAK,GAAG,KAAK,CAAC;SACf;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,qBAAqB,CAAC;SAC9C;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,qBAAqB,CAAC;SACtD;QACD,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,OAAO,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa;YACrF,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC5B,qDAAqD;IACvD,CAAC;IAEO,YAAY,CAAC,OAAO;QAC1B,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YAC5C,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB;IACH,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACpC,CAAC;IAEO,kBAAkB,CAAC,CAAS,EAAE,SAAiB;QACrD,IAAI,CAAC,KAAK,OAAO,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,qBAAqB,CAAC;YAC7C,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC;iBACxC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;gBACpC,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;oBACjC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,uBAAuB,CAAC;iBAChD;YACH,CAAC,CAAC,CAAC;SACN;QACD,IAAI,CAAC,KAAK,eAAe,EAAE;YACzB,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YAChE,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,qBAAqB,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC;iBACrC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;oBACzC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,8BAA8B,CAAC;iBAC/D;YACH,CAAC,CAAC,CAAC;YACL,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,KAAK,EAAE;gBAC7F,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;gBACzC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,gCAAgC,CAAC;aACjE;SACF;IACH,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;gBACjD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACnE;SACF;QACD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEO,OAAO;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC3C,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE,CAAC,IAAI,EAAE;gBACpC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC;aACxB;SACF;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAEO,aAAa;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,SAAS;YACvC,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,SAAS;eAChC,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,SAAS;YACrC,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,SAAS;YAC/B,IAAI,CAAC,SAAS,CAAC,SAAS,KAAK,SAAS,CAAC;IAC1C,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAGrD,CAAC;CACF;;YAlMqB,yEAAc;YAAwB,mEAAQ;YACnC,2EAAoB;YACrB,mFAAqB;;AA5BxC,sBAAsB;IANlC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kPAA6C;;KAE9C,CAAC;GAEW,sBAAsB,CA4NlC;AA5NkC;;;;;;;;;;;;;;;;;;;;ACnCQ;AACO;AACT;AAMzC,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAE/B,YAAoB,UAAsB,EAAU,MAAc;QAA9C,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAGvE,iBAAiB,CAAC,IAAY;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,oEAAoE,EACtG,IAAI,CAAC,CAAC;IACV,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,+DAA+D,EACzF,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IACtB,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,4DAA4D,EACtF,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IACtB,CAAC;IAED,mBAAmB,CAAC,IAAY,EAAE,MAAM,EAAE,CAAC;QACzC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;aACzB,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAClC;QACH,CAAC,EACC,KAAK,CAAC,EAAE;YACN,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CACF,CAAC;IACN,CAAC;CAUF;;YAvCiC,+DAAU;YAAkB,sDAAM;;AAFvD,oBAAoB;IAHhC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CAyChC;AAzCgC;;;;;;;;;;;;;;;;;ACT1B,MAAM,MAAM;CAYlB;;;;;;;;;;;;;;;;;;;ACX0C;AACoB;AAO/D,IAAa,YAAY,GAAzB,MAAa,YAAY;IAEvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,YAAY,CAAC,IAAW,EAAE,UAAkB;QAC1C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAU,2DAA2D,EAC9F,IAAI,EAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,YAAY,CAAC,UAAkB;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,6DAA6D,EAC/F,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,cAAc,CAAC,UAAkB;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,8DAA8D,EAC/F,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IACjC,CAAC;IAEO,UAAU,CAAC,EAAU;QAC3B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;iBACD,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,CAAC;iBAC9B,MAAM,CAAC,UAAU,EAAG,EAAE,CAAC,QAAQ,CAAC;SAClC,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;;YA1BiC,+DAAU;;AAF/B,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CA4BxB;AA5BwB;;;;;;;;;;;;;;;;;ACTlB,MAAM,KAAK;CAWjB;;;;;;;;;;;;;;;;;;;;ACXkD;AAER;AAGO;AAKlD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAE9B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAExC,iBAAiB,CAAC,IAAI,EAAE,IAAI;QAC/B,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACf,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IAEjB,CAAC;IAEM,UAAU,CAAC,aAAqB;QACnC,IAAI,aAAa,IAAI,aAAa,CAAC,MAAM,KAAK,EAAE,EAAE;YAC9C,IAAI,SAAkB,CAAC;YAEvB,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,+DAA+D,CAAC,CAAC;YAE3F,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEvC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,OAAO,SAAS,CAAC;SACpB;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAEM,aAAa,CAAC,QAAgB;QACjC,MAAM,SAAS,GAAG,IAAI,CAAC;QACvB,MAAM,QAAQ,GAAG,OAAO,CAAC;QACzB,MAAM,QAAQ,GAAG,OAAO,CAAC;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC;QACxB,MAAM,QAAQ,GAAG,GAAG,CAAC;QACrB,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,MAAM,KAAK,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAEpF,OAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;IAC/D,CAAC;IAEM,cAAc,CAAC,EAAU;QAC5B,wCAAwC;QACxC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QACzC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7C,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACrD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,UAAU,CAAC,KAAa;QAC3B,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,uDAAuD,CAAC,CAAC;QACnF,IAAI,MAAe,CAAC;QACpB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,UAAU,CAAC,KAAa;QAC3B,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACrB,OAAO,KAAK,KAAK,EAAE,CAAC;IACxB,CAAC;IAEM,YAAY,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW;QACvD,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE;YAC9B,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,UAAU,CAAC,EAAY,EAAE,EAAY;QACxC,OAAO,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI;YACtB,EAAE,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW;YACjC,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM;YACvB,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,QAAQ;YAC3B,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,QAAQ;YAC3B,EAAE,CAAC,SAAS,KAAK,EAAE,CAAC,SAAS,CAAC;IACtC,CAAC;IAEM,aAAa,CAAC,IAAI;QACrB,2CAA2C;QAC3C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,4DAA4D,CAAC,CAAC;QACxF,MAAM,GAAG,GAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QAClC,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,YAAY;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACxD,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACrD,CAAC;IAEM,iBAAiB,CAAC,SAAoB;QACzC,OAAO,SAAS,CAAC,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC,OAAO,GAAG,GAAG;YACjD,SAAS,CAAC,GAAG,GAAG,GAAG,GAAG,SAAS,CAAC,MAAM,GAAG,GAAG;YAC5C,SAAS,CAAC,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC,KAAK,GAAG,GAAG;YACjD,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;IAC5B,CAAC;IAEM,mBAAmB,CAAC,SAAiB;QACxC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,YAAY,GAAG,IAAI,gEAAS,EAAE,CAAC;QACrC,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC3B,YAAY,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1B,YAAY,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7B,YAAY,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAChC,YAAY,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5B,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1B,OAAO,YAAY,CAAC;IACxB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;QAyBI;IAEG,YAAY,CAAC,QAAgB;QAChC,MAAM,kBAAkB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9C,QAAQ,kBAAkB,EAAE;YACxB,KAAK,GAAG,CAAC,CAAC;gBACN,OAAO,kBAAkB,CAAC;aAC7B;YACD,KAAK,GAAG,CAAC,CAAC;gBACN,OAAO,MAAM,CAAC;aACjB;YACD,KAAK,GAAG,CAAC,CAAC;gBACN,OAAO,YAAY,CAAC;aACvB;YACD,OAAQ,CAAC,CAAC;gBACN,OAAO,UAAU,CAAC;aACrB;SACH;IACN,CAAC;IAEM,iBAAiB,CAAC,MAAc;QACnC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACvB,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,MAAM,CAAC,MAAM,KAAK,EAAE,EAAE;YACtB,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9B;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,SAAS,CAAC,GAAW;QACxB,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACjB,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAClB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC3B;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;;YAzLmC,+DAAU;;AAFjC,qBAAqB;IAHjC,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,qBAAqB,CA2LjC;AA3LiC;;;;;;;;;;;;;;;;;ACV3B,MAAM,SAAS;CAQrB;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar></app-navbar>\\r\\n<br><br>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-9\\\">\\r\\n            <ngb-accordion #acc=\\\"ngbAccordion\\\" activeIds=\\\"toggle-1\\\" [closeOthers]=\\\"true\\\">\\r\\n                <ngb-panel id=\\\"toggle-1\\\" title=\\\"1- Indirizzo di spedizione\\\">\\r\\n                    <ng-template ngbPanelContent>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-check form-check-group\\\">\\r\\n                                    <input name=\\\"gruppo1\\\" type=\\\"radio\\\" id=\\\"radio1\\\" aria-labelledby=\\\"radio1-help\\\"\\r\\n                                        value=\\\"ind1\\\" [(ngModel)]=\\\"flagTipoInd\\\">\\r\\n                                    <label for=\\\"radio1\\\">\\r\\n                                        Spedisci a:\\r\\n                                    </label>\\r\\n                                    <small id=\\\"radio1-help\\\" class=\\\"form-text\\\">\\r\\n                                        {{indirizzoAttuale.nome}} {{indirizzoAttuale.cognome}}\\r\\n                                        <br>\\r\\n                                        via {{indirizzoAttuale.via}} n° {{indirizzoAttuale.civico}}\\r\\n                                        <br>\\r\\n                                        {{indirizzoAttuale.cap}} {{indirizzoAttuale.citta}}\\r\\n                                        <br>\\r\\n                                        {{indirizzoAttuale.provincia}}\\r\\n                                    </small>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-check form-check-group\\\">\\r\\n                                    <input name=\\\"gruppo1\\\" type=\\\"radio\\\" id=\\\"radio2\\\" aria-labelledby=\\\"radio2-help\\\"\\r\\n                                        value=\\\"newI\\\" [(ngModel)]=\\\"flagTipoInd\\\" (click)=\\\"open(content)\\\">\\r\\n                                    <label for=\\\"radio2\\\" *ngIf=\\\"!flagNewInd\\\">\\r\\n                                        Nuovo indirizzo\\r\\n                                    </label>\\r\\n                                    <label for=\\\"radio2\\\" *ngIf=\\\"flagNewInd\\\">\\r\\n                                        Spedisci a:\\r\\n                                    </label>\\r\\n                                    <small id=\\\"radio2-help\\\" class=\\\"form-text\\\" *ngIf=\\\"flagNewInd\\\">\\r\\n                                        {{newIndirizzo.nome}} {{newIndirizzo.cognome}}\\r\\n                                        <br>\\r\\n                                        via {{newIndirizzo.via}} n° {{newIndirizzo.civico}}\\r\\n                                        <br>\\r\\n                                        {{newIndirizzo.cap}} {{newIndirizzo.citta}}\\r\\n                                        <br>\\r\\n                                        {{newIndirizzo.provincia}}\\r\\n                                    </small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-panel>\\r\\n                <ngb-panel id=\\\"toggle-2\\\" title=\\\"2- Metodo di pagamento\\\">\\r\\n                    <ng-template ngbPanelContent>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-check form-check-group\\\">\\r\\n                                    <input name=\\\"gruppo2\\\" type=\\\"radio\\\" id=\\\"radio2-1\\\" aria-labelledby=\\\"radio2-1-help\\\"\\r\\n                                        data-toggle=\\\"collapse\\\" data-target=\\\"#coll1\\\" aria-expanded=\\\"false\\\"\\r\\n                                        aria-controls=\\\"coll1\\\" value=\\\"paypal\\\" [(ngModel)]=\\\"flagPagamento\\\"\\r\\n                                        [disabled]=\\\"flagPagamento ==='paypal'\\\">\\r\\n                                    <label for=\\\"radio2-1\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col-10 offset-1\\\">\\r\\n                                                <img [src]=\\\"'/assets/loghi/paypal.png'\\\"\\r\\n                                                    style=\\\"width: 240px; height: 240px;\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-check form-check-group\\\">\\r\\n                                    <input name=\\\"gruppo2\\\" type=\\\"radio\\\" id=\\\"radio2-2\\\" aria-labelledby=\\\"radio2-2-help\\\"\\r\\n                                        data-toggle=\\\"collapse\\\" data-target=\\\"#coll1\\\" aria-expanded=\\\"true\\\"\\r\\n                                        aria-controls=\\\"coll1\\\" value=\\\"carte\\\" [(ngModel)]=\\\"flagPagamento\\\"\\r\\n                                        [disabled]=\\\"flagPagamento ==='mastercard'\\\">\\r\\n                                    <label for=\\\"radio2-2\\\">\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col-2 offset-1\\\">\\r\\n                                                <img [src]=\\\"'/assets/loghi/mastercard.png'\\\"\\r\\n                                                    style=\\\"width: 100px; height: 100px;\\\">\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-2 offset-1\\\">\\r\\n                                                <img [src]=\\\"'/assets/loghi/visa.png'\\\"\\r\\n                                                    style=\\\"width: 100px; height: 100px;\\\">\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-2 offset-1\\\">\\r\\n                                                <img [src]=\\\"'/assets/loghi/american-express.png'\\\"\\r\\n                                                    style=\\\"width: 100px; height: 100px;\\\">\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-2 offset-1\\\">\\r\\n                                                <img [src]=\\\"'/assets/loghi/postepay.png'\\\"\\r\\n                                                    style=\\\"width: 100px; height: 100px;\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </label>\\r\\n                                    <small id=\\\"radio2-2-help\\\" class=\\\"form-text\\\">\\r\\n                                        <div class=\\\"collapse\\\" id=\\\"coll1\\\">\\r\\n                                            <table class=\\\"table table-borderless\\\" *ngIf=\\\"listaCarte && checkUp\\\">\\r\\n                                                <thead>\\r\\n                                                    <tr>\\r\\n                                                        <th scope=\\\"col\\\" colspan=\\\"3\\\">Le tue carte di credito o di debito\\r\\n                                                        </th>\\r\\n                                                        <th scope=\\\"col\\\">Nome sulla carta</th>\\r\\n                                                        <th scope=\\\"col\\\">Scade il</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                                <tbody>\\r\\n                                                    <tr *ngFor=\\\"let carta of listaCarte; let i = index\\\">\\r\\n                                                        <td>\\r\\n                                                            <input name=\\\"gruppo3\\\" type=\\\"radio\\\" value=\\\"carta.numero\\\"\\r\\n                                                                [checked]=\\\"(i === 0)\\\" (click)=\\\"selectCard(i)\\\">\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <img [src]=\\\"'/assets/loghi/'+ getTipoCarta(carta.numero.toString()) + '2.png'\\\"\\r\\n                                                                style=\\\"width: 50px; height: 50px;\\\">\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <h6>{{decriptNomeCarta(carta.numero.toString())}}</h6> termina con\\r\\n                                                            <h6>{{carta.numero.toString().substring(12)}}</h6>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <br>\\r\\n                                                            <h6>{{carta.cognome}} {{carta.nome}}</h6>\\r\\n                                                        </td>\\r\\n                                                        <td>\\r\\n                                                            <br>\\r\\n                                                            {{getDate(carta.data_scadenza)}}\\r\\n                                                        </td>\\r\\n                                                    </tr>\\r\\n                                                </tbody>\\r\\n                                            </table>\\r\\n                                            <a style=\\\"color: blue; cursor: pointer;\\\" (click)=\\\"openModalLarge(content3)\\\">\\r\\n                                                Aggiungi una nuova carta di credito o debito\\r\\n                                            </a>\\r\\n                                        </div>\\r\\n                                    </small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ngb-panel>\\r\\n            </ngb-accordion>\\r\\n\\r\\n            <hr />\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body align-items-center d-flex justify-content-center\\\">\\r\\n                    <div class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-6\\\">\\r\\n                                Articoli:\\r\\n                            </div>\\r\\n                            <div class=\\\"col-3 offset-3\\\">\\r\\n                                {{totaleAcquisto}} €\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <br>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-8\\\">\\r\\n                                Costi di spedizione:\\r\\n                            </div>\\r\\n                            <div class=\\\"col-3 offset-1\\\">\\r\\n                                {{speseSpedizione}} €\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <br>\\r\\n                        <div class=\\\"row; border-top\\\"></div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-6\\\">\\r\\n                                Totale ordine:\\r\\n                            </div>\\r\\n                            <div class=\\\"col-3 offset-3\\\">\\r\\n                                {{totaleOrdine}} €\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <br><br>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <button class=\\\"btn btn-sm btn-outline-primary mr-2\\\"\\r\\n                                (click)=\\\"acc.toggle('toggle-1'); acc.toggle('toggle-2')\\\"\\r\\n                                style=\\\"color: black; cursor: pointer;\\\" class=\\\"btn btn-outline-warning\\\"\\r\\n                                *ngIf=\\\"acc.isExpanded('toggle-1')\\\">\\r\\n                                <h6>Spedisci a <br>questo indirizzo </h6>\\r\\n                            </button>\\r\\n                            <button class=\\\"btn btn-sm btn-outline-primary mr-2\\\"\\r\\n                                (click)=\\\"eseguiAcquisto(content2)\\\"\\r\\n                                *ngIf=\\\"acc.isExpanded('toggle-2')\\\" style=\\\"color: black; cursor: pointer;\\\"\\r\\n                                class=\\\"btn btn-outline-warning\\\"\\r\\n                                [disabled]=\\\"!flagPagamento || (flagPagamento === 'carte' && cartaSelected === undefined)\\\">\\r\\n                                <h6>Conferma e paga <br>di pagamento </h6>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n<!--modale nuovo indirizzo-->\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Nuovo indirizzo di spedizione</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal(content)\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <li>Nome: <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"nome\\\" placeholder=\\\"Inserire nome\\\" maxlength=\\\"20\\\"\\r\\n                [(ngModel)]=\\\" newIndirizzo.nome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></li>\\r\\n        <li>Cognome: <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"cognome\\\" placeholder=\\\"Inserire cognome\\\" maxlength=\\\"20\\\"\\r\\n                [(ngModel)]=\\\" newIndirizzo.cognome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></li>\\r\\n        <li>Via: <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"indirizzo\\\" placeholder=\\\"Inserire indirizzo\\\" maxlength=\\\"20\\\"\\r\\n                [(ngModel)]=\\\"newIndirizzo.via\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></li>\\r\\n        <li>N°: <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"indirizzo\\\" placeholder=\\\"Inserire indirizzo\\\" maxlength=\\\"20\\\"\\r\\n                [(ngModel)]=\\\"newIndirizzo.civico\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></li>\\r\\n        <li>Provincia: <select class=\\\"form-control\\\" [(ngModel)]=\\\"newIndirizzo.provincia\\\" (ngModelChange)=\\\"loadComuni()\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <option *ngFor=\\\" let x of provincie \\\">\\r\\n                    {{x.nome}}\\r\\n                </option>\\r\\n            </select></li>\\r\\n        <li>Città: <select class=\\\"form-control\\\" [(ngModel)]=\\\"newIndirizzo.citta\\\" (ngModelChange)=\\\"loadCap()\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <option *ngFor=\\\" let x of listaComuniDaCaricare \\\">\\r\\n                    {{x.nome}}\\r\\n                </option>\\r\\n            </select></li>\\r\\n        <li>CAP: <select class=\\\"form-control\\\" [(ngModel)]=\\\"newIndirizzo.cap\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <option *ngFor=\\\" let x of listaCap \\\">\\r\\n                    {{x}}\\r\\n                </option>\\r\\n            </select></li>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"!newIndirizzo.nome || !newIndirizzo.cognome || !newIndirizzo.via || !newIndirizzo.civico || !newIndirizzo.citta ||\\r\\n        !newIndirizzo.provincia || !newIndirizzo.cap\\\" (click)=\\\"addNewIndirizzo(content)\\\">\\r\\n            Save</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"closeModal(content)\\\">Annulla</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<!--modale ordine effettuato-->\\r\\n<ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Ordine avvenuto correttamente</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <h5>Numero ordine {{codiceOrdineAcquistato}}</h5>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"chiudi(content2)\\\">\\r\\n            ok</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<!--modale aggiungi carta-->\\r\\n<ng-template #content3 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Aggiungi una carta di credito o debito</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row form-group\\\">\\r\\n                    <div class=\\\"col-md-2 offset-1\\\">\\r\\n                        <h6>Numero carta</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\" size=\\\"16\\\"\\r\\n                        [(ngModel)]=\\\"newCarta.numero\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        (ngModelChange)=\\\"checkDatiCarta('numeroCarta')\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div class=\\\"row form-group\\\">\\r\\n                    <div class=\\\"col-md-2 offset-1\\\">\\r\\n                        <h6>Intestatario carta</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <h6>Nome</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <input type=\\\"tel\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\" size=\\\"16\\\"\\r\\n                        [(ngModel)]=\\\"newCarta.nome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        (ngModelChange)=\\\"checkDatiCarta('nomeCarta')\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row form-group\\\">\\r\\n                    <div class=\\\"col-md-2 offset-3\\\">\\r\\n                        <h6>Cognome</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <input type=\\\"tel\\\" class=\\\"form-control\\\" maxlength=\\\"16\\\" size=\\\"16\\\"\\r\\n                        [(ngModel)]=\\\"newCarta.cognome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        (ngModelChange)=\\\"checkDatiCarta('cognomeCarta')\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div class=\\\"row form-group\\\">\\r\\n                    <div class=\\\"col-md-2 offset-1\\\">\\r\\n                        <h6>Data di scadenza</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-1\\\">\\r\\n                        <select [(ngModel)]=\\\" meseSelected\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"cursor: pointer;\\\">\\r\\n                            <option *ngFor=\\\" let x of counter(12); let i= index \\\"\\r\\n                            value=\\\"{{i}}\\\">\\r\\n                                <div *ngIf=\\\"i<=8\\\">\\r\\n                                    0{{(i+1)}}\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"i>8\\\">\\r\\n                                    {{(i+1)}}\\r\\n                                </div>\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    /\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <select [(ngModel)]=\\\" annoSelected\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"cursor: pointer;\\\" >\\r\\n                            <option *ngFor=\\\" let x of counter(21); let i= index \\\"\\r\\n                            value=\\\"{{currentDate.getFullYear()+i}}\\\">\\r\\n                                {{(currentDate.getFullYear()+i).toString()}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-1 offset-2\\\">\\r\\n                        <h6>CSV</h6>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" maxlength=\\\"3\\\" size=\\\"3\\\"\\r\\n                        [(ngModel)]=\\\"newCarta.csv\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        (ngModelChange)=\\\"checkDatiCarta('csvCarta')\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" \\r\\n        [disabled]=\\\"!flagCarta.numCarta || !flagCarta.nomeCarta || !flagCarta.cognomeCarta || !flagCarta.csvCarta\\\" \\r\\n        (click)=\\\"addNewCarta(content3)\\\">\\r\\n            Conferma</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"chiudi2(content3)\\\">\\r\\n            Annulla</button>\\r\\n    </div>\\r\\n</ng-template>\"","export default \"<form>\\r\\n    <br>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <br>\\r\\n        <div class=\\\"row form-group justify-content-center\\\">\\r\\n            <div class=\\\"col-md-8 offset-1\\\">\\r\\n                <label for=\\\"nome\\\">Codice Fiscale</label>\\r\\n                <input type=\\\"cf\\\" class=\\\"form-control\\\" id=\\\"cf\\\" placeholder=\\\"Inserire codice fiscale\\\" maxlength=\\\"16\\\"\\r\\n                    [(ngModel)]=\\\" newAdmin.codicefiscale\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"ctrlCampi('codicefiscale'); ctrlAllField()\\\">\\r\\n                <small *ngIf=\\\"!newAdmin.codicefiscale && !flag.cf \\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                <small *ngIf=\\\"newAdmin.codicefiscale && !flag.cfValid \\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*codice Fiscale già presente</small>\\r\\n                <small *ngIf=\\\"newAdmin.codicefiscale && !flag.cf && flag.cfValid \\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*Formato non valido</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group justify-content-center\\\">\\r\\n            <div class=\\\"col-md-8 offset-1\\\">\\r\\n                <label for=\\\"nome\\\">Nome</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"nome\\\" placeholder=\\\"Inserire nome\\\" maxlength=\\\"40\\\"\\r\\n                    [(ngModel)]=\\\" newAdmin.nome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"ctrlCampi('nome'); ctrlAllField()\\\">\\r\\n                <small *ngIf=\\\"!newAdmin.nome && !flag.nome \\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group justify-content-center\\\">\\r\\n            <div class=\\\"col-md-8 offset-1\\\">\\r\\n                <label for=\\\"nome\\\">Cognome</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"cognome\\\" placeholder=\\\"Inserire cognome\\\" maxlength=\\\"40\\\"\\r\\n                    [(ngModel)]=\\\" newAdmin.cognome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"ctrlCampi('cognome'); ctrlAllField()\\\">\\r\\n                <small *ngIf=\\\"!newAdmin.cognome && !flag.cognome\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group justify-content-center\\\">\\r\\n            <div class=\\\"col-md-8 offset-1\\\">\\r\\n                <label for=\\\"nome\\\">E-mail</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Inserire e-mail\\\" maxlength=\\\"40\\\"\\r\\n                    [(ngModel)]=\\\" newAdmin.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"ctrlCampi('email'); ctrlAllField()\\\">\\r\\n                <small *ngIf=\\\"!newAdmin.email && !flag.email\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                <small *ngIf=\\\"newAdmin.email && !flag.emailValid\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*E-mail già presente</small>\\r\\n                <small *ngIf=\\\"newAdmin.email && !flag.email && flag.emailValid\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*Formato non valido</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group justify-content-center\\\">\\r\\n            <div class=\\\"col-md-8 offset-1\\\">\\r\\n                <label for=\\\"nome\\\">Password</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Inserire password\\\" maxlength=\\\"40\\\"\\r\\n                    [(ngModel)]=\\\" newAdmin.password\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"ctrlCampi('password'); ctrlCampi('confermapassword'); ctrlAllField()\\\">\\r\\n                <small *ngIf=\\\"!newAdmin.password && !flag.password\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                <small *ngIf=\\\"newAdmin.password && !flag.password\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*Password non valida</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group justify-content-center\\\">\\r\\n            <div class=\\\"col-md-8 offset-1\\\">\\r\\n                <label for=\\\"nome\\\">Conferma password</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"confPassword\\\" placeholder=\\\"Reinserire la password\\\"\\r\\n                    maxlength=\\\"40\\\" [(ngModel)]=\\\" confermaPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"ctrlCampi('confermapassword'); ctrlAllField()\\\">\\r\\n                <small *ngIf=\\\"!confermaPassword && !flag.cPassword\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                <small *ngIf=\\\"confermaPassword && !flag.cPassword\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*Password non corrispondenti</small>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <br>\\r\\n        <div class=\\\"row form-group justify-content-center\\\">\\r\\n            <div class=\\\"col-md-2 offset-3\\\">\\r\\n                <button type=\\\"button\\\"  name=\\\"button\\\" [disabled]=\\\"!flag.general || !flag.cPassword ||\\r\\n                !flag.password || !flag.cf || !flag.nome || !flag.cognome || !flag.email\\\"\\r\\n            class=\\\"btn btn-outline-primary\\\" (click)=\\\"salva(content)\\\">Registra</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h2 style=\\\"color: green;\\\" *ngIf=\\\"risultatoModifica\\\">\\r\\n                <i class=\\\"fa fa-check-circle\\\"></i>\\r\\n                Operazione avvenuta con successo!\\r\\n            </h2>\\r\\n            <h2 style=\\\"color: red;\\\" *ngIf=\\\"!risultatoModifica\\\">\\r\\n                <i class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                Errore!\\r\\n            </h2>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"modal-footer justify-content-center\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n          (click)=\\\"closeModale()\\\" >OK</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </ng-template>\"","export default \"<ngb-alert *ngIf=\\\"alert && alert != null\\\" [type]=\\\"alert.type\\\" (close)=\\\"close(alert)\\\">{{ alert.message }}</ngb-alert>\\r\\n<div class=\\\"container-fluid\\\" >\\r\\n    <div class=\\\"row align-items-center h-100\\\">\\r\\n        <div class=\\\"col-1\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n            (click)=\\\"reloadProdotti()\\\">\\r\\n                <i class=\\\"fa fa-refresh  \\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <h1>Elenco prodotti</h1>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 offset-5\\\" style=\\\"padding-left: 47px;\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n            (click)=\\\"openModalEditAdd(modaleAddEdit)\\\">\\r\\n                Aggiungi <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row align-items-center h-100\\\">\\r\\n        <table class=\\\"table \\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">Id</th>\\r\\n                    <th scope=\\\"col\\\">Nome</th>\\r\\n                    <th scope=\\\"col\\\">Immagine</th>\\r\\n                    <th scope=\\\"col\\\">Descrizione</th>\\r\\n                    <th scope=\\\"col\\\">Quantità</th>\\r\\n                    <th scope=\\\"col\\\">Prezzo</th>\\r\\n                    <th scope=\\\"col\\\">Tipologia</th>\\r\\n                    <th scope=\\\"col\\\" colspan=\\\"2\\\">Modifica   Elimina </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody *ngIf=\\\"attiva\\\">\\r\\n\\r\\n                <tr *ngFor=\\\"let prodotto of lProdotti\\\">\\r\\n                    <td scope=\\\"col\\\">{{ prodotto.id }}</td>\\r\\n                    <td scope=\\\"col\\\">{{ prodotto.nome }}</td>\\r\\n                    <td style=\\\"width: 50px; height: 50px;\\\">\\r\\n                        <img [src]=\\\"'/assets/immagini_prodotti/' + prodotto.immagine \\\" class=\\\"mr-2\\\"\\r\\n                            style=\\\"width: 50px; height: 50px;\\\">\\r\\n                    </td>\\r\\n                    <td scope=\\\"col\\\">{{ prodotto.descrizione }}</td>\\r\\n                    <td scope=\\\"col\\\">{{ prodotto.quantita }}</td>\\r\\n                    <td scope=\\\"col\\\">{{ prodotto.prezzo }} €</td>\\r\\n                    <td scope=\\\"col\\\">{{ prodotto.tipologia }}</td>\\r\\n                    <td scope=\\\"col\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n                        (click)=\\\"openModalEditAdd(modaleAddEdit, prodotto)\\\">\\r\\n                            <i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                    <td scope=\\\"col\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-outline-danger\\\"\\r\\n                        (click)=\\\"openModalDelete(modaleRemove, prodotto)\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-between p-2\\\">\\r\\n            <ngb-pagination [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\">\\r\\n            </ngb-pagination>\\r\\n\\r\\n            <select class=\\\"custom-select\\\" style=\\\"width: auto\\\" [(ngModel)]=\\\"pageSize\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <option [ngValue]=\\\"2\\\">2 items per page</option>\\r\\n                <option [ngValue]=\\\"4\\\">4 items per page</option>\\r\\n                <option [ngValue]=\\\"6\\\">6 items per page</option>\\r\\n            </select>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #modaleAddEdit let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Nuovo Prodotto</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div>\\r\\n            <h4>Id : </h4>\\r\\n            <h3>\\r\\n                {{newProdotto.id}}\\r\\n            </h3> <br><br>\\r\\n            <h4>Nome: </h4> \\r\\n            <input type=\\\"text\\\" class=\\\"form-control border-{{textType.nome}}\\\"\\r\\n            [(ngModel)]=\\\"newProdotto.nome\\\"\\r\\n            (ngModelChange)=\\\"checkCampo('nome')\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n            maxlength=\\\"80\\\" size=\\\"80\\\" > \\r\\n            <br><br>\\r\\n            <h4>Immagine: </h4> \\r\\n            <input type=\\\"text\\\" class=\\\"form-control border-{{textType.immagine}}\\\"\\r\\n            [(ngModel)]=\\\"newProdotto.immagine\\\"\\r\\n            (ngModelChange)=\\\"checkCampo('immagine')\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"> <br><br>\\r\\n            <h4>Descrizione: </h4>\\r\\n            <textarea name=\\\"message\\\" rows=\\\"10\\\" cols=\\\"80\\\" class=\\\"form-control border-{{textType.descrizione}}\\\"\\r\\n             [(ngModel)]=\\\"newProdotto.descrizione\\\"\\r\\n             (ngModelChange)=\\\"checkCampo('descrizione')\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n             ></textarea> <br><br>\\r\\n            <h4>Quantità: </h4>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control border-{{textType.quantita}}\\\"\\r\\n            min=\\\"-1\\\" max=\\\"100\\\" \\r\\n            [(ngModel)]=\\\"newProdotto.quantita\\\" \\r\\n            (ngModelChange)=\\\"checkCampo('quantita')\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"> \\r\\n            <br><br>\\r\\n            <h4>Prezzo: </h4>\\r\\n            <input type=\\\"number\\\" id=\\\"prezzo\\\" class=\\\"form-control border-{{textType.prezzo}}\\\"\\r\\n            min=\\\"10\\\" max=\\\"100\\\" \\r\\n            [(ngModel)]=\\\"newProdotto.prezzo\\\"\\r\\n            (ngModelChange)=\\\"checkCampo('prezzo')\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"> <br><br>\\r\\n            <h4>Tipologia: </h4>\\r\\n            <input type=\\\"number\\\" id=\\\"tipologia\\\" class=\\\"form-control border-{{textType.tipologia}}\\\"\\r\\n            min=\\\"1\\\" max=\\\"3\\\"\\r\\n            [(ngModel)]=\\\"newProdotto.tipologia\\\"\\r\\n            (ngModelChange)=\\\"checkCampo('tipologia')\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"> \\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [disabled]=\\\"!flag.diversi || !flag.nome || !flag.prezzo ||\\r\\n        !flag.quantita || !flag.tipologia || !flag.immagine || !flag.descrizione\\\"\\r\\n        (click)=\\\"salva(); modal.close('Close click')\\\">Salva</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"modal.close('Close click')\\\">Annulla</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #modaleRemove let-modal>\\r\\n    <div class=\\\"modal-header border-danger\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Confermi l'eliminazione del prodotto?</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div>\\r\\n            <h4>Id : </h4>\\r\\n            <h3>\\r\\n                {{copiaProdotto.id}}\\r\\n            </h3> <br><br>\\r\\n            <h4>Nome: </h4> \\r\\n            <h3>{{copiaProdotto.nome}}</h3>\\r\\n            <br>\\r\\n            <img [src]=\\\"'/assets/immagini_prodotti/' + copiaProdotto.immagine + '.jpg'\\\" class=\\\"mr-2\\\"\\r\\n                            style=\\\"width: 70px; height: 70px;\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\"\\r\\n        (click)=\\\"elimina(); modal.close('Close click')\\\">Elimina</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"modal.close('Close click')\\\">Annulla</button>\\r\\n    </div>\\r\\n</ng-template>\"","export default \"<ng-template #content let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Login amministratore</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click'); goToPage('')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"exampleInputEmail1\\\">Codice fiscale</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\"\\r\\n          [(ngModel)]=\\\"crdLogin.codicefiscale\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"exampleInputPassword1\\\">Password</label>\\r\\n        <input type=\\\"{{tipoCampo}}\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" [(ngModel)]=\\\"crdLogin.password\\\"\\r\\n          [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group form-check\\\">\\r\\n        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\" (change)=\\\"showPassword()\\\" style=\\\"cursor: pointer;\\\">\\r\\n        <label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">mostra password</label>\\r\\n        <br>\\r\\n        <small *ngIf=\\\"flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\"> Dati inseriti errati!</small>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer justify-content-center\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"login(crdLogin)\\\">Login</button>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"utenteAttivo && prodottiLoaded\\\">\\r\\n  <div class=\\\"row align-items-center h-100\\\">\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <h1>Benvenuto {{adminLoaded.nome}} {{adminLoaded.cognome}}</h1>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 offset-1\\\" style=\\\"padding-left: 47px;\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"logout()\\\">\\r\\n        Logout <i class=\\\"fa fa-sign-out\\\"></i></button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ngb-tabset *ngIf=\\\"utenteAttivo && prodottiLoaded\\\" [justify]=\\\"'justified'\\\">\\r\\n\\r\\n  <ngb-tab title=\\\"Modifica prodotti\\\">\\r\\n    <ng-template ngbTabContent>\\r\\n      <p>\\r\\n        <app-gestione-prodotti></app-gestione-prodotti>\\r\\n      </p>\\r\\n    </ng-template>\\r\\n  </ngb-tab>\\r\\n  <ngb-tab title=\\\"Modifica dati\\\">\\r\\n    <ng-template ngbTabContent>\\r\\n\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-2\\\">\\r\\n            <div class=\\\"nav flex-column nav-pills\\\" id=\\\"v-pills-tab\\\" role=\\\"tablist\\\" aria-orientation=\\\"vertical\\\">\\r\\n              <a class=\\\"nav-link active\\\" id=\\\"informazioni-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-edit-data\\\" role=\\\"tab\\\"\\r\\n                aria-controls=\\\"v-pills-home\\\" aria-selected=\\\"true\\\">Informazioni generali</a>\\r\\n              <a class=\\\"nav-link\\\" id=\\\"password-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-edit-password\\\" role=\\\"tab\\\"\\r\\n                aria-controls=\\\"v-pills-profile\\\" aria-selected=\\\"false\\\">Password</a>\\r\\n              <a class=\\\"nav-link\\\" id=\\\"add-admin-tab\\\" data-toggle=\\\"pill\\\" href=\\\"#v-pills-add\\\" role=\\\"tab\\\"\\r\\n                aria-controls=\\\"v-pills-profile\\\" aria-selected=\\\"false\\\">Registra Amministratore</a>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-10\\\">\\r\\n            <div class=\\\"tab-content\\\" id=\\\"v-pills-tabContent\\\">\\r\\n              <div class=\\\"tab-pane fade show active\\\" id=\\\"v-pills-edit-data\\\" role=\\\"tabpanel\\\"\\r\\n                aria-labelledby=\\\"informazioni-tab\\\">\\r\\n                <app-modifica-dati-admin></app-modifica-dati-admin>\\r\\n              </div>\\r\\n              <div class=\\\"tab-pane fade\\\" id=\\\"v-pills-edit-password\\\" role=\\\"tabpanel\\\" \\r\\n                aria-labelledby=\\\"password-tab\\\">\\r\\n                <app-modifica-password-admin></app-modifica-password-admin>\\r\\n              </div>\\r\\n              <div class=\\\"tab-pane fade\\\" id=\\\"v-pills-add\\\" role=\\\"tabpanel\\\" \\r\\n                aria-labelledby=\\\"add-admin-tab\\\">\\r\\n                <app-add-admin></app-add-admin>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n  </ngb-tab>\\r\\n</ngb-tabset>\"","export default \"<form>\\r\\n    <br>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <br><br><br>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">Nome</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"nome\\\" placeholder=\\\"Inserire nome\\\" maxlength=\\\"40\\\"\\r\\n                [(ngModel)]=\\\"newField.nome\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"checkField('nome')\\\" >\\r\\n                <small *ngIf=\\\"!newField.nome\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">Cognome</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"cognome\\\" placeholder=\\\"Inserire cognome\\\" maxlength=\\\"40\\\"\\r\\n                [(ngModel)]=\\\"newField.cognome\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"checkField('cognome')\\\"  >\\r\\n                <small *ngIf=\\\"!newField.cognome\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">E-mail</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Inserire email\\\" maxlength=\\\"80\\\"\\r\\n                [(ngModel)]=\\\"newField.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"checkField('email')\\\" >\\r\\n                <small *ngIf=\\\"!flag.email && newField.email\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*E-mail non valida</small>\\r\\n                <small *ngIf=\\\"!newField.email\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n            <button type=\\\"button\\\"  name=\\\"button\\\"\\r\\n                class=\\\"btn btn-outline-primary\\\"\\r\\n                [disabled]=\\\"!flag.general || !flag.nome || !flag.cognome || !flag.email\\\"\\r\\n                (click)=\\\"salvaModifiche(content)\\\">Salva</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h2 style=\\\"color: green;\\\" *ngIf=\\\"risultatoModifica\\\">\\r\\n                <i class=\\\"fa fa-check-circle\\\"></i>\\r\\n                Modifica password avvenuta correttamente!\\r\\n            </h2>\\r\\n            <h2 style=\\\"color: red;\\\" *ngIf=\\\"!risultatoModifica\\\">\\r\\n                <i class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                Errore!\\r\\n            </h2>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"modal-footer justify-content-center\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n          (click)=\\\"closeModale()\\\" >OK</button>\\r\\n        </div>\\r\\n  \\r\\n      </form>\\r\\n    </div>\\r\\n  \\r\\n  </ng-template>\"","export default \"<form>\\r\\n    <br>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <br>\\r\\n      <div class=\\\"row form-group justify-content-center\\\">\\r\\n        <h1>Modifica password</h1>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row form-group justify-content-center\\\" >\\r\\n        <div class=\\\"col-md-4 \\\">\\r\\n          <label  for=\\\"nome\\\">Password corrente</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"oldPassword\\\" placeholder=\\\"password corrente\\\" maxlength=\\\"20\\\"\\r\\n            [(ngModel)]=\\\"oldPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"ctrlCampo()\\\">\\r\\n          <small *ngIf=\\\"!oldPassword && !flag.fOld\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n          <small *ngIf=\\\"oldPassword && !flag.fOld\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*password corrente errata</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row form-group justify-content-center\\\" >\\r\\n        <div class=\\\"col-md-4 \\\">\\r\\n          <label  for=\\\"nome\\\">Nuova password</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" placeholder=\\\"nuova password\\\" maxlength=\\\"20\\\"\\r\\n            [(ngModel)]=\\\"newPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"ctrlCampo()\\\">\\r\\n            <small *ngIf=\\\"!newPassword && !flag.fNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            <small *ngIf=\\\"newPassword && !flag.fNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*password non valida</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row form-group justify-content-center\\\" >\\r\\n        <div class=\\\"col-md-4 \\\">\\r\\n          <label  for=\\\"nome\\\">Conferma nuova password</label>\\r\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"confirmNewPassword\\\" placeholder=\\\"conferma nuova password\\\" maxlength=\\\"20\\\"\\r\\n            [(ngModel)]=\\\"confirmNewPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"ctrlCampo()\\\">\\r\\n            <small *ngIf=\\\"!confirmNewPassword && !flag.fCNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            <small *ngIf=\\\"confirmNewPassword && !flag.fCNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*password non corrispondenti</small>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br><br>\\r\\n      <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n          <button type=\\\"button\\\" [disabled]=\\\"!confirmNewPassword || !newPassword || !oldPassword || \\r\\n          !flag.fOld || !flag.fNew || !flag.fCNew\\\" (click)=\\\"salva(content)\\\" name=\\\"button\\\"\\r\\n              class=\\\"btn btn-outline-primary\\\">Salva</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <ng-template #content let-modal>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <h2 style=\\\"color: green;\\\" *ngIf=\\\"risultatoModifica\\\">\\r\\n                <i class=\\\"fa fa-check-circle\\\"></i>\\r\\n                Modifica password avvenuta correttamente!\\r\\n            </h2>\\r\\n            <h2 style=\\\"color: red;\\\" *ngIf=\\\"!risultatoModifica\\\">\\r\\n                <i class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                Errore!\\r\\n            </h2>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"modal-footer justify-content-center\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n          (click)=\\\"closeModale()\\\" >OK</button>\\r\\n        </div>\\r\\n  \\r\\n      </form>\\r\\n    </div>\\r\\n  \\r\\n  </ng-template>\"","export default \"\\r\\n \\r\\n<router-outlet></router-outlet>\\r\\n<!-- main content container -->\\r\\n<!-- <div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-8 offset-sm-2\\\">\\r\\n              \\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>   -->\"","export default \"<app-navbar></app-navbar>\\r\\n<ngb-alert *ngIf=\\\"alert && alert != null\\\" [type]=\\\"alert.type\\\" (close)=\\\"close(alert)\\\">{{ alert.message }}</ngb-alert>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-10 offset-1\\\">\\r\\n            <br>\\r\\n            <h2>Il mio Carrello</h2>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-10\\\" *ngIf=\\\"active && !carrelloVuoto\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <tbody>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <tr *ngFor=\\\"let prod of prodInCarrello\\\">\\r\\n                        <td style=\\\"width: 100px; height: 100px;\\\">\\r\\n                            <img [src]=\\\"'/assets/immagini_prodotti/' + prod.pr.immagine \\\" class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\r\\n                            width: 100px; height: 100px;\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <div>\\r\\n                                {{prod.pr.nome}}\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                Quantità:\\r\\n                                <select [(ngModel)]=\\\" prod.ca.quantita_prodotto\\\" style=\\\"cursor: pointer;\\\"\\r\\n                                    (ngModelChange)=\\\"aggiornaQuantita(prod.ca)\\\">\\r\\n                                    <option *ngFor=\\\" let x of counter(prod.pr.quantita); let i= index \\\">\\r\\n                                        {{i+1}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n\\r\\n                            <ul class=\\\"list-unstyled\\\">\\r\\n                                <li>\\r\\n                                    <a style=\\\"color: blue; cursor: pointer;\\\" (click)=\\\"eliminaProdotto(prod.ca)\\\">\\r\\n                                        Elimina prodotto\\r\\n                                    </a>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            {{calPrezzo(prod.ca.quantita_prodotto, prod.ca.prezzo_prodotto)}} €\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td></td>\\r\\n                        <td></td>\\r\\n                        <td>\\r\\n                            Totale Provvisorio: {{costoTotale}} €\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-10\\\" *ngIf=\\\"active && carrelloVuoto\\\">\\r\\n            <h4>Nessun prodotto nel carrello</h4>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 form-group; border-left\\\">\\r\\n            <br><br><br>\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h6>Totale Provvisorio: </h6> {{costoTotale}} €\\r\\n                    <br><br>\\r\\n                    <button type=\\\"button\\\" name=\\\"button\\\" style=\\\"color: black; cursor: pointer;\\\"\\r\\n                        class=\\\"btn btn-outline-warning\\\" (click)=\\\"acquista()\\\" *ngIf=\\\"!carrelloVuoto\\\">\\r\\n                        Procedi all'ordine\\r\\n                    </button>\\r\\n                    <br><br>\\r\\n                    <button type=\\\"button\\\" name=\\\"button\\\" style=\\\"color: black; cursor: pointer;\\\"\\r\\n                        class=\\\"btn btn-outline-warning\\\" (click)=\\\"catalogo()\\\">\\r\\n                        Continua shopping\\r\\n                    </button>\\r\\n                    </div>\\r\\n            </div>\\r\\n            <br><br> \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<br><br><br><br><br>\\r\\n<app-footer></app-footer>\"","export default \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-2\\\" style=\\\"background-color: rgba(150, 147, 7, 0.253); border-right: solid;\\\">\\r\\n            <br>\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\" style=\\\"background-color: rgb(255, 255, 255); border: solid; height: 200px;\\\">\\r\\n                    \\r\\n                    <h6>Filtri:</h6>\\r\\n                    \\r\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"check.stampanti\\\"\\r\\n                        (change)=\\\"check.stampanti = !check.stampanti;tActive = false; setFiltri()\\\" style=\\\"cursor: pointer\\\">\\r\\n                    Stampanti\\r\\n                    <br>\\r\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"check.filamenti\\\"\\r\\n                        (change)=\\\"check.filamenti = !check.filamenti;tActive = false; setFiltri()\\\" style=\\\"cursor: pointer\\\">\\r\\n                    Filamenti\\r\\n                    <br>\\r\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"check.pezzi\\\" (change)=\\\"check.pezzi = !check.pezzi; setFiltri()\\\"\\r\\n                        style=\\\"cursor: pointer\\\"> Pezzi di ricambio\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-10\\\" *ngIf=\\\"tActive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <tbody>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <tr *ngFor=\\\"let prodotto of lProdotti\\\">\\r\\n                        <td style=\\\"width: 150px; height: 150px;\\\">\\r\\n                            <img [src]=\\\"'/assets/immagini_prodotti/' + prodotto.immagine \\\" class=\\\"nav-link\\\"\\r\\n                                style=\\\"cursor: pointer;\\r\\n                                width: 150px; height: 150px;\\\" (click)=\\\"apriDettaglio(prodotto)\\\">\\r\\n                        </td>\\r\\n                        <td class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"apriDettaglio(prodotto)\\\">\\r\\n                            <div>\\r\\n                                <h3>{{ prodotto.nome }}</h3>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <h4> {{ prodotto.prezzo }} € </h4>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"prodotto.quantita < 6 && prodotto.quantita > 0\\\" style=\\\"color: red;\\\">\\r\\n                                Disponibilità: solo {{prodotto.quantita}}\\r\\n\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"prodotto.quantita === 0\\\" style=\\\"color: red;\\\">\\r\\n                                Disponibilità: attualmente non disponibile\\r\\n\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n            <div class=\\\"d-flex justify-content-between p-2\\\">\\r\\n                <ngb-pagination [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\">\\r\\n                </ngb-pagination>\\r\\n\\r\\n                <select class=\\\"custom-select\\\" style=\\\"width: auto; cursor: pointer;\\\" [(ngModel)]=\\\"pageSize\\\">\\r\\n                    <option [ngValue]=\\\"2\\\">2 items per page</option>\\r\\n                    <option [ngValue]=\\\"4\\\">4 items per page</option>\\r\\n                    <option [ngValue]=\\\"6\\\">6 items per page</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<app-footer></app-footer>\"","export default \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-10\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n                <tbody>\\r\\n                    <br>\\r\\n                    <br>\\r\\n                    <tr>\\r\\n                        <td style=\\\"width: 500px; height: 500px;\\\">\\r\\n                            <img [src]=\\\"'/assets/immagini_prodotti/' + prodotto.immagine\\\"\\r\\n                                style=\\\"width: 500px; height: 500px;\\\">\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <div>\\r\\n                                <h3>{{ prodotto.nome }}</h3>\\r\\n                            </div>\\r\\n                            <div>\\r\\n                                <h4> prezzo: {{ prodotto.prezzo }} € </h4>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"prodotto.quantita > 0\\\">\\r\\n                                Disponibilità: {{prodotto.quantita}}\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"prodotto.quantita === 0\\\" style=\\\"color: red;\\\">\\r\\n                                Attualmente non disponibile\\r\\n                            </div>\\r\\n                            <br><br>\\r\\n                            <div>\\r\\n                                Descrizione: <br>\\r\\n                                {{prodotto.descrizione}}\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <br><br><br>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 form-group; border-left \\\">\\r\\n            <br><br><br>\\r\\n            Quantità:\\r\\n            <select [disabled]=\\\"prodotto.quantita === 0 || !loggedUt\\\" \\r\\n            [(ngModel)]=\\\" qSelected\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <option *ngFor=\\\" let x of counter(prodotto.quantita); let i= index \\\">\\r\\n                    {{i+1}}\\r\\n                </option>\\r\\n            </select>\\r\\n            <br><br>\\r\\n            <button type=\\\"button\\\" name=\\\"button\\\" style=\\\"color: black; cursor: pointer;\\\" class=\\\"btn btn-outline-warning\\\" \\r\\n            [disabled]=\\\"prodotto.quantita === 0 || !loggedUt\\\" (click)=\\\"aggiungiAlCarrello()\\\" >\\r\\n                <h6> <i class=\\\"fa fa-shopping-cart\\\"></i> Aggiungi al carrello </h6>\\r\\n            </button>\\r\\n            <br>\\r\\n            {{qSelected}}\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","export default \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\" style=\\\"background-color: rgba(150, 147, 7, 0.253);\\\">\\n    <br><br>\\n    <div class=\\\"row justify-content-center\\\">\\n        <h2>Contattaci</h2>\\n    </div>\\n    <div class=\\\"row justify-content-center\\\">\\n        <h4>Hai qualche domanda? Siamo a tua disposizione da Lun.- Ven. dalle 9 - 18</h4>\\n\\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-4 offset-1 \\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\" style=\\\"background-color: rgba(26, 131, 192, 0.199); height: 400px;\\\">\\n                    <div class=\\\"row justify-content-center\\\" >\\n                        <h1>\\n                            <i class=\\\"fa fa-phone\\\"></i>\\n                        </h1>\\n                    </div>\\n                    <div class=\\\"row justify-content-center\\\" >\\n                        <h1>\\n                           Telefono\\n                        </h1>\\n                    </div>\\n                    <br><br>\\n                    <div class=\\\"row justify-content-center\\\" >\\n                        <h4>\\n                           +39 111 2345678\\n                        </h4>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-4 offset-2\\\" >\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\" style=\\\"background-color: rgba(26, 131, 192, 0.199); height: 400px;\\\">\\n                    <div class=\\\"row justify-content-center\\\" >\\n                        <h1>\\n                            <i class=\\\"fa fa-comments\\\"></i>\\n                        </h1>\\n                    </div>\\n                    <div class=\\\"row justify-content-center\\\" >\\n                        <h1>\\n                            Chat\\n                        </h1>\\n                    </div>\\n                    <br><br>\\n                    <div class=\\\"row justify-content-center\\\" >\\n                        <h1>\\n                            <button class=\\\"btn btn-sm btn-outline-primary mr-400\\\">\\n                                Inizia Chat\\n                            </button>\\n                        </h1>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <br><br>    <br><br>\\n    <br><br>\\n    <br><br>    <br><br>\\n    <br><br>\\n\\n\\n\\n</div>\\n<app-footer></app-footer>\"","export default \"<footer class=\\\"page-footer font-small bg-primary pt-4\\\">\\r\\n\\r\\n    <div class=\\\"container-fluid text-center text-md-left\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <hr class=\\\"clearfix w-100 d-md-none pb-3\\\">\\r\\n            <div class=\\\"col-md-3 offset-2 mb-md-0 mb-3\\\">\\r\\n\\r\\n                <h5 class=\\\"text-uppercase\\\" style=\\\"color: white;\\\">Assistenza e contatti</h5>\\r\\n\\r\\n                <ul class=\\\"list-unstyled\\\">\\r\\n                  \\r\\n                    <li>\\r\\n                        <a routerLink=\\\"\\\" style=\\\"color: white; cursor: pointer; \\\" (click)=\\\"reidirectTo('metodi_pagamento')\\\">Metodi di pagamento</a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a routerLink=\\\"\\\" style=\\\"color: white;\\\" (click)=\\\"reidirectTo('contatti')\\\">Contatti</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3 mb-md-0 mb-3\\\">\\r\\n\\r\\n                <h5 class=\\\"text-uppercase\\\" style=\\\"color: white;\\\">Area riservata</h5>\\r\\n\\r\\n                <ul class=\\\"list-unstyled\\\">\\r\\n                    <li>\\r\\n                        <a href=\\\"login_admin\\\" style=\\\"color: white;\\\">Login admin</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Copyright -->\\r\\n    <div class=\\\"footer-copyright text-center py-3\\\" style=\\\"color: white;\\\">© 2020 Copyright: Alfredo Fiore\\r\\n    </div>\\r\\n\\r\\n</footer>\\r\\n\"","export default \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\" style=\\\"background-color: rgba(150, 147, 7, 0.253);\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-5\\\" >\\n            <h3>\\n                Metodi di pagamento\\n            </h3>\\n            <br>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"col-12 offset-1\\\">\\n                <h6>\\n                    Puoi utilizzare diversi metodi di pagamento per \\n                    effettuare acquisti sul nostro sito: carte di credito, \\n                    buoni regalo o codici per ricaricare il tuo account, \\n                    che puoi pagare in contanti presso i punti vendita selezionati.\\n                </h6>\\n            </div>\\n        </div>\\n    </div>\\n    <br><br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <div class=\\\"col-12 offset-1\\\">\\n                <div class=\\\"row\\\">\\n                    <h5>\\n                        È possibile utilizzare i seguenti metodi di pagamento:\\n                    </h5>\\n                </div>\\n                <li>Visa</li>\\n                <li>Mastercard</li>\\n                <li>American Express</li>\\n                <li>Paypal</li>    \\n                <li>Postepay</li>\\n            </div>\\n            <br><br>\\n            <div class=\\\"col-12 offset-1\\\">                      \\n                <div class=\\\"row\\\">\\n                    <h5>\\n                        I seguenti metodi di pagamento non possono essere accettati per acquistare articoli:\\n                    </h5>\\n                </div>\\n                <li>Assegni o vaglia postali</li>\\n                <li>Contanti</li>\\n                <li>Pagamento in contrassegno</li>\\n                <li>Trasferimenti bancari</li>    \\n                <li>Bonifici</li>\\n            </div>         \\n            <br><br><br><br><br><br><br>\\n            \\n        </div>\\n    </div>\\n    <br>\\n</div>    \\n\\n\\n\\n\\n<app-footer></app-footer>\"","export default \"<app-navbar></app-navbar>\\r\\n<br>\\r\\n<ngb-carousel *ngIf=\\\"images\\\" style=\\\"width: 100%; margin: 0 auto\\\">\\r\\n    <ng-template ngbSlide>\\r\\n        <div class=\\\"picsum-img-wrapper\\\">\\r\\n            <img [src]=\\\"images[0]\\\" alt=\\\"Random first slide\\\" style=\\\"width: 100%; height: 150%;\\\">\\r\\n        </div>\\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n        </div>\\r\\n    </ng-template>\\r\\n    <ng-template ngbSlide>\\r\\n        <div class=\\\"picsum-img-wrapper\\\">\\r\\n            <img [src]=\\\"images[1]\\\" alt=\\\"Random second slide\\\" style=\\\"width: 100%; height: 150%;\\\">\\r\\n        </div>\\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n        </div>\\r\\n    </ng-template>\\r\\n    <ng-template ngbSlide>\\r\\n        <div class=\\\"picsum-img-wrapper\\\">\\r\\n            <img [src]=\\\"images[2]\\\" alt=\\\"Random third slide\\\" style=\\\"width: 100%; height: 300%;\\\">\\r\\n        </div>\\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</ngb-carousel>\\r\\n\\r\\n\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\"","export default \"<!-- nav -->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n    <div class=\\\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"reidirectTo('')\\\">Home</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"loadProdotti(true); reloadCatalogo()\\\">Prodotti</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Cerca\\\" aria-label=\\\"Search\\\"\\r\\n                    [(ngModel)]=\\\"keyFind\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <button class=\\\"btn btn-outline-light my-2 my-sm-0\\\" type=\\\"submit\\\"\\r\\n                        (click)=\\\"searchProdotti(keyFind, true); reloadCatalogo(keyFind,true)\\\">\\r\\n                        <i class=\\\"fa fa-search\\\"></i></button>\\r\\n                </form>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"mx-auto my-2 order-0 order-md-1 position-relative\\\">\\r\\n        <a class=\\\"mx-auto\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"reidirectTo('')\\\">\\r\\n            <img src=\\\"/assets/loghi/logo_sito.png\\\" class=\\\"rounded-circle\\\">\\r\\n        </a>\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".dual-collapse2\\\">\\r\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"navbar-collapse collapse w-100 order-3 dual-collapse2\\\">\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" *ngIf=\\\"!utCorrente\\\" (click)=\\\"logout() \\\">Login</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" *ngIf=\\\"!utCorrente\\\" (click)=\\\"reidirectTo('registrazione')\\\">Signup</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n\\r\\n                <a class=\\\"dropdown \\\">\\r\\n                    <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu2\\\"\\r\\n                        data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" *ngIf=\\\"utCorrente\\\">\\r\\n                        Benvenuto {{utCorrente.username}}\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"reidirectTo('gestione_profilo'); clearTentativi() \\\">Il mio profilo</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" *ngIf=\\\"utCorrente\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n                        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer;\\\" *ngIf=\\\"utCorrente\\\" (click)=\\\"reidirectTo('ordini')\\\">I miei ordini</a>\\r\\n                    </div>\\r\\n                    \\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n                <a class=\\\"nav-link\\\" style=\\\"cursor: pointer;\\\" *ngIf=\\\"utCorrente\\\" (click)=\\\"reidirectTo('carrello')\\\">\\r\\n                    <i class=\\\"fa fa-shopping-cart\\\">\\r\\n                    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"numProdotti && numProdotti >0\\\">{{numProdotti}}</span>\\r\\n\\r\\n                    </i>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</nav>\"","export default \"<app-navbar></app-navbar>\\r\\n<br>\\r\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"loaded && numeroOrdini === 0\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-10 offset-1\\\">\\r\\n            <h2>Nessun ordine effettuato</h2>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"loaded && numeroOrdini > 0\\\">\\r\\n    <div class=\\\"row\\\" *ngFor=\\\"let ord of listaOrdini\\\">\\r\\n        <div class=\\\"col-10 offset-1\\\">\\r\\n            <br><br>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead class=\\\"thead-light\\\">\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\">Data ordine:<br> {{getDate(ord.data_ordine)}}</th>\\r\\n                        <th scope=\\\"col\\\" >Totale:<br> {{ord.prezzo}} €</th>\\r\\n                        <th scope=\\\"col\\\">Invia a:<br> {{decriptIndirizzo(ord.indirizzo_spedizione).cognome}}\\r\\n                            {{decriptIndirizzo(ord.indirizzo_spedizione).nome}} </th>\\r\\n                        <th scope=\\\"col\\\">Ordine N°: {{ord.id}}</th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let p of prodottiToArray(ord.prodotti)\\\">\\r\\n                        <td scope=\\\"col\\\" style=\\\"width: 100px; height: 100px;\\\">\\r\\n                            <img [src]=\\\"'/assets/immagini_prodotti/' + decriptProdotto(p).immagine \\\" class=\\\"nav-link\\\"\\r\\n                                style=\\\"cursor: pointer;\\r\\n                            width: 100px; height: 100px;\\\">\\r\\n                        <td scope=\\\"col\\\" colspan=\\\"3\\\">\\r\\n                            <h5>{{decriptProdotto(p).nome}} </h5>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<app-footer></app-footer>\"","export default \"<app-navbar></app-navbar>\\r\\n<br>\\r\\n<ngb-tabset *ngIf=\\\"utenteAttivo\\\" [justify]=\\\"'justified'\\\">\\r\\n\\r\\n    <ngb-tab title=\\\"Modifica password\\\">\\r\\n      <ng-template ngbTabContent>\\r\\n        <p>\\r\\n            <app-modifica-password></app-modifica-password>\\r\\n        </p>\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n    <ngb-tab title=\\\"Gestione dati\\\">\\r\\n      <ng-template ngbTabContent>\\r\\n        <p>\\r\\n            <app-modifica-dati></app-modifica-dati>\\r\\n        </p>\\r\\n      </ng-template>\\r\\n    </ngb-tab>\\r\\n  </ngb-tabset>\\r\\n  <br><br>\\r\\n<app-footer></app-footer>\\r\\n\"","export default \"<form>\\r\\n    <br>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <br><br><br>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">Nome</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"nome\\\" placeholder=\\\"Inserire nome\\\" maxlength=\\\"40\\\"\\r\\n                    [(ngModel)]=\\\"utenteModificato.nome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"checkField('nome')\\\">\\r\\n                <small *ngIf=\\\"!utenteModificato.nome\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">Cognome</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"cognome\\\" placeholder=\\\"Inserire cognome\\\" maxlength=\\\"40\\\"\\r\\n                    [(ngModel)]=\\\"utenteModificato.cognome\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"checkField('cognome')\\\">\\r\\n                <small *ngIf=\\\"!utenteModificato.cognome\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">E-mail</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Inserire email\\\" maxlength=\\\"80\\\"\\r\\n                    [(ngModel)]=\\\"utenteModificato.email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"checkField('email')\\\">\\r\\n                <small *ngIf=\\\"!flag.email && utenteModificato.email\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*E-mail non\\r\\n                    valida</small>\\r\\n                <small *ngIf=\\\"!utenteModificato.email\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">Username</label>\\r\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Inserire username\\\" maxlength=\\\"80\\\"\\r\\n                    [(ngModel)]=\\\"utenteModificato.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"checkField('username')\\\">\\r\\n                <small *ngIf=\\\"!utenteModificato.username\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n            <div class=\\\"col-md-8 offset-2\\\">\\r\\n                <label for=\\\"nome\\\">Cellulare</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"cellulare\\\" placeholder=\\\"Inserire cellulare\\\" maxlength=\\\"80\\\"\\r\\n                    [(ngModel)]=\\\"utenteModificato.cellulare\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                    (ngModelChange)=\\\"checkField('cellulare')\\\">\\r\\n                <small *ngIf=\\\"!utenteModificato.cellulare\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n                [disabled]=\\\"!flag.general || !flag.nome || !flag.cognome || !flag.email || !flag.username || !flag.cellulare\\\"\\r\\n                (click)=\\\"salvaModifiche(content)\\\">Salva</button>\\r\\n        </div>\\r\\n        <br> <br><br><br>\\r\\n        <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"apriModale(content2)\\\">Elimina\\r\\n                profilo</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <h2 style=\\\"color: green;\\\" *ngIf=\\\"risultatoModifica\\\">\\r\\n                    <i class=\\\"fa fa-check-circle\\\"></i>\\r\\n                    Modifica password avvenuta correttamente!\\r\\n                </h2>\\r\\n                <h2 style=\\\"color: red;\\\" *ngIf=\\\"!risultatoModifica\\\">\\r\\n                    <i class=\\\"fa fa-exclamation-circle\\\"></i>\\r\\n                    Errore!\\r\\n                </h2>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-footer justify-content-center\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"closeModale()\\\">OK</button>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #content2 let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" style=\\\"color: red;\\\">Eliminazione profilo</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row form-group\\\">\\r\\n                    <div class=\\\"col-md-10 offset-1\\\">\\r\\n                        <label>\\r\\n                            Confermi di voler eliminare il tuo profilo?\\r\\n                            <br> Tutti i dati andranno persi\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br>\\r\\n                <div class=\\\"row form-group\\\">\\r\\n                    <div class=\\\"col-md-10 offset-1\\\">\\r\\n                        <label>\\r\\n                            Per confermare digita 'confermo eliminazione'\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row form-group\\\">\\r\\n                    <div class=\\\"col-md-10 offset-1\\\">\\r\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" maxlength=\\\"21\\\" [(ngModel)]=\\\"fraseEliminazione\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer justify-content-center\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n                        [disabled]=\\\"!fraseEliminazione || fraseEliminazione !== 'confermo eliminazione' \\\"\\r\\n                        (click)=\\\"closeModale(); eliminaUtente() \\\">Conferma</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"closeModale()\\\">Annulla</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</ng-template>\"","export default \"<!--ALERT-->\\r\\n    <div *ngFor=\\\"let alert of alerts\\\">\\r\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"close(alert)\\\">{{ alert.message }}</ngb-alert>\\r\\n    </div>\\r\\n<form>\\r\\n  <br>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row form-group justify-content-center\\\">\\r\\n      <h1>Modifica password</h1>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"row form-group justify-content-center\\\" >\\r\\n      <div class=\\\"col-md-4 \\\">\\r\\n        <label  for=\\\"nome\\\">Password corrente</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"oldPassword\\\" placeholder=\\\"password corrente\\\" maxlength=\\\"20\\\"\\r\\n          [(ngModel)]=\\\"oldPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"ctrlCampo()\\\">\\r\\n        <small *ngIf=\\\"!oldPassword && !flag.fOld\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n        <small *ngIf=\\\"oldPassword && !flag.fOld\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*password corrente errata</small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row form-group justify-content-center\\\" >\\r\\n      <div class=\\\"col-md-4 \\\">\\r\\n        <label  for=\\\"nome\\\">Nuova password</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" placeholder=\\\"nuova password\\\" maxlength=\\\"20\\\"\\r\\n          [(ngModel)]=\\\"newPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"ctrlCampo()\\\">\\r\\n          <small *ngIf=\\\"!newPassword && !flag.fNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n          <small *ngIf=\\\"newPassword && !flag.fNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*password non valida</small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row form-group justify-content-center\\\" >\\r\\n      <div class=\\\"col-md-4 \\\">\\r\\n        <label  for=\\\"nome\\\">Conferma nuova password</label>\\r\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"confirmNewPassword\\\" placeholder=\\\"conferma nuova password\\\" maxlength=\\\"20\\\"\\r\\n          [(ngModel)]=\\\"confirmNewPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (ngModelChange)=\\\"ctrlCampo()\\\">\\r\\n          <small *ngIf=\\\"!confirmNewPassword && !flag.fCNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n          <small *ngIf=\\\"confirmNewPassword && !flag.fCNew\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*password non corrispondenti</small>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br><br>\\r\\n    <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n        <button type=\\\"button\\\" [disabled]=\\\"!confirmNewPassword || !newPassword || !oldPassword || \\r\\n        !flag.fOld || !flag.fNew || !flag.fCNew\\\" (click)=\\\"salva()\\\" name=\\\"button\\\"\\r\\n            class=\\\"btn btn-outline-primary\\\">Salva</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n \\r\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\r\\n\\t<link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\\\" integrity=\\\"sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP\\\" crossorigin=\\\"anonymous\\\">\\r\\n\\r\\n    <body style=\\\"background-color: rgba(255, 166, 0, 0.247)\\\">\\r\\n\\t<app-navbar></app-navbar>\\r\\n\\t<br>\\r\\n\\t<!--ALERT-->\\r\\n    <div *ngFor=\\\"let alert of alerts\\\">\\r\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"close(alert)\\\">{{ alert.message }}</ngb-alert>\\r\\n    </div>\\r\\n\\t<div class=\\\"user_card\\\">\\r\\n        <br><br><br><br><br>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-center\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-center form_container\\\">\\r\\n\\t\\t\\t\\t\\t<form>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-append\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input  type=\\\"text\\\" name=\\\" \\\" class=\\\"form-control input_user\\\" placeholder=\\\"e-mail\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\" ut.email\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-append\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"{{tipoCampo}}\\\" name=\\\" \\\" class=\\\"form-control input_pass\\\"  placeholder=\\\"password\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\" ut.password\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group mb-3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group form-check\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\" (change)=\\\"showPassword()\\\" style=\\\"cursor: pointer;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">mostra password</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" (click)=\\\"entra()\\\" name=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Login</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"mt-4\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-center links\\\">\\r\\n\\t\\t\\t\\t\\t\\tNon sei registrato? <a href=\\\"./registrazione\\\" class=\\\"ml-2\\\">registrati</a>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<br><br><br><br><br>\\r\\n\\t\\t\\t<app-footer></app-footer>\\r\\n</body>\\r\\n</html>\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n\\r\\n<head>\\r\\n\\r\\n</head>\\r\\n\\r\\n<body style=\\\"background-color: rgba(255, 166, 0, 0.247)\\\">\\r\\n    <app-navbar></app-navbar>\\r\\n    <br>\\r\\n    <!--ALERT-->\\r\\n    <div *ngFor=\\\"let alert of alerts\\\">\\r\\n        <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"close(alert)\\\">{{ alert.message }}</ngb-alert>\\r\\n    </div>\\r\\n    <!--modale-->\\r\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Confermi di voler salvare i dati inseriti?</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <li>Nome: {{newUt.nome}}</li>\\r\\n            <li>Cognome: {{newUt.cognome}}</li>\\r\\n            <li>Username: {{newUt.username}}</li>\\r\\n            <li>E-mail: {{newUt.email}}</li>\\r\\n            <li>Password: {{newUt.password}}</li>\\r\\n            <li>Codice Fiscale: {{newUt.codicefiscale}}</li>\\r\\n            <li>Indirizzo: {{newUt.indirizzo}}</li>\\r\\n            <li>Cellulare: {{newUt.cellulare}}</li>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"closeModal('salva', content)\\\">Salva</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\"\\r\\n                (click)=\\\"closeModal('annulla' , content)\\\">Annulla</button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n    <form>\\r\\n        <br>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <br>\\r\\n            <div class=\\\"row form-group justify-content-center\\\">\\r\\n                <h1>Registrazione Cliente</h1>\\r\\n            </div>\\r\\n            <br><br><br>\\r\\n            <div class=\\\"row form-group\\\">\\r\\n                <div class=\\\"col-md-4 offset-1\\\">\\r\\n                    <h6>Nome</h6>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"nome\\\" placeholder=\\\"Inserire nome\\\" maxlength=\\\"20\\\"\\r\\n                        [(ngModel)]=\\\" newUt.nome\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <small *ngIf=\\\"!newUt.nome && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 offset-2\\\">\\r\\n                    <h6>Cognome</h6>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"cognome\\\" placeholder=\\\"Inserire cognome\\\" maxlength=\\\"20\\\"\\r\\n                        [(ngModel)]=\\\" newUt.cognome\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <small *ngIf=\\\"!newUt.cognome && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"row form-group\\\">\\r\\n                <div class=\\\"col-md-4 offset-1\\\">\\r\\n                    <h6>Username</h6>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Inserire username\\\"\\r\\n                        maxlength=\\\"20\\\" [(ngModel)]=\\\" newUt.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <small *ngIf=\\\"!newUt.username && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 offset-2\\\">\\r\\n                    <h6>E-mail</h6>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Inserire e-mail\\\" maxlength=\\\"40\\\"\\r\\n                        [(ngModel)]=\\\" newUt.email\\\" (ngModelChange)=\\\"onChange('email')\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <small *ngIf=\\\"(!newUt.email || !flagCtrlCampi.email) \\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">\\r\\n                        {{msgErrore.email}}</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"row form-group\\\">\\r\\n                <div class=\\\"col-md-4 offset-1\\\">\\r\\n                    <h6>Password</h6>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Inserire password\\\"\\r\\n                        maxlength=\\\"20\\\" [(ngModel)]=\\\" newUt.password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <small *ngIf=\\\"!newUt.password && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">\\r\\n                        *campo obbligatorio</small> <br>\\r\\n                    <small *ngIf=\\\"!this.flagCtrlCampi.password\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">\\r\\n                        *La password deve essere di almeno 8 caratteri e contenere almeno:\\r\\n                        <li>una lettera maiuscola</li>\\r\\n                        <li>una lettera minuscola</li>\\r\\n                        <li>un carattere spciale</li>\\r\\n                        <li>nessuno spazio</li>\\r\\n                    </small>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 offset-2\\\">\\r\\n                    <h6>Conferma password</h6>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"cPassword\\\" placeholder=\\\"Inserire password\\\"\\r\\n                        maxlength=\\\"20\\\" [(ngModel)]=\\\" cPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <small *ngIf=\\\"!cPassword && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"row form-group\\\">\\r\\n                <div class=\\\"col-md-4 offset-1\\\">\\r\\n                    <h6>Codice fiscale</h6>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"cf\\\" placeholder=\\\"Inserire codice fiscale\\\"\\r\\n                        maxlength=\\\"16\\\" [(ngModel)]=\\\" newUt.codicefiscale\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        (ngModelChange)=\\\"onChange('codicefiscale')\\\">\\r\\n                    <small *ngIf=\\\"(!newUt.codicefiscale || !flagCtrlCampi.codiceFiscale) \\\" id=\\\"avviso\\\"\\r\\n                        style=\\\"color: red;\\\">\\r\\n                        {{msgErrore.codiceFiscale}}</small>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4 offset-2\\\">\\r\\n                    <h6>Cellulare</h6>\\r\\n                    <input type=\\\"cellulare\\\" class=\\\"form-control\\\" id=\\\"cellulare\\\"\\r\\n                        placeholder=\\\"Inserire numero di cellulare\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\" newUt.cellulare\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                    <small *ngIf=\\\"!newUt.cellulare && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo obbligatorio</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"row form-group\\\">\\r\\n                <div class=\\\"col-md-10 offset-1\\\">\\r\\n                    <h6>indirizzo</h6>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-10\\\">\\r\\n                            via: <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"indirizzo\\\"\\r\\n                                placeholder=\\\"Inserire indirizzo\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"indirizzo.via\\\"\\r\\n                                [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            <small *ngIf=\\\"!indirizzo.via && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo\\r\\n                                obbligatorio</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2 \\\">\\r\\n                            N°: <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"indirizzo\\\" placeholder=\\\"Inserire indirizzo\\\"\\r\\n                                maxlength=\\\"20\\\" [(ngModel)]=\\\"indirizzo.civico\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                            <small *ngIf=\\\"!indirizzo.civico && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo\\r\\n                                obbligatorio</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5 \\\">\\r\\n                            Provincia:\\r\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"indirizzo.provincia\\\"\\r\\n                            (ngModelChange)=\\\"loadComuni()\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                <option *ngFor=\\\" let x of provincie \\\">\\r\\n                                    {{x.nome}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <small *ngIf=\\\"!indirizzo.provincia && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo\\r\\n                                obbligatorio</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            Città:\\r\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"indirizzo.citta\\\" style=\\\"cursor: pointer;\\\"\\r\\n                            (ngModelChange)=\\\"loadCap()\\\"\\r\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                <option *ngFor=\\\" let x of listaComuniDaCaricare \\\">\\r\\n                                    {{x.nome}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <small *ngIf=\\\"!indirizzo.citta && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo\\r\\n                                obbligatorio</small>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            CAP: \\r\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"indirizzo.cap\\\" style=\\\"cursor: pointer;\\\"\\r\\n                             [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                <option *ngFor=\\\" let x of listaCap \\\">\\r\\n                                    {{x}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <small *ngIf=\\\"!indirizzo.cap && flag\\\" id=\\\"avviso\\\" style=\\\"color: red;\\\">*campo\\r\\n                                obbligatorio</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <br><br><br><br>\\r\\n    <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"registra(content)\\\" name=\\\"button\\\"\\r\\n            class=\\\"btn btn-outline-primary\\\">Registra</button>\\r\\n    </div>\\r\\n    <br><br><br><br>\\r\\n    <app-footer></app-footer>\\r\\n</body>\\r\\n\\r\\n</html>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjcXVpc3RvL2FjcXVpc3RvLmNvbXBvbmVudC5jc3MifQ== */\"","import { CartaService } from './../util/carta.service';\r\nimport { Utente } from './../utenti/utente';\r\nimport { CarrelloService } from './../carrello/carrello.service';\r\nimport { ControlloCampiService } from './../util/controllo-campi.service';\r\nimport { Indirizzo } from 'src/app/util/indirizzo';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../utenti/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { forkJoin } from 'rxjs';\r\nimport { Carta } from '../util/carta';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-acquisto',\r\n  templateUrl: './acquisto.component.html',\r\n  styleUrls: ['./acquisto.component.css']\r\n})\r\nexport class AcquistoComponent implements OnInit {\r\n\r\n  constructor(private logServ: LoginService, private router: Router,\r\n              private ctrlCampi: ControlloCampiService,\r\n              private modalService: NgbModal,\r\n              private carrelloService: CarrelloService,\r\n              private cartaService: CartaService,\r\n              private datepipe: DatePipe) { }\r\n\r\n  indirizzoAttuale = new Indirizzo();\r\n  ut = this.logServ.utenteAtuale;\r\n  totaleAcquisto = this.carrelloService.totaleCarrello;\r\n  speseSpedizione = 0;\r\n  totaleOrdine = this.totaleAcquisto;\r\n  flagPagamento = 'paypal';\r\n  // per modale aggiunta indirizzo\r\n  flagTipoInd = 'ind1';\r\n  comuni;\r\n  provincie;\r\n  listaComuniDaCaricare;\r\n  listaCap;\r\n  newIndirizzo = new Indirizzo();\r\n  flagNewInd = false;\r\n  codiceOrdineAcquistato: string;\r\n  // per modale carta\r\n  listaCarte: Carta[];\r\n  newIDCarta: number;\r\n  cartaSelected;\r\n  currentDate = new Date();\r\n  counter = Array;\r\n  meseSelected = 0;\r\n  annoSelected = this.currentDate.getFullYear();\r\n  newCarta = new Carta();\r\n  flagCarta = {\r\n    numCarta: false,\r\n    nomeCarta: false,\r\n    cognomeCarta: false,\r\n    csvCarta: false,\r\n// data non necessaria come controllo\r\n  };\r\n  checkUp = true;\r\n\r\n  ngOnInit() {\r\n    if (!this.ut) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n    if (this.totaleAcquisto <= 50) {\r\n      this.speseSpedizione = 15;\r\n      this.totaleOrdine = this.totaleAcquisto + this.speseSpedizione;\r\n      this.totaleOrdine = Math.round((this.totaleOrdine + Number.EPSILON) * 100) / 100;\r\n    }\r\n    this.cartaSelected = 0;\r\n    this.indirizzoAttuale = this.ctrlCampi.indirizzoFromString(this.ut.indirizzo);\r\n    forkJoin(this.ctrlCampi.getProvincie(),\r\n      this.ctrlCampi.getComuni(), this.cartaService.getListCarta(this.ut),\r\n      this.cartaService.getLastIdCarta(this.ut))\r\n      .subscribe(\r\n        res => {\r\n          // provincie\r\n          this.provincie = res[0];\r\n          this.newIndirizzo.provincia = this.provincie[0].nome;\r\n          // comuni\r\n          this.comuni = res[1];\r\n          this.loadComuni();\r\n          if (res[2]) {\r\n            if (res[2].length > 0) {\r\n              this.listaCarte = res[2];\r\n            }\r\n          }\r\n          if (res[3] != null) {\r\n            this.newIDCarta = res[3] + 1;\r\n            console.log('NUMERO ULTIMO CARTA', res[3] );\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  private loadComuni() {\r\n    this.listaComuniDaCaricare = [];\r\n    this.listaCap = [];\r\n    for (const c of this.comuni) {\r\n      if (c.provincia.nome === this.newIndirizzo.provincia) {\r\n        this.listaComuniDaCaricare = this.listaComuniDaCaricare.concat(c);\r\n      }\r\n    }\r\n    this.newIndirizzo.citta = this.listaComuniDaCaricare[0].nome;\r\n    this.newIndirizzo.cap = null;\r\n  }\r\n\r\n  private loadCap() {\r\n    this.listaCap = [];\r\n    for (const cp of this.listaComuniDaCaricare) {\r\n      if (this.newIndirizzo.citta === cp.nome) {\r\n        this.listaCap = cp.cap;\r\n      }\r\n    }\r\n    this.newIndirizzo.cap = this.listaCap[0];\r\n  }\r\n\r\n  private open(content) {\r\n    if (!this.flagNewInd) {\r\n      this.openModal(content);\r\n    }\r\n  }\r\n\r\n  // gestione modale\r\n  openModal(content) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  openModalLarge(content) {\r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n\r\n  closeModal(content) {\r\n    this.flagTipoInd = 'ind1';\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  addNewIndirizzo(content) {\r\n    this.flagNewInd = true;\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  private eseguiAcquisto(content) {\r\n    let indTmp = new Indirizzo();\r\n    if (this.flagTipoInd === 'ind1' || !this.newIndirizzo) {\r\n      indTmp = this.indirizzoAttuale;\r\n    } else {\r\n      indTmp = this.newIndirizzo;\r\n    }\r\n    const strInd = this.ctrlCampi.indirizzoToString(indTmp);\r\n    this.carrelloService.postAcquista(this.carrelloService.carrelloAttuale, this.logServ.utenteAtuale, strInd)\r\n      .then(\r\n        res => {\r\n          if (res !== null) {\r\n            console.log('ACQUISTO AVVENUTO');\r\n            this.codiceOrdineAcquistato = String(res);\r\n            this.openModal(content);\r\n          }\r\n        }\r\n      );\r\n  }\r\n// per nuova carta\r\n  private chiudi2(content) {\r\n    // this.carrelloService.quantitaCarrello = 0;\r\n    this.closeModal(content);\r\n    // this.router.navigate([('home')]);\r\n  }\r\n  private chiudi(content) {\r\n    this.carrelloService.quantitaCarrello = 0;\r\n    this.closeModal(content);\r\n    this.router.navigate([('home')]);\r\n  }\r\n\r\n  // carta\r\n  public getTipoCarta(numCarta: string): string {\r\n    return this.ctrlCampi.getTipoCarta(numCarta);\r\n  }\r\n\r\n  private decriptNomeCarta(numCarta: string): string {\r\n    const nome = this.ctrlCampi.getTipoCarta(numCarta);\r\n    switch (nome) {\r\n      case 'mastercard': {\r\n        return 'Mastercard';\r\n      }\r\n      case 'visa': {\r\n        return 'Visa';\r\n      }\r\n      case 'american-express': {\r\n        return 'American Express';\r\n      }\r\n    }\r\n  }\r\n\r\n  private selectCard(x) {\r\n    this.cartaSelected = x;\r\n    console.log('carta attuale', this.cartaSelected);\r\n  }\r\n\r\n  private checkDatiCarta(nameCampo) {\r\n    if (nameCampo === 'nomeCarta') {\r\n      if (!this.newCarta.nome || (this.newCarta.nome && this.ctrlCampi.campoVuoto(this.newCarta.nome))) {\r\n        this.flagCarta.nomeCarta = false;\r\n      } else {\r\n        this.flagCarta.nomeCarta = true;\r\n      }\r\n    }\r\n    if (nameCampo === 'cognomeCarta') {\r\n      if (!this.newCarta.cognome || (this.newCarta.cognome && this.ctrlCampi.campoVuoto(this.newCarta.cognome))) {\r\n        this.flagCarta.cognomeCarta = false;\r\n      } else {\r\n        this.flagCarta.cognomeCarta = true;\r\n      }\r\n    }\r\n    if (nameCampo === 'numeroCarta') {\r\n      if (!this.newCarta.numero || (this.newCarta.numero &&\r\n        (this.ctrlCampi.campoVuoto(this.newCarta.numero.toString()) ||\r\n          !this.ctrlCampi.validaNumeroCarta(this.newCarta.numero.toString())))) {\r\n        this.flagCarta.numCarta = false;\r\n      } else {\r\n        this.flagCarta.numCarta = true;\r\n      }\r\n    }\r\n    if (nameCampo === 'csvCarta') {\r\n      if (!this.newCarta.csv || (this.newCarta.csv &&\r\n        (this.ctrlCampi.campoVuoto(this.newCarta.csv.toString()) ||\r\n          !this.ctrlCampi.validaCSV(this.newCarta.csv.toString())))) {\r\n        this.flagCarta.csvCarta = false;\r\n      } else {\r\n        this.flagCarta.csvCarta = true;\r\n      }\r\n    }\r\n    console.log('data carta', this.meseSelected + '/' + this.annoSelected);\r\n  }\r\n  private addNewCarta(content) {\r\n    const dTmp = new Date();\r\n    dTmp.setMonth(this.meseSelected);\r\n    dTmp.setFullYear(this.annoSelected);\r\n    console.log('mesescelto  ', this.meseSelected);\r\n    console.log('annoscelto  ', this.meseSelected);\r\n    this.newCarta.data_scadenza = dTmp;\r\n    console.log('mese n data  ', dTmp.getMonth.toString());\r\n    console.log('ano n data ', dTmp.getFullYear.toString());\r\n\r\n    this.newCarta.cf_cliente = this.ut.codicefiscale;\r\n    this.newCarta.id = this.newIDCarta;\r\n    this.checkUp = false;\r\n    this.cartaService.postAddCarta(this.newCarta, this.ut)\r\n      .subscribe(\r\n        res => {\r\n          if (res === true) {\r\n            if (this.listaCarte) {\r\n              this.listaCarte = this.listaCarte.concat(this.newCarta);\r\n            } else {\r\n              this.listaCarte = [];\r\n              this.listaCarte[0] = this.newCarta;\r\n            }\r\n            this.checkUp = true;\r\n            this.newCarta = new Carta();\r\n            this.newIDCarta += 1;\r\n            this.flagCarta.nomeCarta = false;\r\n            this.flagCarta.cognomeCarta = false;\r\n            this.flagCarta.numCarta = false;\r\n            this.flagCarta.csvCarta = false;\r\n            this.modalService.dismissAll();\r\n          }\r\n        },\r\n        err => {\r\n          this.checkUp = true;\r\n          console.log('errore add carta');\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  public getDate(data: Date): string {\r\n    /*     const dataFormatted = data.toString();\r\n     */\r\n    const dataFormatted = this.datepipe.transform(data, 'MM/yyyy');\r\n    return dataFormatted;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FtbWluaXN0cmF0b3JlL2FkZC1hZG1pbi9hZGQtYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","import { ControlloCampiService } from './../../util/controllo-campi.service';\r\nimport { LoginAdminService } from './../login-admin/login-admin.service';\r\nimport { Amministratore } from './../amministratore';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-add-admin',\r\n  templateUrl: './add-admin.component.html',\r\n  styleUrls: ['./add-admin.component.css']\r\n})\r\nexport class AddAdminComponent implements OnInit {\r\n\r\n  constructor(public logServiceAdm: LoginAdminService,\r\n              public ctrlField: ControlloCampiService,\r\n              private modalService: NgbModal) { }\r\n\r\n  flag = {\r\n    general: false,\r\n    cfValid: true,\r\n    emailValid: true,\r\n    cf : true,\r\n    nome: true,\r\n    cognome: true,\r\n    email: true,\r\n    password: true,\r\n    cPassword: true\r\n  };\r\n  newAdmin: Amministratore = new Amministratore();\r\n  confermaPassword: string;\r\n  listaCfAdmin: string[] = [];\r\n  listaEmail: string[] = [];\r\n  risultatoModifica: boolean;\r\n\r\n  ngOnInit() {\r\n    this.logServiceAdm.getListCf(this.logServiceAdm.loggedAdmin).then(\r\n      response => {\r\n        this.listaCfAdmin = [];\r\n        this.listaCfAdmin = this.listaCfAdmin.concat(response);\r\n      },\r\n      error => {\r\n        console.log('errore caricamento lista cf admin');\r\n      }\r\n    );\r\n    this.logServiceAdm.getListEmail(this.logServiceAdm.loggedAdmin).then(\r\n      response => {\r\n        this.listaEmail = [];\r\n        this.listaEmail = this.listaEmail.concat(response);\r\n      },\r\n      error => {\r\n        console.log('errore caricamento lista cf admin');\r\n      }\r\n    );\r\n  }\r\n\r\n  private ctrlCampi(name) {\r\n    if (name === 'codicefiscale') {\r\n      const f: boolean = this.listaCfAdmin.includes(this.newAdmin.codicefiscale);\r\n      console.log('contiene cf  ', f);\r\n      if (this.newAdmin.codicefiscale && this.ctrlField.validateCF(this.newAdmin.codicefiscale)) {\r\n        this.flag.cf = true;\r\n        this.flag.cfValid = true;\r\n        if (f) {\r\n          this.flag.cf = false;\r\n          // trovato quindi non si può usare\r\n          this.flag.cfValid = false;\r\n        }\r\n        console.log('cf valito');\r\n      } else {\r\n        this.flag.cfValid = true;\r\n        this.flag.cf = false;\r\n      }\r\n    }\r\n    if (name === 'nome') {\r\n      if (this.newAdmin.nome && !this.ctrlField.campoVuoto(this.newAdmin.nome)) {\r\n        this.flag.nome = true;\r\n      } else {\r\n        this.flag.nome = false;\r\n      }\r\n    }\r\n    if (name === 'cognome') {\r\n      if (this.newAdmin.cognome && !this.ctrlField.campoVuoto(this.newAdmin.cognome)) {\r\n        this.flag.cognome = true;\r\n      } else {\r\n        this.flag.cognome = false;\r\n      }\r\n    }\r\n    if (name === 'email') {\r\n      const f: boolean = this.listaEmail.includes(this.newAdmin.email);\r\n      if (this.newAdmin.email && this.ctrlField.validateEmail(this.newAdmin.email)) {\r\n        this.flag.email = true;\r\n        this.flag.emailValid = true;\r\n        if (f) {\r\n          this.flag.email = false;\r\n          // trovato quindi non si può usare\r\n          this.flag.emailValid = false;\r\n          console.log('mail esistente');\r\n        }\r\n      } else {\r\n        this.flag.email = false;\r\n        this.flag.emailValid = true;\r\n      }\r\n    }\r\n    if (name === 'password') {\r\n      if (this.newAdmin.password && this.ctrlField.checkPassword(this.newAdmin.password)) {\r\n        this.flag.password = true;\r\n      } else {\r\n        this.flag.password = false;\r\n      }\r\n\r\n    }\r\n    if (name === 'confermapassword') {\r\n      if (this.newAdmin.password && this.confermaPassword === this.newAdmin.password) {\r\n        this.flag.cPassword = true;\r\n      } else {\r\n        this.flag.cPassword = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  private ctrlAllField() {\r\n    this.flag.general = (this.newAdmin.codicefiscale && !this.ctrlField.campoVuoto(this.newAdmin.codicefiscale)) &&\r\n    (this.newAdmin.nome && !this.ctrlField.campoVuoto(this.newAdmin.nome)) &&\r\n    (this.newAdmin.cognome && !this.ctrlField.campoVuoto(this.newAdmin.cognome)) &&\r\n    (this.newAdmin.email && !this.ctrlField.campoVuoto(this.newAdmin.email)) &&\r\n    (this.newAdmin.password && !this.ctrlField.campoVuoto(this.newAdmin.password)) &&\r\n    (this.confermaPassword && !this.ctrlField.campoVuoto(this.confermaPassword));\r\n  }\r\n\r\n  private salva(content) {\r\n    this.logServiceAdm.postAddNew(this.newAdmin, this.logServiceAdm.loggedAdmin).then(\r\n      result => {\r\n        if (result === true) {\r\n          this.risultatoModifica = true;\r\n        } else {\r\n          this.risultatoModifica = false;\r\n        }\r\n        this.modalService.open(content);\r\n\r\n      },\r\n      error => {\r\n        this.risultatoModifica = false;\r\n        console.log('errore chiamata aggiunta new admin');\r\n        this.modalService.open(content);\r\n      }\r\n    );\r\n  }\r\n\r\n  private closeModale() {\r\n    if (this.risultatoModifica) {\r\n      this.newAdmin = new Amministratore();\r\n      this.confermaPassword = '';\r\n    }\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n\r\n}\r\n\r\n","export class Amministratore {\r\n    codicefiscale: string;\r\n    nome: string;\r\n    cognome: string;\r\n    email: string;\r\n    password: string;\r\n    version: number;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FtbWluaXN0cmF0b3JlL2dlc3Rpb25lLXByb2RvdHRpL2dlc3Rpb25lLXByb2RvdHRpLmNvbXBvbmVudC5jc3MifQ== */\"","import { ControlloCampiService } from './../../util/controllo-campi.service';\r\nimport { LoginAdminService } from './../login-admin/login-admin.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CatalogoService } from 'src/app/catalogo/catalogo.service';\r\nimport { Prodotto } from 'src/app/catalogo/prodotto';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst ALERTS: Alert[] = [\r\n  {\r\n    type: 'success',\r\n    message: 'Operazione completata correttamente',\r\n  }, {\r\n    type: 'danger',\r\n    message: 'Errore di Sistema',\r\n  }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-gestione-prodotti',\r\n  templateUrl: './gestione-prodotti.component.html',\r\n  styleUrls: ['./gestione-prodotti.component.css']\r\n})\r\n\r\nexport class GestioneProdottiComponent implements OnInit {\r\n\r\n  constructor(private catService: CatalogoService,\r\n              private adminService: LoginAdminService,\r\n              private modalService: NgbModal,\r\n              public ctrlCampi: ControlloCampiService) {}\r\n\r\n\r\n  PRODOTTI = this.catService.listaProdotti;\r\n  page = 1;\r\n  pageSize = 4;\r\n\r\n  attiva = true;\r\n  tipoOperazione = '';\r\n\r\n  newProdotto = new Prodotto();\r\n  copiaProdotto = new Prodotto();\r\n\r\n  collectionSize = this.PRODOTTI.length;\r\n\r\n  flag = {\r\n    diversi: false,\r\n    nome: true,\r\n    descrizione: true,\r\n    prezzo: true,\r\n    quantita: true,\r\n    tipologia: true,\r\n    immagine: true\r\n  };\r\n  textType = {\r\n    nome: 'dark',\r\n    descrizione: 'dark',\r\n    prezzo: 'dark',\r\n    quantita: 'dark',\r\n    tipologia: 'dark',\r\n    immagine: 'dark'\r\n  };\r\n\r\n  alert: Alert;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get lProdotti(): Prodotto[] {\r\n    console.log(this.PRODOTTI);\r\n\r\n    return this.PRODOTTI\r\n      .map((prodotto, i) => ({ id: i + 1, ...prodotto }))\r\n      .slice((this.page - 1) * this.pageSize, (this.page - 1) * this.pageSize + this.pageSize);\r\n  }\r\n\r\n  public setEnabled(record) {\r\n    record.flagActive = true;\r\n  }\r\n\r\n  openModalEditAdd(longContent, editRecord?: Prodotto) {\r\n    this.reset();\r\n    this.modalService.open(longContent, { size: 'lg', scrollable: true });\r\n    if (editRecord) {\r\n      this.tipoOperazione = 'edit_operation';\r\n      // Sarebbe Anular copy\r\n      this.copiaProdotto = Object.assign({}, editRecord);\r\n      this.newProdotto = editRecord;\r\n    } else {\r\n      this.flag = {\r\n        diversi: false,\r\n        nome: false,\r\n        descrizione: false,\r\n        prezzo: false,\r\n        quantita: false,\r\n        tipologia: false,\r\n        immagine: false\r\n      };\r\n      this.tipoOperazione = 'add_operation';\r\n      this.newProdotto = new Prodotto();\r\n      this.catService.getLastId()\r\n        .then(\r\n          response => {\r\n            this.newProdotto.id = response + 1;\r\n            console.log('nuovo id', this.newProdotto.id);\r\n          },\r\n          error => {\r\n            console.log('errore caricamento id');\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  private checkCampo(nCampo) {\r\n    if (nCampo === 'nome') {\r\n      this.flag.nome = !this.ctrlCampi.campoVuoto(this.newProdotto.nome);\r\n      this.textType.nome = this.setBorder(this.flag.nome);\r\n    }\r\n    if (nCampo === 'descrizione') {\r\n      this.flag.descrizione = !this.ctrlCampi.campoVuoto(this.newProdotto.descrizione);\r\n      this.textType.descrizione = this.setBorder(this.flag.descrizione);\r\n    }\r\n    if (nCampo === 'immagine') {\r\n      this.flag.immagine = !this.ctrlCampi.campoVuoto(this.newProdotto.immagine);\r\n      this.textType.immagine = this.setBorder(this.flag.immagine);\r\n      console.log('flag immagine', this.flag.immagine);\r\n    }\r\n    if (nCampo === 'prezzo') {\r\n      const tmpPrezzo = String(this.newProdotto.prezzo);\r\n      console.log('prezzo inserito', tmpPrezzo);\r\n      this.flag.prezzo = this.ctrlCampi.ctrlValuta(tmpPrezzo);\r\n      this.textType.prezzo = this.setBorder(this.flag.prezzo);\r\n      console.log('flag prezzo', this.flag.prezzo);\r\n    }\r\n    if (nCampo === 'quantita') {\r\n      this.flag.quantita = this.ctrlCampi.ctrlQuantita(this.newProdotto.quantita, -1, 500);\r\n      this.textType.quantita = this.setBorder(this.flag.quantita);\r\n      console.log('flag quantita', this.flag.quantita);\r\n\r\n    }\r\n    if (nCampo === 'tipologia') {\r\n      this.flag.tipologia = this.ctrlCampi.ctrlQuantita(this.newProdotto.tipologia, 1, 3);\r\n      this.textType.tipologia = this.setBorder(this.flag.tipologia);\r\n      console.log('flag tipologia', this.flag.tipologia);\r\n\r\n    }\r\n    if (!this.ctrlCampi.prodEquals(this.newProdotto, this.copiaProdotto)) {\r\n      this.flag.diversi = true;\r\n    } else {\r\n      this.flag.diversi = false;\r\n    }\r\n    console.log('diversi? ', this.flag.diversi);\r\n  }\r\n\r\n  private setBorder(flag) {\r\n    if (!flag) {\r\n      return 'danger';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  private reset() {\r\n    this.textType = {\r\n      nome: 'dark',\r\n      descrizione: 'dark',\r\n      prezzo: 'dark',\r\n      quantita: 'dark',\r\n      tipologia: 'dark',\r\n      immagine: 'dark'\r\n    };\r\n    this.flag = {\r\n      diversi: false,\r\n      nome: true,\r\n      descrizione: true,\r\n      prezzo: true,\r\n      quantita: true,\r\n      tipologia: true,\r\n      immagine: true\r\n    };\r\n  }\r\n\r\n  private salva() {\r\n    this.catService.postAddEditProdotto(this.newProdotto, this.tipoOperazione, this.adminService.loggedAdmin)\r\n      .then(\r\n        response => {\r\n          if (response === true) {\r\n            this.reloadProdotti();\r\n            // apri alert inserte correct\r\n            this.addAlert(0);\r\n            console.log('risposta salvataggio', response);\r\n          } else {\r\n            this.attiva = true;\r\n            // apri alert inserte error\r\n            this.addAlert(1);\r\n            console.log('risposta salvataggio [else]', response);\r\n          }\r\n        },\r\n        error => {\r\n          this.attiva = true;\r\n          // apri alert inserte error\r\n          this.addAlert(1);\r\n          console.log('risposta salvataggio errore', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  openModalDelete(content, deleteRecord: Prodotto) {\r\n    this.copiaProdotto = deleteRecord;\r\n    this.modalService.open(content, { size: 'lg', scrollable: true });\r\n  }\r\n\r\n  private elimina() {\r\n    this.catService.postDeleteProdotto(this.copiaProdotto, this.adminService.loggedAdmin)\r\n      .then(\r\n        response => {\r\n          if (response === true) {\r\n            this.reloadProdotti();\r\n            // apri alert success remove\r\n            this.addAlert(0);\r\n          } else {\r\n            this.attiva = true;\r\n            // apri alert remove error\r\n            this.addAlert(1);\r\n            console.log('risposta salvataggio [else]', response);\r\n          }\r\n        },\r\n        error => {\r\n          this.attiva = true;\r\n          // apri alert remove error\r\n          this.addAlert(1);\r\n          console.log('risposta salvataggio errore', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  public reloadProdotti() {\r\n    this.attiva = false;\r\n    this.catService.getCaricaProdotti()\r\n    .subscribe(\r\n      result => {\r\n        this.catService.listaProdotti = [];\r\n        this.catService.listaProdotti = this.catService.listaProdotti.concat(result);\r\n        this.PRODOTTI = this.catService.listaProdotti;\r\n        this.collectionSize = this.PRODOTTI.length;\r\n        this.attiva = true;\r\n      },\r\n      error => {\r\n        console.log('errore chiamata', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // gestione alert /////\r\n  close(alert: Alert) {\r\n    this.alert = null;\r\n  }\r\n\r\n  addAlert(n: number) {\r\n    const a = Array.from(ALERTS);\r\n    this.alert = a[n];\r\n  }\r\n///////////////////////\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FtbWluaXN0cmF0b3JlL2xvZ2luLWFkbWluL2xvZ2luLWFkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Amministratore } from './../amministratore';\r\nimport { LoginAdminService } from './login-admin.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TemplateRef, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CatalogoService } from 'src/app/catalogo/catalogo.service';\r\n\r\n@Component({\r\n  selector: 'app-login-admin',\r\n  templateUrl: './login-admin.component.html',\r\n  styleUrls: ['./login-admin.component.css']\r\n})\r\n\r\nexport class LoginAdminComponent implements OnInit {\r\n\r\n\r\n  @ViewChild('content', { static: true }) content: TemplateRef<any>;\r\n\r\n  crdLogin = new Amministratore();\r\n\r\n  constructor(config: NgbModalConfig, private modalService: NgbModal,\r\n              private logService: LoginAdminService, private router: Router,\r\n              private catalogoService: CatalogoService) {\r\n    // customize default values of modals used by this component tree\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  prodottiLoaded;\r\n  adminLoaded: Amministratore;\r\n\r\n  tipoCampo = 'password';\r\n  // per il mex errore login\r\n  flag = this.logService.tentativoLogin;\r\n\r\n  // flag utente loggato\r\n  utenteAttivo = false;\r\n\r\n  open(content) {\r\n    if (!this.logService.loggedAdmin) {\r\n      this.modalService.open(content);\r\n    }\r\n  }\r\n\r\n  public showPassword() {\r\n    if (this.tipoCampo === 'password') {\r\n      this.tipoCampo = 'email';\r\n    } else {\r\n      this.tipoCampo = 'password';\r\n    }\r\n  }\r\n\r\n  public login(logData) {\r\n    this.logService.logOutAdmin();\r\n    this.logService.postLogin(logData)\r\n      .then(\r\n        response => {\r\n          if (response !== null) {\r\n            this.logService.tentativoLogin = false;\r\n            this.logService.loggedAdmin = response;\r\n            this.adminLoaded = response;\r\n            this.utenteAttivo = true;\r\n            this.catalogoService.getCaricaProdotti()\r\n              .subscribe(result => {\r\n                this.catalogoService.listaProdotti = [];\r\n                this.catalogoService.listaProdotti = this.catalogoService.listaProdotti.concat(result);\r\n                this.prodottiLoaded = this.catalogoService.listaProdotti;\r\n              },\r\n                error => {\r\n                  console.log('errore chiamata', error);\r\n                }\r\n              );\r\n            console.log('lista prodotti== ', this.catalogoService.listaProdotti);\r\n          } else {\r\n            this.logService.tentativoLogin = true;\r\n            this.utenteAttivo = false;\r\n            this.ricarica('login_admin');\r\n          }\r\n        },\r\n        error => {\r\n          this.logService.tentativoLogin = true;\r\n          this.ricarica('login_admin');\r\n          this.utenteAttivo = false;\r\n        }\r\n      );\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  private ricarica(compNome) {\r\n    // fa un refresh del component stesso\r\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([compNome]);\r\n    });\r\n  }\r\n\r\n  public goToPage(path) {\r\n    this.router.navigate([(path)]);\r\n  }\r\n\r\n  /* public caricaProdotti() {\r\n    this.catalogoService.caricaProdotti();\r\n  } */\r\n\r\n  logout() {\r\n    this.logService.logOutAdmin();\r\n    this.ricarica('login_admin');\r\n  }\r\n  ngOnInit() {\r\n    this.logService.logOutAdmin();\r\n    this.modalService.open(this.content);\r\n\r\n  }\r\n\r\n  openModalAdd(content) {\r\n    this.modalService.open(content);\r\n\r\n  }\r\n\r\n}\r\n","import { Amministratore } from './../amministratore';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginAdminService {\r\n\r\n  loggedAdmin: Amministratore;\r\n  tentativoLogin = false;\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) { }\r\n\r\n  public postLogin(data: Amministratore): Promise<Amministratore> {\r\n    return this.httpClient.post<Amministratore>('http://localhost:8080/Store3D/chiamateRest/amministratore/eseguiLoginAmministratore',\r\n      data).toPromise();\r\n  }\r\n\r\n  public postUpdateData(data, admO: Amministratore): Promise<boolean> {\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/amministratore/updateAdmin',\r\n    data, this.httpOption(admO)).toPromise();\r\n  }\r\n\r\n  public getListCf(admO: Amministratore): Promise<string[]> {\r\n    return this.httpClient.get<string[]>('http://localhost:8080/Store3D/chiamateRest/amministratore/caricaListaAdmin',\r\n    this.httpOption(admO)).toPromise();\r\n  }\r\n\r\n  public getListEmail(admO: Amministratore): Promise<string> {\r\n    return this.httpClient.get<string>('http://localhost:8080/Store3D/chiamateRest/amministratore/caricaListaEmail',\r\n    this.httpOption(admO)).toPromise();\r\n  }\r\n\r\n  public postAddNew(data, admO): Promise<boolean> {\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/amministratore/addAdmin', data,\r\n    this.httpOption(admO)).toPromise();\r\n  }\r\n\r\n  public logOutAdmin() {\r\n    this.loggedAdmin = null;\r\n    this.tentativoLogin = false;\r\n  }\r\n\r\n  private httpOption(admin: Amministratore) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('username', admin.codicefiscale)\r\n      .append('password' , admin.password)\r\n    };\r\n    return httpOptions;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FtbWluaXN0cmF0b3JlL21vZGlmaWNhLWRhdGktYWRtaW4vbW9kaWZpY2EtZGF0aS1hZG1pbi5jb21wb25lbnQuY3NzIn0= */\"","import { ControlloCampiService } from './../../util/controllo-campi.service';\r\nimport { LoginAdminService } from './../login-admin/login-admin.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Amministratore } from '../amministratore';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modifica-dati-admin',\r\n  templateUrl: './modifica-dati-admin.component.html',\r\n  styleUrls: ['./modifica-dati-admin.component.css']\r\n})\r\nexport class ModificaDatiAdminComponent implements OnInit {\r\n\r\n  constructor(public logAdminService: LoginAdminService,\r\n              public ctrlCampi: ControlloCampiService,\r\n              private router: Router,\r\n              private modalService: NgbModal) { }\r\n\r\n  loadedAdmin = this.logAdminService.loggedAdmin;\r\n\r\n  risultatoModifica: boolean;\r\n  newField = {\r\n    nome: this.loadedAdmin.nome,\r\n    cognome: this.loadedAdmin.cognome,\r\n    email: this.loadedAdmin.email\r\n  };\r\n  flag = {\r\n    general: false,\r\n    nome: true,\r\n    cognome: true,\r\n    email: true\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public checkField(name) {\r\n    if (name === 'nome') {\r\n      if (this.newField.nome && !this.ctrlCampi.campoVuoto(this.newField.nome)) {\r\n          this.flag.nome = true;\r\n        } else {\r\n          this.flag.nome = false;\r\n        }\r\n    }\r\n    if (name === 'cognome') {\r\n      if (this.newField.cognome && !this.ctrlCampi.campoVuoto(this.newField.cognome)) {\r\n          this.flag.cognome = true;\r\n        } else {\r\n          this.flag.cognome = false;\r\n        }\r\n    }\r\n    if (name === 'email') {\r\n      if (this.newField.email && this.ctrlCampi.validateEmail(this.newField.email)) {\r\n        this.flag.email = true;\r\n      } else {\r\n        this.flag.email = false;\r\n      }\r\n    }\r\n    this.flag.general = this.checkAllField();\r\n  }\r\n\r\n  private checkAllField(): boolean {\r\n    if (this.newField.nome === this.loadedAdmin.nome &&\r\n      this.newField.cognome === this.loadedAdmin.cognome &&\r\n      this.newField.email === this.loadedAdmin.email) {\r\n        return false;\r\n      }\r\n    return true;\r\n  }\r\n\r\n  public salvaModifiche(content) {\r\n    // attuale loggato\r\n    const copiaAdmin = Object.assign({}, this.loadedAdmin);\r\n    this.loadedAdmin.nome = this.newField.nome;\r\n    this.loadedAdmin.cognome = this.newField.cognome;\r\n    this.loadedAdmin.email = this.newField.email;\r\n    this.logAdminService.postUpdateData(this.loadedAdmin, copiaAdmin)\r\n    .then(\r\n      response => {\r\n        this.risultatoModifica = response;\r\n        this.flag = {\r\n          general: false,\r\n          nome: true,\r\n          cognome: true,\r\n          email: true\r\n        };\r\n        this.modalService.open(content);\r\n      },\r\n      error => {\r\n        this.risultatoModifica = false;\r\n        this.loadedAdmin = copiaAdmin;\r\n        this.modalService.open(content);\r\n      }\r\n    );\r\n  }\r\n\r\n  public closeModale() {\r\n    if (this.risultatoModifica) {\r\n      this.loadedAdmin.version = this.loadedAdmin.version + 1;\r\n    }\r\n    this.modalService.dismissAll();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FtbWluaXN0cmF0b3JlL21vZGlmaWNhLXBhc3N3b3JkLWFkbWluL21vZGlmaWNhLXBhc3N3b3JkLWFkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { ControlloCampiService } from './../../util/controllo-campi.service';\r\nimport { Amministratore } from './../amministratore';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginAdminService } from '../login-admin/login-admin.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modifica-password-admin',\r\n  templateUrl: './modifica-password-admin.component.html',\r\n  styleUrls: ['./modifica-password-admin.component.css']\r\n})\r\nexport class ModificaPasswordAdminComponent implements OnInit {\r\n\r\n  confirmNewPassword;\r\n  oldPassword;\r\n  newPassword;\r\n  flag = {\r\n    fOld: true,\r\n    fNew: true,\r\n    fCNew: true\r\n  };\r\n\r\n  constructor(public logAdminService: LoginAdminService,\r\n              private modalService: NgbModal,\r\n              private router: Router,\r\n              public ctrlCampi: ControlloCampiService) { }\r\n\r\n\r\n  adminAttivo = this.logAdminService.loggedAdmin;\r\n  risultatoModifica;\r\n  ngOnInit() {\r\n  }\r\n\r\n  public ctrlCampo(): void {\r\n    if (this.oldPassword) {\r\n      if (this.adminAttivo.password === this.oldPassword) {\r\n        this.flag.fOld = true;\r\n      } else {\r\n        this.flag.fOld = false;\r\n      }\r\n    }\r\n    if (this.newPassword) {\r\n      if ((this.ctrlCampi.checkPassword(this.newPassword)) && this.newPassword !== this.adminAttivo.password) {\r\n        this.flag.fNew = true;\r\n      } else {\r\n        this.flag.fNew = false;\r\n      }\r\n    }\r\n    if (this.confirmNewPassword) {\r\n      if (this.ctrlCampi.controlloPassword(this.confirmNewPassword, this.newPassword)) {\r\n        this.flag.fCNew = true;\r\n      } else {\r\n        this.flag.fCNew = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public salva(content): void {\r\n    const copiaAdmin = Object.assign({}, this.adminAttivo);\r\n    this.adminAttivo.password = this.newPassword;\r\n    this.logAdminService.postUpdateData(this.adminAttivo, copiaAdmin)\r\n    .then(\r\n      response => {\r\n        this.risultatoModifica = response;\r\n        this.modalService.open(content);\r\n      },\r\n      error => {\r\n        this.risultatoModifica = false;\r\n        this.modalService.open(content);\r\n      }\r\n    );\r\n  }\r\n\r\n  public closeModale() {\r\n    if (this.risultatoModifica) {\r\n      this.logAdminService.logOutAdmin();\r\n      this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n        this.router.navigate(['login_admin']);\r\n     });\r\n    }\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n}\r\n","import { GestioneDatiComponent } from './utenti/gestione-dati/gestione-dati.component';\r\nimport { AcquistoComponent } from './acquisto/acquisto.component';\r\nimport { DettaglioProdottoComponent } from './catalogo/dettaglio-prodotto/dettaglio-prodotto.component';\r\nimport { OrdiniComponent } from './ordini/ordini.component';\r\nimport { CarrelloComponent } from './carrello/carrello.component';\r\nimport { ModificaDatiComponent } from './utenti/gestione-dati/modifica-dati/modifica-dati.component';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegistrazioneComponent } from './utenti/registrazione/registrazione.component';\r\nimport { LoginComponent } from './utenti/login/login.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CatalogoComponent } from './catalogo/catalogo.component';\r\nimport { ModificaPasswordComponent } from './utenti/gestione-dati/modifica-password/modifica-password.component';\r\nimport { LoginAdminComponent } from './amministratore/login-admin/login-admin.component';\r\nimport { MetodiPagamentoComponent } from './footer/metodi-pagamento/metodi-pagamento.component';\r\nimport {ContattiComponent} from './footer/contatti/contatti.component';\r\n\r\nconst routes: Routes = [\r\n{ path: '', component: HomeComponent },\r\n{ path: 'login', component: LoginComponent },\r\n{ path: 'registrazione', component: RegistrazioneComponent },\r\n{ path: 'catalogo', component: CatalogoComponent },\r\n{ path: 'appComponent', component: AppComponent},\r\n{ path: 'login_admin', component: LoginAdminComponent},\r\n{ path: 'carrello', component: CarrelloComponent},\r\n{ path: 'ordini', component: OrdiniComponent},\r\n{ path: 'dettaglioProdotto', component: DettaglioProdottoComponent},\r\n{ path: 'acquisto', component: AcquistoComponent},\r\n{ path: 'gestione_profilo', component: GestioneDatiComponent},\r\n{ path: 'metodi_pagamento', component: MetodiPagamentoComponent},\r\n{ path: 'contatti', component: ContattiComponent},\r\n// otherwise redirect to home\r\n{ path: '**', redirectTo: '' }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { LoginService } from './utenti/login.service';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n\r\n  constructor( private loginService: LoginService) {  }\r\n  title = 'Store3D';\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './utenti/login/login.component';\r\nimport { RegistrazioneComponent } from './utenti/registrazione/registrazione.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n// angular ui\r\nimport { NgbModalConfig, NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CatalogoComponent } from './catalogo/catalogo.component';\r\nimport { ModificaDatiComponent } from './utenti/gestione-dati/modifica-dati/modifica-dati.component';\r\nimport { ModificaPasswordComponent } from './utenti/gestione-dati/modifica-password/modifica-password.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { GestioneProdottiComponent } from './amministratore/gestione-prodotti/gestione-prodotti.component';\r\nimport { LoginAdminComponent } from './amministratore/login-admin/login-admin.component';\r\nimport { ModificaPasswordAdminComponent } from './amministratore/modifica-password-admin/modifica-password-admin.component';\r\nimport { ModificaDatiAdminComponent } from './amministratore/modifica-dati-admin/modifica-dati-admin.component';\r\nimport { AddAdminComponent } from './amministratore/add-admin/add-admin.component';\r\nimport { CarrelloComponent } from './carrello/carrello.component';\r\nimport { OrdiniComponent } from './ordini/ordini.component';\r\nimport { DettaglioProdottoComponent } from './catalogo/dettaglio-prodotto/dettaglio-prodotto.component';\r\nimport { AcquistoComponent } from './acquisto/acquisto.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { GestioneDatiComponent } from './utenti/gestione-dati/gestione-dati.component';\r\nimport { MetodiPagamentoComponent } from './footer/metodi-pagamento/metodi-pagamento.component';\r\nimport { ContattiComponent } from './footer/contatti/contatti.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegistrazioneComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    CatalogoComponent,\r\n    ModificaDatiComponent,\r\n    ModificaPasswordComponent,\r\n    FooterComponent,\r\n    GestioneProdottiComponent,\r\n    LoginAdminComponent,\r\n    ModificaPasswordAdminComponent,\r\n    ModificaDatiAdminComponent,\r\n    AddAdminComponent,\r\n    CarrelloComponent,\r\n    OrdiniComponent,\r\n    DettaglioProdottoComponent,\r\n    AcquistoComponent,\r\n    GestioneDatiComponent,\r\n    MetodiPagamentoComponent,\r\n    ContattiComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgbModule\r\n  ],\r\n  providers: [NgbModalConfig, NgbModal, DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnJlbGxvL2NhcnJlbGxvLmNvbXBvbmVudC5jc3MifQ== */\"","import { LoginService } from 'src/app/utenti/login.service';\r\nimport { CarrelloService } from './carrello.service';\r\nimport { forkJoin} from 'rxjs';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CatalogoService } from '../catalogo/catalogo.service';\r\nimport { Carrello } from './carrello';\r\nimport { Router } from '@angular/router';\r\n\r\nconst ALERTS: Alert[] = [\r\n  {\r\n    type: 'warning',\r\n    message: 'Attenzione!  Alcuni prodotti hanno subito modifiche',\r\n  }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-carrello',\r\n  templateUrl: './carrello.component.html',\r\n  styleUrls: ['./carrello.component.css']\r\n})\r\nexport class CarrelloComponent implements OnInit {\r\n\r\n  constructor(private prodService: CatalogoService, private router: Router,\r\n              private carrService: CarrelloService,\r\n              private logService: LoginService) { }\r\n\r\n  utAttuale = this.logService.utenteAtuale;\r\n  prodInCarrello;\r\n  active = false;\r\n  costoTotale = 0;\r\n  counter = Array;\r\n  carrelloVuoto = false;\r\n\r\n  alert: Alert;\r\n\r\n\r\n  ngOnInit() {\r\n    if (!this.utAttuale) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n    if (this.prodService.flagCambiamenti) {\r\n      console.log('CAMBIAMENTI!!!!');\r\n      this.addAlert(0);\r\n      this.prodService.flagCambiamenti = false;\r\n    }\r\n    this.caricaCarrello();\r\n  }\r\n\r\n  private caricaCarrello() {\r\n    this.costoTotale = 0;\r\n    forkJoin(this.prodService.getCaricaProdotti(), this.carrService.getListCarrello(this.utAttuale))\r\n    .subscribe(\r\n      response => {\r\n        let tmpC = [];\r\n        for (const c of response[1]) {\r\n          this.addToTotale(c.quantita_prodotto * c.prezzo_prodotto);\r\n          for (const p of response[0]) {\r\n            if (c.id_prodotto === p.id) {\r\n              const tmp = {\r\n                pr: null,\r\n                ca: null\r\n              };\r\n              if (p.quantita >= c.quantita_prodotto && p.prezzo === c.prezzo_prodotto) {\r\n                tmp.ca = c; tmp.pr = p;\r\n                tmpC = tmpC.concat(tmp);\r\n              }\r\n              // caso quantità diminuita o prezzo variato\r\n              if (p.quantita < c.quantita_prodotto || p.prezzo !== c.prezzo_prodotto) {\r\n                if (p.prezzo !== c.prezzo_prodotto) {\r\n                  c.prezzo_prodotto = p.prezzo;\r\n                }\r\n                if (p.quantita < c.quantita_prodotto) {\r\n                  c.quantita_prodotto = p.quantita;\r\n                }\r\n                this.prodService.flagCambiamenti = true;\r\n                this.aggiornaQuantita(c);\r\n                tmp.ca = c; tmp.pr = p;\r\n                tmpC = tmpC.concat(tmp);\r\n              }\r\n              // caso prodotto non disponibile\r\n              if (p.quantita <= 0) {\r\n                this.prodService.flagCambiamenti = true;\r\n                this.eliminaProdotto(c);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.prodInCarrello = tmpC;\r\n        this.active = true;\r\n        if (this.prodInCarrello.length === 0) {\r\n          this.carrelloVuoto = true;\r\n        }\r\n        if (this.prodInCarrello.length !== 0) {\r\n          this.carrelloVuoto = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public calPrezzo(nProd: number, prezzo: number) {\r\n    let n = nProd * prezzo;\r\n    n =  Math.round((n + Number.EPSILON) * 100) / 100;\r\n    return n;\r\n  }\r\n\r\n  private addToTotale(prezzo: number) {\r\n    this.costoTotale += prezzo;\r\n    this.costoTotale = Math.round((this.costoTotale + Number.EPSILON) * 100) / 100;\r\n    this.carrService.totaleCarrello = this.costoTotale;\r\n  }\r\n\r\n  private aggiornaQuantita(ca: Carrello) {\r\n    this.carrService.postEditP(ca, this.logService.utenteAtuale)\r\n    .then(\r\n      response => {\r\n        if (response === true) {\r\n          this.carrService.getListCarrello(this.logService.utenteAtuale)\r\n          .then(\r\n            res => {\r\n              let cont = 0;\r\n              for (const x of res) {\r\n                cont = cont + x.quantita_prodotto;\r\n              }\r\n              this.carrService.quantitaCarrello = cont;\r\n              this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n                this.router.navigate(['carrello']);\r\n             });            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private eliminaProdotto(ca: Carrello) {\r\n    this.carrService.postRemoveP(ca, this.logService.utenteAtuale)\r\n    .then(\r\n      response => {\r\n        if (response === true) {\r\n          this.carrService.getListCarrello(this.logService.utenteAtuale)\r\n          .then(\r\n            res => {\r\n              let cont = 0;\r\n              for (const x of res) {\r\n                cont = cont + x.quantita_prodotto;\r\n              }\r\n              this.carrService.quantitaCarrello = cont;\r\n              this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n                this.router.navigate(['carrello']);\r\n             });            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private acquista() {\r\n    this.carrService.getListCarrello(this.logService.utenteAtuale)\r\n    .then(\r\n      res => {\r\n        this.carrService.carrelloAttuale = res;\r\n        this.router.navigate([('acquisto')]);\r\n      }\r\n    );\r\n  }\r\n\r\n  private catalogo() {\r\n    this.prodService.caricaProdotti(true);\r\n  }\r\n\r\n  // gestione alert /////\r\n  close(alert: Alert) {\r\n    this.alert = null;\r\n  }\r\n\r\n  addAlert(n: number) {\r\n    const a = Array.from(ALERTS);\r\n    this.alert = a[n];\r\n  }\r\n///////////////////////\r\n}\r\n","import { Utente } from './../utenti/utente';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Carrello } from './carrello';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarrelloService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public quantitaCarrello: number;\r\n  public carrelloAttuale: Carrello[];\r\n  public totaleCarrello: number;\r\n\r\n  public postAddP(data: Carrello, utn: Utente): Promise<boolean> {\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/carrello/aggiungiProdCarrello',\r\n      data, this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  public postEditP(data: Carrello, utn: Utente): Promise<boolean> {\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/carrello/modificaProdCarrello',\r\n      data, this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  public postFindP(data: Carrello, utn: Utente): Promise<Carrello> {\r\n    return this.httpClient.post<Carrello>('http://localhost:8080/Store3D/chiamateRest/carrello/findProdCarrello',\r\n      data, this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  public postRemoveP(data: Carrello, utn: Utente): Promise<boolean> {\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/carrello/removeProdCarrello',\r\n      data, this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  public getListCarrello(utn: Utente): Promise<Carrello[]> {\r\n    return this.httpClient.get<Carrello[]>('http://localhost:8080/Store3D/chiamateRest/carrello/caricaListaCarrello',\r\n    this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  public postAcquista(data: Carrello[], utn: Utente, indirizzo: string): Promise<number> {\r\n    return this.httpClient.post<number>('http://localhost:8080/Store3D/chiamateRest/prodotto/acquistaCarrello',\r\n      data, this.httpOptionInd(utn, indirizzo)).toPromise();\r\n  }\r\n\r\n  public getRemoveAllCarrello(utn: Utente): Promise<boolean> {\r\n    return this.httpClient.get<boolean>('http://localhost:8080/Store3D/chiamateRest/carrello/removeAllCarrello',\r\n      this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  private httpOption(ut: Utente) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('username', ut.codicefiscale)\r\n      .append('password' , ut.password)\r\n    };\r\n    return httpOptions;\r\n  }\r\n\r\n  private httpOptionInd(ut: Utente, indirizzo: string) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('username', ut.codicefiscale)\r\n      .append('password' , ut.password)\r\n      .append('indirizzo', indirizzo)\r\n    };\r\n    return httpOptions;\r\n  }\r\n}\r\n","\r\nexport class Carrello {\r\n    // tslint:disable-next-line:variable-name\r\n    id_cliente: string;\r\n    // tslint:disable-next-line:variable-name\r\n    id_prodotto: number;\r\n    data: Date;\r\n    // tslint:disable-next-line:variable-name\r\n    prezzo_prodotto: number;\r\n    // tslint:disable-next-line:variable-name\r\n    quantita_prodotto: number;\r\n    version: number;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGFsb2dvL2NhdGFsb2dvLmNvbXBvbmVudC5jc3MifQ== */\"","import { CatalogoService } from './catalogo.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Prodotto } from './prodotto';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-catalogo',\r\n  templateUrl: './catalogo.component.html',\r\n  styleUrls: ['./catalogo.component.css']\r\n})\r\nexport class CatalogoComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(public catService: CatalogoService, private router: Router) { }\r\n\r\n  PRODOTTI = this.catService.listaProdotti;\r\n  page = 1;\r\n  pageSize = 4;\r\n  tActive = true;\r\n  collectionSize = this.PRODOTTI.length;\r\n\r\n  check = {\r\n    stampanti: false,\r\n    filamenti: false,\r\n    pezzi: false\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.catService.prodottoDettaglio = null;\r\n    if (!this.PRODOTTI) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n    this.catService.catalogoAttivo = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.catService.catalogoAttivo = false;\r\n    console.log('stato catalogo attivo' , this.catService.catalogoAttivo);\r\n  }\r\n\r\n  get lProdotti(): Prodotto[] {\r\n    console.log(this.PRODOTTI);\r\n\r\n    return this.PRODOTTI\r\n      .map((prodotto, i) => ({id: i + 1, ...prodotto}))\r\n      .slice((this.page - 1) * this.pageSize, (this.page - 1) * this.pageSize + this.pageSize);\r\n  }\r\n\r\n  private setFiltri() {\r\n    this.resetProd();\r\n    let copiaP: Prodotto[] = [];\r\n    if (!this.check.filamenti && ! this.check.pezzi && !this.check.stampanti) {\r\n      this.tActive = true;\r\n      this.collectionSize = this.PRODOTTI.length;\r\n      return;\r\n    }\r\n    for (const prd of this.PRODOTTI) {\r\n      if (prd.tipologia === 3 && this.check.stampanti) {\r\n        copiaP = copiaP.concat(prd);\r\n      }\r\n      if (prd.tipologia === 2 && this.check.pezzi) {\r\n        copiaP = copiaP.concat(prd);\r\n      }\r\n      if (prd.tipologia === 1 && this.check.filamenti) {\r\n        copiaP = copiaP.concat(prd);\r\n      }\r\n    }\r\n    this.PRODOTTI = [];\r\n    this.PRODOTTI = copiaP;\r\n    this.collectionSize = this.PRODOTTI.length;\r\n    this.tActive = true;\r\n\r\n  }\r\n\r\n  private resetProd() {\r\n    this.PRODOTTI = this.catService.listaProdotti;\r\n  }\r\n\r\n  private apriDettaglio(prod: Prodotto) {\r\n    this.catService.prodottoDettaglio = prod;\r\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate(['dettaglioProdotto']);\r\n    });\r\n  }\r\n}\r\n","import { Amministratore } from './../amministratore/amministratore';\r\nimport { Prodotto } from './prodotto';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CatalogoService {\r\n\r\n  listaProdotti: Prodotto[];\r\n  prodottoDettaglio: Prodotto;\r\n  flagCambiamenti = false;\r\n  catalogoAttivo = false;\r\n\r\n  constructor(private httpClient: HttpClient,  private router: Router) { }\r\n\r\n  public getCaricaProdotti(): Observable<Prodotto[]> {\r\n    return this.httpClient.get<Prodotto[]>('http://localhost:8080/Store3D/chiamateRest/prodotto/caricaListaProdotti');\r\n  }\r\n\r\n  public postCercaProdotti(key: Prodotto): Promise<Prodotto[]> {\r\n    return this.httpClient.post<Prodotto[]>('http://localhost:8080/Store3D/chiamateRest/prodotto/ricercaProdotti', key).toPromise();\r\n  }\r\n\r\n  public postAddEditProdotto(data, type, admin: Amministratore): Promise<boolean> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('username', admin.codicefiscale)\r\n      .append('password' , admin.password)\r\n    };\r\n\r\n    let url = '';\r\n    if (type === 'add_operation') {\r\n      url = 'http://localhost:8080/Store3D/chiamateRest/prodotto/aggiungiProdotto';\r\n    } else if (type === 'edit_operation') {\r\n      url = 'http://localhost:8080/Store3D/chiamateRest/prodotto/modificaProdotto';\r\n    }\r\n    return this.httpClient.post<boolean>(url,\r\n      data, httpOptions).toPromise();\r\n  }\r\n\r\n  public getLastId(): Promise<number> {\r\n    return this.httpClient.get<number>('http://localhost:8080/Store3D/chiamateRest/prodotto/ultimoId').toPromise();\r\n  }\r\n\r\n  public postDeleteProdotto(data, admin: Amministratore): Promise<boolean> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('username', admin.codicefiscale)\r\n      .append('password' , admin.password)\r\n    };\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/prodotto/eliminaProdotto', data, httpOptions)\r\n    .toPromise();\r\n  }\r\n\r\n  public caricaProdotti(flag?) {\r\n    console.log('flag reid', flag);\r\n\r\n    this.getCaricaProdotti()\r\n    .subscribe(result => {\r\n      this.listaProdotti = [];\r\n      for (const p of result) {\r\n        if (p.quantita > -1) {\r\n          this.listaProdotti = this.listaProdotti.concat(p);\r\n        }\r\n      }\r\n      if (flag) {\r\n        this.router.navigate([('catalogo')]);\r\n      }\r\n      if (flag === false) {\r\n        this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n          this.router.navigate(['catalogo']);\r\n        });\r\n      }\r\n    },\r\n    error => {\r\n      console.log('errore chiamata', error);\r\n\r\n    }\r\n    );\r\n  }\r\n\r\n  public searchProdotti(key: Prodotto, flag?) {\r\n\r\n    this.postCercaProdotti(key)\r\n    .then(result => {\r\n      this.listaProdotti = [];\r\n      for (const p of result) {\r\n        if (p.quantita > -1) {\r\n          this.listaProdotti = this.listaProdotti.concat(p);\r\n        }\r\n      }\r\n      if (flag === true) {\r\n        this.router.navigate([('catalogo')]);\r\n      }\r\n      if (flag === false) {\r\n        this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n          this.router.navigate(['catalogo']);\r\n        });\r\n      }\r\n    },\r\n    error => {\r\n      console.log('errore chiamata', error);\r\n\r\n    }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGFsb2dvL2RldHRhZ2xpby1wcm9kb3R0by9kZXR0YWdsaW8tcHJvZG90dG8uY29tcG9uZW50LmNzcyJ9 */\"","import { CarrelloService } from './../../carrello/carrello.service';\r\nimport { LoginService } from './../../utenti/login.service';\r\nimport { CatalogoService } from 'src/app/catalogo/catalogo.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Prodotto } from '../prodotto';\r\nimport { Router } from '@angular/router';\r\nimport { Carrello } from 'src/app/carrello/carrello';\r\nimport { TmplAstTemplate } from '@angular/compiler';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-dettaglio-prodotto',\r\n  templateUrl: './dettaglio-prodotto.component.html',\r\n  styleUrls: ['./dettaglio-prodotto.component.css']\r\n})\r\nexport class DettaglioProdottoComponent implements OnInit {\r\n\r\n  constructor(private catService: CatalogoService, private router: Router,\r\n              private utenteServ: LoginService,\r\n              private carrelloServ: CarrelloService) { }\r\n  prodotto: Prodotto;\r\n\r\n  data: Date = new Date();\r\n  loggedUt = this.utenteServ.utenteAtuale;\r\n  counter = Array;\r\n  qSelected: number;\r\n  ngOnInit() {\r\n    if (!this.catService.prodottoDettaglio) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n    this.prodotto = this.catService.prodottoDettaglio;\r\n    if (this.prodotto.quantita > 0) {\r\n      this.qSelected = 1;\r\n    }\r\n  }\r\n\r\n  aggiungiAlCarrello() {\r\n    const tmp = this.creaPrdCarrello();\r\n    this.carrelloServ.postFindP(tmp, this.loggedUt)\r\n      .then(\r\n        response => {\r\n          if (response === null) {\r\n            this.addNew(tmp);\r\n          }\r\n          if (response !== null) {\r\n            const x = +tmp.quantita_prodotto;\r\n            const newQ = response.quantita_prodotto + x;\r\n            if (newQ <= this.prodotto.quantita) {\r\n              response.quantita_prodotto = newQ;\r\n              this.updateExisted(response);\r\n            }\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  creaPrdCarrello(): Carrello {\r\n    // tslint:disable-next-line:prefer-const\r\n    let tmp: Carrello = new Carrello();\r\n    tmp.id_cliente = this.loggedUt.codicefiscale;\r\n    tmp.id_prodotto = this.prodotto.id;\r\n    tmp.quantita_prodotto = this.qSelected;\r\n    tmp.prezzo_prodotto = this.prodotto.prezzo;\r\n    const d = new Date();\r\n    tmp.data = d;\r\n    return tmp;\r\n  }\r\n\r\n  addNew(ca: Carrello) {\r\n    this.carrelloServ.postAddP(ca, this.loggedUt)\r\n      .then(\r\n        response => {\r\n          if (response === true) {\r\n            this.carrelloServ.getListCarrello(this.loggedUt)\r\n              .then(\r\n                res => {\r\n                  let cont = 0;\r\n                  for (const x of res) {\r\n                    cont = cont + x.quantita_prodotto;\r\n                  }\r\n                  this.carrelloServ.quantitaCarrello = cont;\r\n                  this.router.navigate([('carrello')]);\r\n                }\r\n              );\r\n          } else {\r\n            console.log('errore aggiunta carrello');\r\n          }\r\n        },\r\n        error => {\r\n          console.log('errore aggiunta carrello');\r\n        }\r\n      );\r\n  }\r\n\r\n  updateExisted(ca: Carrello) {\r\n    this.carrelloServ.postEditP(ca, this.loggedUt)\r\n      .then(\r\n        response => {\r\n          if (response === true) {\r\n            this.carrelloServ.getListCarrello(this.loggedUt)\r\n              .then(\r\n                res => {\r\n                  let cont = 0;\r\n                  for (const x of res) {\r\n                    cont = cont + x.quantita_prodotto;\r\n                  }\r\n                  this.carrelloServ.quantitaCarrello = cont;\r\n                  this.router.navigate([('carrello')]);\r\n                }\r\n              );\r\n          } else {\r\n            console.log('errore modifica in  carrello');\r\n          }\r\n        },\r\n        error => {\r\n          console.log('errore modifica in  carrello');\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","export class Prodotto {\r\n    id: number;\r\n    nome: string;\r\n    descrizione: string;\r\n    prezzo: number;\r\n    quantita: number;\r\n    tipologia: number;\r\n    immagine: string;\r\n    version: number;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9jb250YXR0aS9jb250YXR0aS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contatti',\n  templateUrl: './contatti.component.html',\n  styleUrls: ['./contatti.component.css']\n})\nexport class ContattiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public reidirectTo(cmp: string) {\r\n    this.router.navigate([(cmp)]);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9tZXRvZGktcGFnYW1lbnRvL21ldG9kaS1wYWdhbWVudG8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-metodi-pagamento',\n  templateUrl: './metodi-pagamento.component.html',\n  styleUrls: ['./metodi-pagamento.component.css']\n})\nexport class MetodiPagamentoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".navbar {\\r\\n    height:50px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIge1xyXG4gICAgaGVpZ2h0OjUwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../utenti/login.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  images = [1, 2, 3].map((n) => `/assets/sfondi/sfondo_${n}.jpg`);\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".navbar {\\r\\n    height:50px;\\r\\n}\\r\\n\\r\\n.badge {\\r\\n    display: inline-block;\\r\\n    padding: .25em .4em;\\r\\n    font-size: 60%;\\r\\n    font-weight: 700;\\r\\n    line-height: 1;\\r\\n    text-align: center;\\r\\n    white-space: nowrap;\\r\\n    vertical-align: 90%;\\r\\n    border-radius: .25rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixxQkFBcUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2YmFyIHtcclxuICAgIGhlaWdodDo1MHB4O1xyXG59XHJcblxyXG4uYmFkZ2Uge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogLjI1ZW0gLjRlbTtcclxuICAgIGZvbnQtc2l6ZTogNjAlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiA5MCU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW07XHJcbn0iXX0= */\"","import { Prodotto } from './../catalogo/prodotto';\r\nimport { CarrelloService } from './../carrello/carrello.service';\r\nimport { CatalogoService } from './../catalogo/catalogo.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../utenti/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor( private loginService: LoginService, private router: Router,\r\n               private catalogoService: CatalogoService,\r\n               private caServ: CarrelloService) { }\r\n\r\n  utCorrente = this.loginService.utenteAtuale;\r\n  numProdotti = this.caServ.quantitaCarrello;\r\n  keyFind = '';\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public reidirectTo(cmp: string) {\r\n    this.router.navigate([(cmp)]);\r\n  }\r\n\r\n\r\n  private clearTentativi() {\r\n    this.loginService.clearTentativi();\r\n  }\r\n\r\n  private loadProdotti(f?) {\r\n    this.catalogoService.caricaProdotti(f);\r\n  }\r\n\r\n  private searchProdotti(key, flag?) {\r\n    console.log('da cercare', key);\r\n    key = key.trim();\r\n    const tmp = new Prodotto();\r\n    tmp.nome = key;\r\n    this.catalogoService.searchProdotti(tmp, flag);\r\n  }\r\n\r\n  logout() {\r\n    this.loginService.eseguiLogout();\r\n  }\r\n\r\n  private reloadCatalogo(key?, flag?) {\r\n    if (this.catalogoService.catalogoAttivo === true) {\r\n      if (flag === true) {\r\n        this.searchProdotti(key, false);\r\n      } else {\r\n        this.loadProdotti(false);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGluaS9vcmRpbmkuY29tcG9uZW50LmNzcyJ9 */\"","import { ControlloCampiService } from './../util/controllo-campi.service';\r\nimport { Prodotto } from './../catalogo/prodotto';\r\nimport { CatalogoService } from 'src/app/catalogo/catalogo.service';\r\nimport { OrdiniService } from './ordini.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Ordini } from './ordini';\r\nimport { LoginService } from '../utenti/login.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { forkJoin } from 'rxjs';\r\nimport { Indirizzo } from '../util/indirizzo';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-ordini',\r\n  templateUrl: './ordini.component.html',\r\n  styleUrls: ['./ordini.component.css']\r\n})\r\nexport class OrdiniComponent implements OnInit {\r\n\r\n  constructor(private ordiniService: OrdiniService, private router: Router,\r\n              private logService: LoginService,\r\n              private prodService: CatalogoService,\r\n              private datepipe: DatePipe,\r\n              private ctrlCampi: ControlloCampiService) { }\r\n  listaOrdini: Ordini[];\r\n  listaProdotti: Prodotto[];\r\n  loaded = false;\r\n  numeroOrdini = 0;\r\n  ngOnInit() {\r\n    if (!this.logService.utenteAtuale) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n    forkJoin(this.ordiniService.getListaOrdini(this.logService.utenteAtuale),\r\n    this.prodService.getCaricaProdotti())\r\n    .subscribe(\r\n        res => {\r\n          if (res[0] != null) {\r\n            this.listaOrdini = res[0];\r\n          }\r\n          if (res[1] != null) {\r\n            this.listaProdotti = res[1];\r\n          }\r\n          this.numeroOrdini = this.listaOrdini.length;\r\n          console.log('numero ordini', this.numeroOrdini);\r\n          this.loaded = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  public prodottiToArray(prod: string): string[] {\r\n    const list = prod.split(',');\r\n    return list;\r\n  }\r\n\r\n  public getDate(data: Date): string {\r\n/*     const dataFormatted = data.toString();\r\n */\r\n    const dataFormatted = this.datepipe.transform(data, 'dd/MM/yyyy');\r\n    return dataFormatted;\r\n  }\r\n\r\n  public decriptProdotto(idP: string): Prodotto {\r\n    for (const x of this.listaProdotti) {\r\n      if (Number(idP) === x.id) {\r\n        return x;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private decriptIndirizzo(ord: string): Indirizzo {\r\n    return this.ctrlCampi.indirizzoFromString(ord);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Utente } from '../utenti/utente';\r\nimport { Ordini } from './ordini';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdiniService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getListaOrdini(utn: Utente): Promise<Ordini[]> {\r\n    return this.httpClient.get<Ordini[]>('http://localhost:8080/Store3D/chiamateRest/ordini/listaOrdini',\r\n      this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  public getRemoveAllOrdini(utn: Utente): Promise<boolean> {\r\n    return this.httpClient.get<boolean>('http://localhost:8080/Store3D/chiamateRest/ordini/removeAllOrdini',\r\n      this.httpOption(utn)).toPromise();\r\n  }\r\n\r\n  private httpOption(ut: Utente) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('username', ut.codicefiscale)\r\n      .append('password' , ut.password)\r\n    };\r\n    return httpOptions;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0ZW50aS9nZXN0aW9uZS1kYXRpL2dlc3Rpb25lLWRhdGkuY29tcG9uZW50LmNzcyJ9 */\"","import { Utente } from './../utente';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-gestione-dati',\r\n  templateUrl: './gestione-dati.component.html',\r\n  styleUrls: ['./gestione-dati.component.css']\r\n})\r\nexport class GestioneDatiComponent implements OnInit {\r\n\r\n  constructor(private logService: LoginService, private router: Router) { }\r\n\r\n  utenteAttivo: Utente;\r\n\r\n  ngOnInit() {\r\n    if (!this.logService.utenteAtuale || this.logService.utenteAtuale === null) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n    this.utenteAttivo = this.logService.utenteAtuale;\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0ZW50aS9nZXN0aW9uZS1kYXRpL21vZGlmaWNhLWRhdGkvbW9kaWZpY2EtZGF0aS5jb21wb25lbnQuY3NzIn0= */\"","import { OrdiniService } from './../../../ordini/ordini.service';\r\nimport { CarrelloService } from './../../../carrello/carrello.service';\r\nimport { Utente } from './../../utente';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../../login.service';\r\nimport { ControlloCampiService } from 'src/app/util/controllo-campi.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { forkJoin} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-modifica-dati',\r\n  templateUrl: './modifica-dati.component.html',\r\n  styleUrls: ['./modifica-dati.component.css']\r\n})\r\nexport class ModificaDatiComponent implements OnInit {\r\n\r\n  constructor(private logService: LoginService, private router: Router,\r\n              public ctrlCampi: ControlloCampiService,\r\n              private modalService: NgbModal,\r\n              private carServ: CarrelloService,\r\n              private ordServ: OrdiniService) { }\r\n\r\n  utenteAttuale: Utente;\r\n  utenteModificato: Utente;\r\n  risultatoModifica: boolean;\r\n  fraseEliminazione: string;\r\n  flag = {\r\n    general: false,\r\n    nome: true,\r\n    cognome: true,\r\n    email: true,\r\n    cellulare: true,\r\n    username: true\r\n  };\r\n\r\n  ngOnInit() {\r\n    if (!this.logService.utenteAtuale || this.logService.utenteAtuale === null) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n    this.utenteAttuale = this.logService.utenteAtuale;\r\n    this.utenteModificato = Object.assign({}, this.utenteAttuale);\r\n  }\r\n\r\n  private checkField(name) {\r\n    if (name === 'nome') {\r\n      if (this.utenteModificato.nome && !this.ctrlCampi.campoVuoto(this.utenteModificato.nome)) {\r\n        this.flag.nome = true;\r\n      } else {\r\n        this.flag.nome = false;\r\n      }\r\n    }\r\n    if (name === 'cognome') {\r\n      if (this.utenteModificato.cognome && !this.ctrlCampi.campoVuoto(this.utenteModificato.cognome)) {\r\n        this.flag.cognome = true;\r\n      } else {\r\n        this.flag.cognome = false;\r\n      }\r\n    }\r\n    if (name === 'email') {\r\n      if (this.utenteModificato.email && this.ctrlCampi.validateEmail(this.utenteModificato.email)) {\r\n        this.flag.email = true;\r\n      } else {\r\n        this.flag.email = false;\r\n      }\r\n    }\r\n    if (name === 'username') {\r\n      if (this.utenteModificato.username && !this.ctrlCampi.campoVuoto(this.utenteModificato.username)) {\r\n        this.flag.username = true;\r\n      } else {\r\n        this.flag.username = false;\r\n      }\r\n    }\r\n    if (name === 'cellulare') {\r\n      if (this.utenteModificato.cellulare && !this.ctrlCampi.campoVuoto(Object.assign({}, this.utenteModificato.cellulare).toString())) {\r\n        this.flag.cellulare = true;\r\n        console.log('è entato');\r\n      } else {\r\n        this.flag.cellulare = false;\r\n      }\r\n    }\r\n    this.flag.general = this.checkAllField();\r\n    console.log('general =  ', this.flag.general);\r\n  }\r\n\r\n  private checkAllField(): boolean {\r\n    console.log('cell mod =  ', this.utenteModificato.cellulare);\r\n    console.log('cell attuale =  ', this.utenteAttuale.cellulare);\r\n    if (this.utenteModificato.nome === this.utenteAttuale.nome &&\r\n      this.utenteModificato.cognome === this.utenteAttuale.cognome &&\r\n      this.utenteModificato.email === this.utenteAttuale.email &&\r\n      this.utenteModificato.username === this.utenteAttuale.username &&\r\n      this.utenteModificato.cellulare === this.utenteAttuale.cellulare) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private salvaModifiche(content) {\r\n    console.log('version prima modifica  ', this.utenteModificato.version);\r\n\r\n    this.logService.postUpdateUtente(this.utenteModificato, this.utenteAttuale)\r\n      .subscribe(\r\n        res => {\r\n          if (res != null) {\r\n            this.utenteModificato = res;\r\n            this.risultatoModifica = true;\r\n          } else {\r\n            this.risultatoModifica = false;\r\n          }\r\n          console.log('version dopo modifica  ', this.utenteModificato.version);\r\n          this.modalService.open(content);\r\n\r\n        },\r\n        err => {\r\n          this.risultatoModifica = false;\r\n          this.modalService.open(content);\r\n        }\r\n      );\r\n  }\r\n\r\n  private eliminaUtente() {\r\n    forkJoin(this.logService.postDeleteUtente(this.utenteAttuale),\r\n             this.carServ.getRemoveAllCarrello(this.utenteAttuale))\r\n    .subscribe(\r\n      res => {\r\n        if (res[0] === true) {\r\n          this.logOut();\r\n        }\r\n        this.modalService.dismissAll();\r\n      }\r\n    );\r\n  }\r\n\r\n  private logOut() {\r\n    // la funzione ritorna già ad home\r\n    this.logService.eseguiLogout();\r\n  }\r\n\r\n  public closeModale() {\r\n    if (this.risultatoModifica) {\r\n      this.utenteModificato.version = this.utenteModificato.version + 1;\r\n      this.logService.utenteAtuale = Object.assign({}, this.utenteModificato);\r\n\r\n    }\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  private apriModale(content) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n}\r\n","export default \".is-invalid {\\r\\n    border-left: solid 6px red;\\r\\n  }\\r\\n  \\r\\n  .material-icons {\\r\\n    display: inline-flex;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRlbnRpL2dlc3Rpb25lLWRhdGkvbW9kaWZpY2EtcGFzc3dvcmQvbW9kaWZpY2EtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDBCQUEwQjtFQUM1Qjs7RUFFQTtJQUNFLG9CQUFvQjtJQUNwQixzQkFBc0I7RUFDeEIiLCJmaWxlIjoic3JjL2FwcC91dGVudGkvZ2VzdGlvbmUtZGF0aS9tb2RpZmljYS1wYXNzd29yZC9tb2RpZmljYS1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlzLWludmFsaWQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IHNvbGlkIDZweCByZWQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXRlcmlhbC1pY29ucyB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfSJdfQ== */\"","import { ControlloCampiService } from '../../../util/controllo-campi.service';\r\nimport { LoginService } from 'src/app/utenti/login.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nconst ALERTS: Alert[] = [\r\n  { // 0\r\n    type: 'danger',\r\n    message: 'Errore durante la modifica della password!'\r\n  },\r\n  { // 1\r\n    type: 'success',\r\n    message: 'Aggiornemento password avvenuto correttamente!'\r\n  }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-modifica-password',\r\n  templateUrl: './modifica-password.component.html',\r\n  styleUrls: ['./modifica-password.component.css']\r\n})\r\nexport class ModificaPasswordComponent implements OnInit {\r\n\r\n  alerts: Alert[] = [];\r\n\r\n  public frmSignup: FormGroup;\r\n\r\n  confirmNewPassword;\r\n  oldPassword;\r\n  newPassword;\r\n  flag = {\r\n    fOld: true,\r\n    fNew: true,\r\n    fCNew: true\r\n  };\r\n\r\n  constructor(private logService: LoginService,\r\n              private router: Router,\r\n              public ctrlCampi: ControlloCampiService) { }\r\n  utAttivo = this.logService.utenteAtuale;\r\n  ngOnInit() {\r\n    this.alerts = [];\r\n    if (this.logService.tentativoUpdate) {\r\n      this.addError(0);\r\n    }\r\n    if (this.logService.aggiornamentoOk) {\r\n      this.addError(1);\r\n    }\r\n    if (!this.logService.utenteAtuale || this.logService.utenteAtuale === null) {\r\n      this.router.navigate([('home')]);\r\n    }\r\n  }\r\n\r\n  // gestione alert /////\r\n  close(alert: Alert) {\r\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\r\n  }\r\n\r\n  addError(n: number) {\r\n    const a = Array.from(ALERTS);\r\n    this.alerts.push(a[n]);\r\n  }\r\n  ///////////////////////\r\n\r\n  public ctrlCampo(): void {\r\n    if (this.oldPassword) {\r\n      if (this.utAttivo.password === this.oldPassword) {\r\n        this.flag.fOld = true;\r\n      } else {\r\n        this.flag.fOld = false;\r\n      }\r\n    }\r\n    if (this.newPassword) {\r\n      if ((this.ctrlCampi.checkPassword(this.newPassword)) && this.newPassword !== this.utAttivo.password) {\r\n        this.flag.fNew = true;\r\n      } else {\r\n        this.flag.fNew = false;\r\n      }\r\n    }\r\n    if (this.confirmNewPassword) {\r\n      if (this.ctrlCampi.controlloPassword(this.confirmNewPassword, this.newPassword)) {\r\n        this.flag.fCNew = true;\r\n      } else {\r\n        this.flag.fCNew = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public salva(): void {\r\n    const oldUt = Object.assign({}, this.utAttivo);\r\n    this.utAttivo.password = this.newPassword;\r\n    this.logService.eseguiUpdate(this.utAttivo, oldUt);\r\n  }\r\n\r\n}\r\n","import { CarrelloService } from './../carrello/carrello.service';\r\nimport { CredenzialiLogin } from './login/login';\r\nimport { Utente } from './utente';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n\r\n  utenteAtuale: Utente;\r\n  tentativoLogin = false;\r\n  tentativoUpdate = false;\r\n  aggiornamentoOk = false;\r\n\r\n  error: any;\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router,\r\n              private carServ: CarrelloService) { }\r\n\r\n  postLogin(data: CredenzialiLogin): Observable<Utente> {\r\n    return this.httpClient.post<Utente>('http://localhost:8080/Store3D/chiamateRest/cliente/eseguiLoginClienteEmail',\r\n      data);\r\n  }\r\n\r\n  postUpdateUtente(data: Utente, utCorrente: Utente): Observable<Utente> {\r\n    return this.httpClient.post<Utente>('http://localhost:8080/Store3D/chiamateRest/cliente/updateCliente',\r\n      data , this.httpOption(utCorrente));\r\n  }\r\n\r\n  postDeleteUtente(data: Utente): Observable<boolean> {\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/cliente/rimuoviCliente',\r\n      data);\r\n  }\r\n\r\n  private ricarica(compNome) {\r\n    // fa un refresh del component stesso\r\n    this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([compNome]);\r\n   });\r\n  }\r\n\r\n  public eseguiLogin(dati: CredenzialiLogin) {\r\n    this.postLogin(dati)\r\n      .subscribe(result => {\r\n        this.utenteAtuale = result;\r\n        this.tentativoLogin = false;\r\n        if (this.utenteAtuale && this.utenteAtuale !== null) {\r\n          // richiama il servizio per caricare il carrello\r\n          this.carServ.getListCarrello(this.utenteAtuale)\r\n          .then(\r\n            res => {\r\n              this.carServ.carrelloAttuale = res;\r\n              let cont = 0;\r\n              for (const c of res) {\r\n                cont = cont + c.quantita_prodotto;\r\n              }\r\n              this.carServ.quantitaCarrello = cont;\r\n              this.router.navigate([('home')]);\r\n            },\r\n            err => {\r\n              console.log('errore caricamento carrello');\r\n            }\r\n          );\r\n        } else {\r\n          this.tentativoLogin = true;\r\n          this.ricarica('login');\r\n        }\r\n        console.log('stato utente sub=  ' + this.utenteAtuale);\r\n      },\r\n      error => {\r\n        console.log('errore chiamata', error);\r\n        this.tentativoLogin = true;\r\n        this.ricarica('login');\r\n      }\r\n\r\n      );\r\n  }\r\n\r\n  public eseguiLogout() {\r\n    this.utenteAtuale = null;\r\n    this.clearTentativi();\r\n    this.router.navigate([('login')]);\r\n  }\r\n\r\n  public eseguiUpdate(dati: Utente, utCor: Utente) {\r\n    this.postUpdateUtente(dati, utCor)\r\n      .subscribe(result => {\r\n        this.utenteAtuale = result;\r\n        this.tentativoUpdate = false;\r\n        this.aggiornamentoOk = true;\r\n        this.ricarica('modifica_password');\r\n        console.log('stato aggiornamento=  ' + this.utenteAtuale);\r\n      },\r\n      error => {\r\n        console.log('errore chiamata', error);\r\n        this.tentativoUpdate = true;\r\n        this.ricarica('modifica_password');\r\n\r\n      }\r\n      );\r\n  }\r\n\r\n  public clearTentativi() {\r\n    this.tentativoLogin = false;\r\n    this.tentativoUpdate = false;\r\n    this.aggiornamentoOk = false;\r\n  }\r\n\r\n  private httpOption(ut: Utente) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('cf', ut.codicefiscale)\r\n      .append('password' , ut.password)\r\n    };\r\n    return httpOptions;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0ZW50aS9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","import { CarrelloService } from './../../carrello/carrello.service';\r\nimport { LoginService } from '../login.service';\r\nimport { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { CredenzialiLogin } from './login';\r\nimport { Router } from '@angular/router';\r\n\r\nconst ALERTS: Alert[] = [\r\n  { // 0\r\n    type: 'danger',\r\n    message: 'Errore utente inesitente o password errata!'\r\n  }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n\r\n  alerts: Alert[] = [];\r\n  tipoCampo = 'password';\r\n  constructor(\r\n    public logServizi: LoginService,\r\n    private router: Router,\r\n    private carrelloServ: CarrelloService) { }\r\n    ut = new CredenzialiLogin();\r\n\r\n\r\n  public entra() {\r\n    this.logServizi.eseguiLogin(this.ut);\r\n\r\n  }\r\n// gestione alert /////\r\n  close(alert: Alert) {\r\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\r\n  }\r\n\r\n  addError(n: number) {\r\n    const a = Array.from(ALERTS);\r\n    this.alerts.push(a[n]);\r\n  }\r\n///////////////////////\r\n\r\npublic showPassword() {\r\n  if (this.tipoCampo === 'password') {\r\n    this.tipoCampo = 'email';\r\n  } else {\r\n    this.tipoCampo = 'password';\r\n  }\r\n}\r\n  ngOnInit() {\r\n    if (this.logServizi.tentativoLogin) {\r\n      this.addError(0);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export class CredenzialiLogin {\r\n    // tslint:disable-next-line:variable-name\r\n/*     public username = '';\r\n */    // tslint:disable-next-line:variable-name\r\n/*     public password = '';\r\n */\r\n    email: string;\r\n    password: string;\r\n    /* get userame(): string {\r\n        return this._username;\r\n    }\r\n    set username(value: string) {\r\n        this._username = value;\r\n    }\r\n\r\n    get password(): string {\r\n        return this._password;\r\n    }\r\n    set password(value: string) {\r\n        this._password = value;\r\n    } */\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0ZW50aS9yZWdpc3RyYXppb25lL3JlZ2lzdHJhemlvbmUuY29tcG9uZW50LmNzcyJ9 */\"","import { ControlloCampiService } from './../../util/controllo-campi.service';\r\nimport { RegistrazioneService } from './registrazione.service';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Utente } from '../utente';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Indirizzo } from 'src/app/util/indirizzo';\r\n\r\n\r\n\r\n\r\nconst ALERTS: Alert[] = [\r\n  { // 0\r\n    type: 'danger',\r\n    message: 'Errore password non corrispondenti !'\r\n  },\r\n  { // 1\r\n    type: 'danger',\r\n    message: 'Errore ci sono dei campi obbligatori non pieni !'\r\n  },\r\n  { // 2\r\n    type: 'danger',\r\n    message: 'Errore inserimento dati !'\r\n  },\r\n  { // 3\r\n    type: 'danger',\r\n    message: 'Errore Alcuni dati inseriti non sono validi !'\r\n  }\r\n];\r\n\r\n\r\n@Component({\r\n  selector: 'app-registrazione',\r\n  templateUrl: './registrazione.component.html',\r\n  styleUrls: ['./registrazione.component.css']\r\n})\r\n\r\nexport class RegistrazioneComponent implements OnInit {\r\n\r\n  alerts: Alert[] = [];\r\n  flag = false;\r\n\r\n  newUt = new Utente();\r\n  cPassword: string;\r\n  flagCtrlCampi = {\r\n    email: false,\r\n    codiceFiscale: false,\r\n    password: true\r\n  };\r\n\r\n  msgErrore = {\r\n    codiceFiscale: '',\r\n    password: '',\r\n    email: ''\r\n  };\r\n\r\n  comuni;\r\n  provincie;\r\n  listaComuniDaCaricare;\r\n  listaCap;\r\n  indirizzo = new Indirizzo();\r\n\r\n\r\n  constructor(config: NgbModalConfig, private modalService: NgbModal,\r\n              public regService: RegistrazioneService,\r\n              public ctrlCampi: ControlloCampiService) {\r\n    // customize default values of modals used by this component tree\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n\r\n  private registra(content) {\r\n    this.flag = true;\r\n    /*     console.log(this.campiNulli());\r\n     *//*     this.addError(0);\r\n  */\r\n    this.stampaCP();\r\n    this.datiCorretti(content);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.ctrlCampi.getProvincie()\r\n    .subscribe (\r\n      res => {\r\n        this.provincie = res;\r\n        this.indirizzo.provincia = this.provincie[0].nome;\r\n      }\r\n    );\r\n    this.ctrlCampi.getComuni()\r\n    .subscribe(\r\n      res => {\r\n        this.comuni = res;\r\n        this.loadComuni();\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  private closeModal(s: string, content) {\r\n    // caso di salvataggio\r\n    if (s === 'salva') {\r\n      const a = Array.from(ALERTS);\r\n      this.regService.eseguiRegistrazione(this.newUt, this.alerts, a);\r\n      this.modalService.dismissAll();\r\n      // caso di annullamento\r\n    } else {\r\n      this.modalService.dismissAll();\r\n    }\r\n  }\r\n  // gestione modale\r\n  openModal(content) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  //////////////////////////////\r\n  close(alert: Alert) {\r\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\r\n  }\r\n\r\n  addError(n: number) {\r\n    const a = Array.from(ALERTS);\r\n    this.alerts.push(a[n]);\r\n  }\r\n\r\n  private campiNulli(): boolean {\r\n\r\n    if (!this.newUt.nome || !this.newUt.cognome ||\r\n      !this.newUt.username  ||\r\n      !this.newUt.email || !this.newUt.password ||\r\n      !this.newUt.codicefiscale || !this.cPassword ||\r\n      !this.newUt.cellulare || !this.ctrlIndirizzo()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private controlloErrori(): boolean {\r\n    this.alerts = [];\r\n    // svuota lista errori\r\n    let flag1 = true;\r\n    let flag2 = true;\r\n    this.flagCtrlCampi.password = true;\r\n    if (this.campiNulli()) {\r\n      this.addError(1);\r\n      flag1 = false;\r\n    }\r\n    if ( (this.newUt.codicefiscale && !this.flagCtrlCampi.codiceFiscale) ||\r\n        (this.newUt.email && !this.flagCtrlCampi.email) ||\r\n        (this.newUt.password && !this.ctrlCampi.checkPassword(this.newUt.password) ) ) {\r\n      this.addError(3); // alert campi errati\r\n      if (this.newUt.password && !this.ctrlCampi.checkPassword(this.newUt.password) ) {\r\n        this.flagCtrlCampi.password = false;\r\n      }\r\n    }\r\n    if (this.ctrlCampi.controlloPassword(this.newUt.password, this.cPassword) === false && this.cPassword) {\r\n      this.addError(0); // alert password non uguali\r\n      flag2 = false;\r\n    }\r\n    if (!this.newUt.email) {\r\n      this.msgErrore.email = '*campo obbligatorio';\r\n    }\r\n    if (!this.newUt.codicefiscale) {\r\n      this.msgErrore.codiceFiscale = '*campo obbligatorio';\r\n    }\r\n    console.log('stato flag controllo errori', flag1, ' ', flag2);\r\n    console.log('tutt appost !');\r\n    return flag1 && flag2 && this.flagCtrlCampi.email && this.flagCtrlCampi.codiceFiscale &&\r\n    this.flagCtrlCampi.password;\r\n    // formato email è il controllo email presente o meno\r\n  }\r\n\r\n  private datiCorretti(content) {\r\n    if (this.controlloErrori()) {\r\n      this.indirizzo.nome = this.newUt.nome;\r\n      this.indirizzo.cognome = this.newUt.cognome;\r\n      this.newUt.indirizzo = this.ctrlCampi.indirizzoToString(this.indirizzo);\r\n      this.newUt = this.ctrlCampi.utenteToUpperC(this.newUt);\r\n      this.openModal(content);\r\n    }\r\n  }\r\n\r\n  onChange(n: string) {\r\n    const utTmp = this.newUt;\r\n    this.impostaTestoErrore(n, utTmp);\r\n  }\r\n\r\n  private impostaTestoErrore(n: string, utenteTmp: Utente) {\r\n    if (n === 'email') {\r\n      console.log('è entrato in mail   ', this.newUt.email);\r\n      this.msgErrore.email = '*campo obbligatorio';\r\n      this.flagCtrlCampi.email = true;\r\n      this.regService.postRicercaEmail(utenteTmp)\r\n        .then((response) => {\r\n          console.log('risposta  ', response);\r\n          if (response === true) {\r\n            this.flagCtrlCampi.email = false;\r\n            this.msgErrore.email = '*email già utilizzata';\r\n          }\r\n        });\r\n    }\r\n    if (n === 'codicefiscale') {\r\n      utenteTmp.codicefiscale = utenteTmp.codicefiscale.toUpperCase();\r\n      this.msgErrore.codiceFiscale = '*campo obbligatorio';\r\n      this.flagCtrlCampi.codiceFiscale = true;\r\n      this.regService.postRicercaCf(utenteTmp)\r\n        .then((response) => {\r\n          if (response === true) {\r\n            this.flagCtrlCampi.codiceFiscale = false;\r\n            this.msgErrore.codiceFiscale = '*codice fiscale già presente';\r\n          }\r\n        });\r\n      if (this.newUt.codicefiscale && this.ctrlCampi.validateCF(this.newUt.codicefiscale) === false) {\r\n        this.flagCtrlCampi.codiceFiscale = false;\r\n        this.msgErrore.codiceFiscale = '*formato codice fiscale errato';\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadComuni() {\r\n    this.listaComuniDaCaricare = [];\r\n    this.listaCap = [];\r\n    for (const c of this.comuni) {\r\n      if (c.provincia.nome === this.indirizzo.provincia) {\r\n        this.listaComuniDaCaricare = this.listaComuniDaCaricare.concat(c);\r\n      }\r\n    }\r\n    this.indirizzo.citta = this.listaComuniDaCaricare[0].nome;\r\n    this.indirizzo.cap = null;\r\n  }\r\n\r\n  private loadCap() {\r\n    this.listaCap = [];\r\n    for (const cp of this.listaComuniDaCaricare) {\r\n      if (this.indirizzo.citta === cp.nome) {\r\n        this.listaCap = cp.cap;\r\n      }\r\n    }\r\n    this.indirizzo.cap = this.listaCap[0];\r\n  }\r\n\r\n  private ctrlIndirizzo(): boolean {\r\n    return this.indirizzo.via !== undefined &&\r\n    this.indirizzo.civico !== undefined\r\n    && this.indirizzo.citta !== undefined &&\r\n    this.indirizzo.cap !== undefined &&\r\n     this.indirizzo.provincia !== undefined;\r\n  }\r\n\r\n  stampaCP() {\r\n    console.log('cap', this.indirizzo.cap);\r\n    console.log('citta', this.indirizzo.citta);\r\n    console.log('provincia', this.indirizzo.provincia);\r\n\r\n\r\n  }\r\n}\r\n","import { Utente } from '../utente';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrazioneService {\r\n\r\n  constructor(private httpClient: HttpClient, private router: Router) { }\r\n\r\n\r\n  postRegistrazione(data: Utente): Observable<Utente> {\r\n    return this.httpClient.post<Utente>('http://localhost:8080/Store3D/chiamateRest/cliente/aggiungiCliente',\r\n      data);\r\n  }\r\n\r\n  postRicercaEmail(data: Utente) {\r\n    return this.httpClient.post('http://localhost:8080/Store3D/chiamateRest/cliente/cercaEmail',\r\n      data).toPromise();\r\n  }\r\n\r\n  postRicercaCf(data: Utente) {\r\n    return this.httpClient.post('http://localhost:8080/Store3D/chiamateRest/cliente/cercaCf',\r\n      data).toPromise();\r\n  }\r\n\r\n  eseguiRegistrazione(dati: Utente, alerts, a) {\r\n    this.postRegistrazione(dati)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.router.navigate([('home')]);\r\n        }\r\n      },\r\n        error => {\r\n          alerts.push(a[2]);\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n  /* ricercaEmail(dati: Utente): Promise <boolean> {\r\n\r\n    return new Promise(( resolve , reject ) =>  {\r\n      this.postRicercaEmail(dati);\r\n\r\n    });\r\n  } */\r\n}\r\n","export class Utente {\r\n    codicefiscale: string ;\r\n    nome: string;\r\n    cognome: string;\r\n    username: string;\r\n    password: string;\r\n    indirizzo: string;\r\n    version: number;\r\n    email: string;\r\n    cellulare: number;\r\n    // tslint:disable-next-line:variable-name\r\n    dati_pagamento: string;\r\n}\r\n","import { Carta } from './carta';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Utente } from '../utenti/utente';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartaService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  postAddCarta(data: Carta, utCorrente: Utente): Observable<boolean> {\r\n    return this.httpClient.post<boolean>('http://localhost:8080/Store3D/chiamateRest/carta/addCarta',\r\n      data , this.httpOption(utCorrente));\r\n  }\r\n\r\n  getListCarta(utCorrente: Utente): Observable<Carta[]> {\r\n    return this.httpClient.get<Carta[]>('http://localhost:8080/Store3D/chiamateRest/carta/listaCarte',\r\n      this.httpOption(utCorrente));\r\n  }\r\n\r\n  getLastIdCarta(utCorrente: Utente): Observable<number> {\r\n    return this.httpClient.get<number>('http://localhost:8080/Store3D/chiamateRest/carta/lastIdCarta',\r\n      this.httpOption(utCorrente));\r\n  }\r\n\r\n  private httpOption(ut: Utente) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n      })\r\n      .append('cf', ut.codicefiscale)\r\n      .append('password' , ut.password)\r\n    };\r\n    return httpOptions;\r\n  }\r\n}\r\n","export class Carta {\r\n    id: number;\r\n    // tslint:disable-next-line:variable-name\r\n    cf_cliente: string;\r\n    nome: string;\r\n    cognome: string;\r\n    numero: number;\r\n    // tslint:disable-next-line:variable-name\r\n    data_scadenza: Date;\r\n    csv: number;\r\n    version: number;\r\n}\r\n","import { Indirizzo } from 'src/app/util/indirizzo';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Prodotto } from '../catalogo/prodotto';\r\nimport { Utente } from '../utenti/utente';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ControlloCampiService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    public controlloPassword(psw1, psw2): boolean {\r\n        if (psw1 && psw2) {\r\n            psw1 = psw1.trim();\r\n            psw2 = psw2.trim();\r\n            if (psw1 === psw2) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n    public validateCF(codiceFiscale: string): boolean {\r\n        if (codiceFiscale && codiceFiscale.length === 16) {\r\n            let serchfind: boolean;\r\n\r\n            const regexp = new RegExp('^[A-Za-z]{6}[0-9]{2}[A-Za-z][0-9]{2}[A-Za-z][0-9]{3}[A-Za-z]$');\r\n\r\n            serchfind = regexp.test(codiceFiscale);\r\n\r\n            console.log(serchfind);\r\n            return serchfind;\r\n        } else {\r\n            console.log('condizione di uscita');\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public checkPassword(password: string): boolean {\r\n        const hasNumber = /\\d/;\r\n        const hasUpper = /[A-Z]/;\r\n        const hasLower = /[a-z]/;\r\n        const hasSpecial = /\\W/;\r\n        const hasSpace = / /;\r\n        const flag1 = hasNumber.test(password);\r\n        const flag2 = hasUpper.test(password);\r\n        const flag3 = hasLower.test(password);\r\n        const flag4 = hasSpecial.test(password);\r\n        const flag5 = hasSpace.test(password);\r\n        const flag6 = (password.length > 7);\r\n\r\n        console.log(flag1, '  ', flag2, '  ', flag3, '  ', flag4, ' ', !flag5, '  ', flag6);\r\n\r\n        return flag1 && flag2 && flag3 && flag4 && !flag5 && flag6;\r\n    }\r\n\r\n    public utenteToUpperC(ut: Utente): Utente {\r\n        // tslint:disable-next-line:prefer-const\r\n        let newUt = ut;\r\n        newUt.nome = ut.nome.toUpperCase();\r\n        newUt.cognome = ut.cognome.toUpperCase();\r\n        newUt.indirizzo = ut.indirizzo.toUpperCase();\r\n        newUt.codicefiscale = ut.codicefiscale.toUpperCase();\r\n        return newUt;\r\n    }\r\n\r\n    public ctrlValuta(campo: string): boolean {\r\n        const regexp = new RegExp('^-?(?:(?:0|[1-9][0-9]*)(?:.[0-9]{1,2})?|.[0-9]{1,2})$');\r\n        let result: boolean;\r\n        result = regexp.test(campo);\r\n        return result;\r\n    }\r\n\r\n    public campoVuoto(campo: string): boolean {\r\n        campo = campo.trim();\r\n        return campo === '';\r\n    }\r\n\r\n    public ctrlQuantita(campo: number, min: number, max: number): boolean {\r\n        if (campo >= min && campo <= max) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public prodEquals(p1: Prodotto, p2: Prodotto) {\r\n        return p1.nome === p2.nome &&\r\n            p1.descrizione === p2.descrizione &&\r\n            p1.prezzo === p2.prezzo &&\r\n            p1.immagine === p2.immagine &&\r\n            p1.quantita === p2.quantita &&\r\n            p1.tipologia === p2.tipologia;\r\n    }\r\n\r\n    public validateEmail(mail): boolean {\r\n        // tslint:disable-next-line:max-line-length\r\n        const regexp = new RegExp('^[a-zA-Z0-9_\\\\.\\\\+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-\\\\.]{2,}$');\r\n        const ris: boolean = regexp.test(mail);\r\n        console.log('mail regex   ', ris);\r\n        return ris;\r\n    }\r\n\r\n    public getProvincie(): Observable<any> {\r\n        return this.httpClient.get('assets/provincie.json');\r\n    }\r\n\r\n    public getComuni(): Observable<any> {\r\n        return this.httpClient.get('assets/comuni.json');\r\n    }\r\n\r\n    public indirizzoToString(indirizzo: Indirizzo): string {\r\n        return indirizzo.nome + ',' + indirizzo.cognome + ',' +\r\n            indirizzo.via + ',' + indirizzo.civico + ',' +\r\n            indirizzo.provincia + ',' + indirizzo.citta + ',' +\r\n            indirizzo.cap + ';';\r\n    }\r\n\r\n    public indirizzoFromString(indirizzo: string): Indirizzo {\r\n        indirizzo = indirizzo.slice(0, -1);\r\n        const val = indirizzo.split(',');\r\n        const newIndirizzo = new Indirizzo();\r\n        newIndirizzo.nome = val[0];\r\n        newIndirizzo.cognome = val[1];\r\n        newIndirizzo.via = val[2];\r\n        newIndirizzo.civico = val[3];\r\n        newIndirizzo.provincia = val[4];\r\n        newIndirizzo.citta = val[5];\r\n        newIndirizzo.cap = val[6];\r\n        return newIndirizzo;\r\n    }\r\n\r\n    /* public decriptListCarte(strCart: string): DatiCarta[] {\r\n        if (strCart && strCart !== 'null') {\r\n            let listCarte = [];\r\n            const tmp = strCart.split(';');\r\n            for (const x of tmp) {\r\n                const tmpX = x.split(',');\r\n                const tmpCarta = new DatiCarta();\r\n                tmpCarta.nome = tmpX[0];\r\n                tmpCarta.cognome = tmpX[1];\r\n                tmpCarta.numero = tmpX[2];\r\n                tmpCarta.data_scadenza = tmpX[3];\r\n                tmpCarta.csv = tmpX[4];\r\n                listCarte = listCarte.concat(tmpCarta);\r\n            }\r\n            return listCarte;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public carteToString(carta: DatiCarta): string {\r\n        return carta.nome + ',' +\r\n               carta.cognome + ',' +\r\n               carta.numero + ',' +\r\n               carta.data_scadenza + ',' +\r\n               carta.csv;\r\n    } */\r\n\r\n    public getTipoCarta(numCarta: string): string {\r\n        const numIdentificatorio = numCarta.charAt(0);\r\n        switch (numIdentificatorio) {\r\n            case '3': {\r\n                return 'american-express';\r\n            }\r\n            case '4': {\r\n                return 'visa';\r\n            }\r\n            case '5': {\r\n                return 'mastercard';\r\n            }\r\n            default : {\r\n                return 'generica';\r\n            }\r\n         }\r\n    }\r\n\r\n    public validaNumeroCarta(numero: string) {\r\n        numero = numero.trim();\r\n        const regexp = new RegExp('[0-9]');\r\n        if (numero.length === 16) {\r\n            return regexp.test(numero);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public validaCSV(csv: string) {\r\n        csv = csv.trim();\r\n        const regexp = new RegExp('[0-9]');\r\n        if (csv.length === 3) {\r\n            return regexp.test(csv);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","export class Indirizzo {\r\n    nome: string;\r\n    cognome: string;\r\n    via: string;\r\n    civico: string;\r\n    cap: string;\r\n    citta: string;\r\n    provincia: string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}